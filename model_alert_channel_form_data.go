/*
 * Yugabyte Platform APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// AlertChannelFormData struct for AlertChannelFormData
type AlertChannelFormData struct {
	AlertChannelUUID string `json:"alertChannelUUID"`
	Name string `json:"name"`
	Params AlertChannelParams `json:"params"`
}

// NewAlertChannelFormData instantiates a new AlertChannelFormData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertChannelFormData(alertChannelUUID string, name string, params AlertChannelParams, ) *AlertChannelFormData {
	this := AlertChannelFormData{}
	this.AlertChannelUUID = alertChannelUUID
	this.Name = name
	this.Params = params
	return &this
}

// NewAlertChannelFormDataWithDefaults instantiates a new AlertChannelFormData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertChannelFormDataWithDefaults() *AlertChannelFormData {
	this := AlertChannelFormData{}
	return &this
}

// GetAlertChannelUUID returns the AlertChannelUUID field value
func (o *AlertChannelFormData) GetAlertChannelUUID() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.AlertChannelUUID
}

// GetAlertChannelUUIDOk returns a tuple with the AlertChannelUUID field value
// and a boolean to check if the value has been set.
func (o *AlertChannelFormData) GetAlertChannelUUIDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AlertChannelUUID, true
}

// SetAlertChannelUUID sets field value
func (o *AlertChannelFormData) SetAlertChannelUUID(v string) {
	o.AlertChannelUUID = v
}

// GetName returns the Name field value
func (o *AlertChannelFormData) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AlertChannelFormData) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AlertChannelFormData) SetName(v string) {
	o.Name = v
}

// GetParams returns the Params field value
func (o *AlertChannelFormData) GetParams() AlertChannelParams {
	if o == nil  {
		var ret AlertChannelParams
		return ret
	}

	return o.Params
}

// GetParamsOk returns a tuple with the Params field value
// and a boolean to check if the value has been set.
func (o *AlertChannelFormData) GetParamsOk() (*AlertChannelParams, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Params, true
}

// SetParams sets field value
func (o *AlertChannelFormData) SetParams(v AlertChannelParams) {
	o.Params = v
}

func (o AlertChannelFormData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["alertChannelUUID"] = o.AlertChannelUUID
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["params"] = o.Params
	}
	return json.Marshal(toSerialize)
}

type NullableAlertChannelFormData struct {
	value *AlertChannelFormData
	isSet bool
}

func (v NullableAlertChannelFormData) Get() *AlertChannelFormData {
	return v.value
}

func (v *NullableAlertChannelFormData) Set(val *AlertChannelFormData) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertChannelFormData) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertChannelFormData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertChannelFormData(val *AlertChannelFormData) *NullableAlertChannelFormData {
	return &NullableAlertChannelFormData{value: val, isSet: true}
}

func (v NullableAlertChannelFormData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertChannelFormData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


