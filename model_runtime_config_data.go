/*
 * Yugabyte Platform APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// RuntimeConfigData Runtime configuration data
type RuntimeConfigData struct {
	// List of scoped configurations
	ScopedConfigList *[]ScopedConfig `json:"scopedConfigList,omitempty"`
}

// NewRuntimeConfigData instantiates a new RuntimeConfigData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRuntimeConfigData() *RuntimeConfigData {
	this := RuntimeConfigData{}
	return &this
}

// NewRuntimeConfigDataWithDefaults instantiates a new RuntimeConfigData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRuntimeConfigDataWithDefaults() *RuntimeConfigData {
	this := RuntimeConfigData{}
	return &this
}

// GetScopedConfigList returns the ScopedConfigList field value if set, zero value otherwise.
func (o *RuntimeConfigData) GetScopedConfigList() []ScopedConfig {
	if o == nil || o.ScopedConfigList == nil {
		var ret []ScopedConfig
		return ret
	}
	return *o.ScopedConfigList
}

// GetScopedConfigListOk returns a tuple with the ScopedConfigList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuntimeConfigData) GetScopedConfigListOk() (*[]ScopedConfig, bool) {
	if o == nil || o.ScopedConfigList == nil {
		return nil, false
	}
	return o.ScopedConfigList, true
}

// HasScopedConfigList returns a boolean if a field has been set.
func (o *RuntimeConfigData) HasScopedConfigList() bool {
	if o != nil && o.ScopedConfigList != nil {
		return true
	}

	return false
}

// SetScopedConfigList gets a reference to the given []ScopedConfig and assigns it to the ScopedConfigList field.
func (o *RuntimeConfigData) SetScopedConfigList(v []ScopedConfig) {
	o.ScopedConfigList = &v
}

func (o RuntimeConfigData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ScopedConfigList != nil {
		toSerialize["scopedConfigList"] = o.ScopedConfigList
	}
	return json.Marshal(toSerialize)
}

type NullableRuntimeConfigData struct {
	value *RuntimeConfigData
	isSet bool
}

func (v NullableRuntimeConfigData) Get() *RuntimeConfigData {
	return v.value
}

func (v *NullableRuntimeConfigData) Set(val *RuntimeConfigData) {
	v.value = val
	v.isSet = true
}

func (v NullableRuntimeConfigData) IsSet() bool {
	return v.isSet
}

func (v *NullableRuntimeConfigData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRuntimeConfigData(val *RuntimeConfigData) *NullableRuntimeConfigData {
	return &NullableRuntimeConfigData{value: val, isSet: true}
}

func (v NullableRuntimeConfigData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRuntimeConfigData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


