/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// YBPTask struct for YBPTask
type YBPTask struct {
	// UUID of the resource being modified by the task
	ResourceUUID *string `json:"resourceUUID,omitempty"`
	// Task UUID
	TaskUUID *string `json:"taskUUID,omitempty"`
}

// NewYBPTask instantiates a new YBPTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewYBPTask() *YBPTask {
	this := YBPTask{}
	return &this
}

// NewYBPTaskWithDefaults instantiates a new YBPTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewYBPTaskWithDefaults() *YBPTask {
	this := YBPTask{}
	return &this
}

// GetResourceUUID returns the ResourceUUID field value if set, zero value otherwise.
func (o *YBPTask) GetResourceUUID() string {
	if o == nil || o.ResourceUUID == nil {
		var ret string
		return ret
	}
	return *o.ResourceUUID
}

// GetResourceUUIDOk returns a tuple with the ResourceUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *YBPTask) GetResourceUUIDOk() (*string, bool) {
	if o == nil || o.ResourceUUID == nil {
		return nil, false
	}
	return o.ResourceUUID, true
}

// HasResourceUUID returns a boolean if a field has been set.
func (o *YBPTask) HasResourceUUID() bool {
	if o != nil && o.ResourceUUID != nil {
		return true
	}

	return false
}

// SetResourceUUID gets a reference to the given string and assigns it to the ResourceUUID field.
func (o *YBPTask) SetResourceUUID(v string) {
	o.ResourceUUID = &v
}

// GetTaskUUID returns the TaskUUID field value if set, zero value otherwise.
func (o *YBPTask) GetTaskUUID() string {
	if o == nil || o.TaskUUID == nil {
		var ret string
		return ret
	}
	return *o.TaskUUID
}

// GetTaskUUIDOk returns a tuple with the TaskUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *YBPTask) GetTaskUUIDOk() (*string, bool) {
	if o == nil || o.TaskUUID == nil {
		return nil, false
	}
	return o.TaskUUID, true
}

// HasTaskUUID returns a boolean if a field has been set.
func (o *YBPTask) HasTaskUUID() bool {
	if o != nil && o.TaskUUID != nil {
		return true
	}

	return false
}

// SetTaskUUID gets a reference to the given string and assigns it to the TaskUUID field.
func (o *YBPTask) SetTaskUUID(v string) {
	o.TaskUUID = &v
}

func (o YBPTask) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResourceUUID != nil {
		toSerialize["resourceUUID"] = o.ResourceUUID
	}
	if o.TaskUUID != nil {
		toSerialize["taskUUID"] = o.TaskUUID
	}
	return json.Marshal(toSerialize)
}

type NullableYBPTask struct {
	value *YBPTask
	isSet bool
}

func (v NullableYBPTask) Get() *YBPTask {
	return v.value
}

func (v *NullableYBPTask) Set(val *YBPTask) {
	v.value = val
	v.isSet = true
}

func (v NullableYBPTask) IsSet() bool {
	return v.isSet
}

func (v *NullableYBPTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableYBPTask(val *YBPTask) *NullableYBPTask {
	return &NullableYBPTask{value: val, isSet: true}
}

func (v NullableYBPTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableYBPTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


