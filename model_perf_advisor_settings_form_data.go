/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// PerfAdvisorSettingsFormData struct for PerfAdvisorSettingsFormData
type PerfAdvisorSettingsFormData struct {
	// Perf advisor connection skew check interval
	ConnectionSkewIntervalMins *int32 `json:"connection_skew_interval_mins,omitempty"`
	// Perf advisor connection skew min connections
	ConnectionSkewMinConnections *int32 `json:"connection_skew_min_connections,omitempty"`
	// Perf advisor connection skew threshold
	ConnectionSkewThresholdPct *float64 `json:"connection_skew_threshold_pct,omitempty"`
	// Perf advisor cpu skew check interval
	CpuSkewIntervalMins *int32 `json:"cpu_skew_interval_mins,omitempty"`
	// Perf advisor cpu skew min cpu usage
	CpuSkewMinUsagePct *float64 `json:"cpu_skew_min_usage_pct,omitempty"`
	// Perf advisor cpu skew threshold
	CpuSkewThresholdPct *float64 `json:"cpu_skew_threshold_pct,omitempty"`
	// Perf advisor CPU usage check interval
	CpuUsageIntervalMins *int32 `json:"cpu_usage_interval_mins,omitempty"`
	// Perf advisor CPU usage threshold
	CpuUsageThreshold *float64 `json:"cpu_usage_threshold,omitempty"`
	// Enable/disable perf advisor runs for the universe
	Enabled *bool `json:"enabled,omitempty"`
	// Perf Advisor hot shard check interval
	HotShardIntervalMins *int32 `json:"hot_shard_interval_mins,omitempty"`
	// Perf advisor hot shard minimal node reads
	HotShardMinNodeReads *int32 `json:"hot_shard_min_node_reads,omitempty"`
	// Perf advisor hot shard minimal node writes
	HotShardMinNodeWrites *int32 `json:"hot_shard_min_node_writes,omitempty"`
	// Perf Advisor hot shard read skew threshold
	HotShardReadSkewThresholdPct *float64 `json:"hot_shard_read_skew_threshold_pct,omitempty"`
	// Perf Advisor hot shard write skew threshold
	HotShardWriteSkewThresholdPct *float64 `json:"hot_shard_write_skew_threshold_pct,omitempty"`
	// Perf advisor query skew check interval
	QuerySkewIntervalMins *int32 `json:"query_skew_interval_mins,omitempty"`
	// Perf advisor query skew min queries
	QuerySkewMinQueries *int32 `json:"query_skew_min_queries,omitempty"`
	// Perf advisor query skew threshold
	QuerySkewThresholdPct *float64 `json:"query_skew_threshold_pct,omitempty"`
	// Perf advisor rejected connections check interval
	RejectedConnIntervalMins *int32 `json:"rejected_conn_interval_mins,omitempty"`
	// Perf advisor rejected connections threshold
	RejectedConnThreshold *int32 `json:"rejected_conn_threshold,omitempty"`
	// Perf advisor runs frequency, in minutes
	UniverseFrequencyMins *int32 `json:"universe_frequency_mins,omitempty"`
}

// NewPerfAdvisorSettingsFormData instantiates a new PerfAdvisorSettingsFormData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPerfAdvisorSettingsFormData() *PerfAdvisorSettingsFormData {
	this := PerfAdvisorSettingsFormData{}
	return &this
}

// NewPerfAdvisorSettingsFormDataWithDefaults instantiates a new PerfAdvisorSettingsFormData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPerfAdvisorSettingsFormDataWithDefaults() *PerfAdvisorSettingsFormData {
	this := PerfAdvisorSettingsFormData{}
	return &this
}

// GetConnectionSkewIntervalMins returns the ConnectionSkewIntervalMins field value if set, zero value otherwise.
func (o *PerfAdvisorSettingsFormData) GetConnectionSkewIntervalMins() int32 {
	if o == nil || o.ConnectionSkewIntervalMins == nil {
		var ret int32
		return ret
	}
	return *o.ConnectionSkewIntervalMins
}

// GetConnectionSkewIntervalMinsOk returns a tuple with the ConnectionSkewIntervalMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfAdvisorSettingsFormData) GetConnectionSkewIntervalMinsOk() (*int32, bool) {
	if o == nil || o.ConnectionSkewIntervalMins == nil {
		return nil, false
	}
	return o.ConnectionSkewIntervalMins, true
}

// HasConnectionSkewIntervalMins returns a boolean if a field has been set.
func (o *PerfAdvisorSettingsFormData) HasConnectionSkewIntervalMins() bool {
	if o != nil && o.ConnectionSkewIntervalMins != nil {
		return true
	}

	return false
}

// SetConnectionSkewIntervalMins gets a reference to the given int32 and assigns it to the ConnectionSkewIntervalMins field.
func (o *PerfAdvisorSettingsFormData) SetConnectionSkewIntervalMins(v int32) {
	o.ConnectionSkewIntervalMins = &v
}

// GetConnectionSkewMinConnections returns the ConnectionSkewMinConnections field value if set, zero value otherwise.
func (o *PerfAdvisorSettingsFormData) GetConnectionSkewMinConnections() int32 {
	if o == nil || o.ConnectionSkewMinConnections == nil {
		var ret int32
		return ret
	}
	return *o.ConnectionSkewMinConnections
}

// GetConnectionSkewMinConnectionsOk returns a tuple with the ConnectionSkewMinConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfAdvisorSettingsFormData) GetConnectionSkewMinConnectionsOk() (*int32, bool) {
	if o == nil || o.ConnectionSkewMinConnections == nil {
		return nil, false
	}
	return o.ConnectionSkewMinConnections, true
}

// HasConnectionSkewMinConnections returns a boolean if a field has been set.
func (o *PerfAdvisorSettingsFormData) HasConnectionSkewMinConnections() bool {
	if o != nil && o.ConnectionSkewMinConnections != nil {
		return true
	}

	return false
}

// SetConnectionSkewMinConnections gets a reference to the given int32 and assigns it to the ConnectionSkewMinConnections field.
func (o *PerfAdvisorSettingsFormData) SetConnectionSkewMinConnections(v int32) {
	o.ConnectionSkewMinConnections = &v
}

// GetConnectionSkewThresholdPct returns the ConnectionSkewThresholdPct field value if set, zero value otherwise.
func (o *PerfAdvisorSettingsFormData) GetConnectionSkewThresholdPct() float64 {
	if o == nil || o.ConnectionSkewThresholdPct == nil {
		var ret float64
		return ret
	}
	return *o.ConnectionSkewThresholdPct
}

// GetConnectionSkewThresholdPctOk returns a tuple with the ConnectionSkewThresholdPct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfAdvisorSettingsFormData) GetConnectionSkewThresholdPctOk() (*float64, bool) {
	if o == nil || o.ConnectionSkewThresholdPct == nil {
		return nil, false
	}
	return o.ConnectionSkewThresholdPct, true
}

// HasConnectionSkewThresholdPct returns a boolean if a field has been set.
func (o *PerfAdvisorSettingsFormData) HasConnectionSkewThresholdPct() bool {
	if o != nil && o.ConnectionSkewThresholdPct != nil {
		return true
	}

	return false
}

// SetConnectionSkewThresholdPct gets a reference to the given float64 and assigns it to the ConnectionSkewThresholdPct field.
func (o *PerfAdvisorSettingsFormData) SetConnectionSkewThresholdPct(v float64) {
	o.ConnectionSkewThresholdPct = &v
}

// GetCpuSkewIntervalMins returns the CpuSkewIntervalMins field value if set, zero value otherwise.
func (o *PerfAdvisorSettingsFormData) GetCpuSkewIntervalMins() int32 {
	if o == nil || o.CpuSkewIntervalMins == nil {
		var ret int32
		return ret
	}
	return *o.CpuSkewIntervalMins
}

// GetCpuSkewIntervalMinsOk returns a tuple with the CpuSkewIntervalMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfAdvisorSettingsFormData) GetCpuSkewIntervalMinsOk() (*int32, bool) {
	if o == nil || o.CpuSkewIntervalMins == nil {
		return nil, false
	}
	return o.CpuSkewIntervalMins, true
}

// HasCpuSkewIntervalMins returns a boolean if a field has been set.
func (o *PerfAdvisorSettingsFormData) HasCpuSkewIntervalMins() bool {
	if o != nil && o.CpuSkewIntervalMins != nil {
		return true
	}

	return false
}

// SetCpuSkewIntervalMins gets a reference to the given int32 and assigns it to the CpuSkewIntervalMins field.
func (o *PerfAdvisorSettingsFormData) SetCpuSkewIntervalMins(v int32) {
	o.CpuSkewIntervalMins = &v
}

// GetCpuSkewMinUsagePct returns the CpuSkewMinUsagePct field value if set, zero value otherwise.
func (o *PerfAdvisorSettingsFormData) GetCpuSkewMinUsagePct() float64 {
	if o == nil || o.CpuSkewMinUsagePct == nil {
		var ret float64
		return ret
	}
	return *o.CpuSkewMinUsagePct
}

// GetCpuSkewMinUsagePctOk returns a tuple with the CpuSkewMinUsagePct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfAdvisorSettingsFormData) GetCpuSkewMinUsagePctOk() (*float64, bool) {
	if o == nil || o.CpuSkewMinUsagePct == nil {
		return nil, false
	}
	return o.CpuSkewMinUsagePct, true
}

// HasCpuSkewMinUsagePct returns a boolean if a field has been set.
func (o *PerfAdvisorSettingsFormData) HasCpuSkewMinUsagePct() bool {
	if o != nil && o.CpuSkewMinUsagePct != nil {
		return true
	}

	return false
}

// SetCpuSkewMinUsagePct gets a reference to the given float64 and assigns it to the CpuSkewMinUsagePct field.
func (o *PerfAdvisorSettingsFormData) SetCpuSkewMinUsagePct(v float64) {
	o.CpuSkewMinUsagePct = &v
}

// GetCpuSkewThresholdPct returns the CpuSkewThresholdPct field value if set, zero value otherwise.
func (o *PerfAdvisorSettingsFormData) GetCpuSkewThresholdPct() float64 {
	if o == nil || o.CpuSkewThresholdPct == nil {
		var ret float64
		return ret
	}
	return *o.CpuSkewThresholdPct
}

// GetCpuSkewThresholdPctOk returns a tuple with the CpuSkewThresholdPct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfAdvisorSettingsFormData) GetCpuSkewThresholdPctOk() (*float64, bool) {
	if o == nil || o.CpuSkewThresholdPct == nil {
		return nil, false
	}
	return o.CpuSkewThresholdPct, true
}

// HasCpuSkewThresholdPct returns a boolean if a field has been set.
func (o *PerfAdvisorSettingsFormData) HasCpuSkewThresholdPct() bool {
	if o != nil && o.CpuSkewThresholdPct != nil {
		return true
	}

	return false
}

// SetCpuSkewThresholdPct gets a reference to the given float64 and assigns it to the CpuSkewThresholdPct field.
func (o *PerfAdvisorSettingsFormData) SetCpuSkewThresholdPct(v float64) {
	o.CpuSkewThresholdPct = &v
}

// GetCpuUsageIntervalMins returns the CpuUsageIntervalMins field value if set, zero value otherwise.
func (o *PerfAdvisorSettingsFormData) GetCpuUsageIntervalMins() int32 {
	if o == nil || o.CpuUsageIntervalMins == nil {
		var ret int32
		return ret
	}
	return *o.CpuUsageIntervalMins
}

// GetCpuUsageIntervalMinsOk returns a tuple with the CpuUsageIntervalMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfAdvisorSettingsFormData) GetCpuUsageIntervalMinsOk() (*int32, bool) {
	if o == nil || o.CpuUsageIntervalMins == nil {
		return nil, false
	}
	return o.CpuUsageIntervalMins, true
}

// HasCpuUsageIntervalMins returns a boolean if a field has been set.
func (o *PerfAdvisorSettingsFormData) HasCpuUsageIntervalMins() bool {
	if o != nil && o.CpuUsageIntervalMins != nil {
		return true
	}

	return false
}

// SetCpuUsageIntervalMins gets a reference to the given int32 and assigns it to the CpuUsageIntervalMins field.
func (o *PerfAdvisorSettingsFormData) SetCpuUsageIntervalMins(v int32) {
	o.CpuUsageIntervalMins = &v
}

// GetCpuUsageThreshold returns the CpuUsageThreshold field value if set, zero value otherwise.
func (o *PerfAdvisorSettingsFormData) GetCpuUsageThreshold() float64 {
	if o == nil || o.CpuUsageThreshold == nil {
		var ret float64
		return ret
	}
	return *o.CpuUsageThreshold
}

// GetCpuUsageThresholdOk returns a tuple with the CpuUsageThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfAdvisorSettingsFormData) GetCpuUsageThresholdOk() (*float64, bool) {
	if o == nil || o.CpuUsageThreshold == nil {
		return nil, false
	}
	return o.CpuUsageThreshold, true
}

// HasCpuUsageThreshold returns a boolean if a field has been set.
func (o *PerfAdvisorSettingsFormData) HasCpuUsageThreshold() bool {
	if o != nil && o.CpuUsageThreshold != nil {
		return true
	}

	return false
}

// SetCpuUsageThreshold gets a reference to the given float64 and assigns it to the CpuUsageThreshold field.
func (o *PerfAdvisorSettingsFormData) SetCpuUsageThreshold(v float64) {
	o.CpuUsageThreshold = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *PerfAdvisorSettingsFormData) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfAdvisorSettingsFormData) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *PerfAdvisorSettingsFormData) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *PerfAdvisorSettingsFormData) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetHotShardIntervalMins returns the HotShardIntervalMins field value if set, zero value otherwise.
func (o *PerfAdvisorSettingsFormData) GetHotShardIntervalMins() int32 {
	if o == nil || o.HotShardIntervalMins == nil {
		var ret int32
		return ret
	}
	return *o.HotShardIntervalMins
}

// GetHotShardIntervalMinsOk returns a tuple with the HotShardIntervalMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfAdvisorSettingsFormData) GetHotShardIntervalMinsOk() (*int32, bool) {
	if o == nil || o.HotShardIntervalMins == nil {
		return nil, false
	}
	return o.HotShardIntervalMins, true
}

// HasHotShardIntervalMins returns a boolean if a field has been set.
func (o *PerfAdvisorSettingsFormData) HasHotShardIntervalMins() bool {
	if o != nil && o.HotShardIntervalMins != nil {
		return true
	}

	return false
}

// SetHotShardIntervalMins gets a reference to the given int32 and assigns it to the HotShardIntervalMins field.
func (o *PerfAdvisorSettingsFormData) SetHotShardIntervalMins(v int32) {
	o.HotShardIntervalMins = &v
}

// GetHotShardMinNodeReads returns the HotShardMinNodeReads field value if set, zero value otherwise.
func (o *PerfAdvisorSettingsFormData) GetHotShardMinNodeReads() int32 {
	if o == nil || o.HotShardMinNodeReads == nil {
		var ret int32
		return ret
	}
	return *o.HotShardMinNodeReads
}

// GetHotShardMinNodeReadsOk returns a tuple with the HotShardMinNodeReads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfAdvisorSettingsFormData) GetHotShardMinNodeReadsOk() (*int32, bool) {
	if o == nil || o.HotShardMinNodeReads == nil {
		return nil, false
	}
	return o.HotShardMinNodeReads, true
}

// HasHotShardMinNodeReads returns a boolean if a field has been set.
func (o *PerfAdvisorSettingsFormData) HasHotShardMinNodeReads() bool {
	if o != nil && o.HotShardMinNodeReads != nil {
		return true
	}

	return false
}

// SetHotShardMinNodeReads gets a reference to the given int32 and assigns it to the HotShardMinNodeReads field.
func (o *PerfAdvisorSettingsFormData) SetHotShardMinNodeReads(v int32) {
	o.HotShardMinNodeReads = &v
}

// GetHotShardMinNodeWrites returns the HotShardMinNodeWrites field value if set, zero value otherwise.
func (o *PerfAdvisorSettingsFormData) GetHotShardMinNodeWrites() int32 {
	if o == nil || o.HotShardMinNodeWrites == nil {
		var ret int32
		return ret
	}
	return *o.HotShardMinNodeWrites
}

// GetHotShardMinNodeWritesOk returns a tuple with the HotShardMinNodeWrites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfAdvisorSettingsFormData) GetHotShardMinNodeWritesOk() (*int32, bool) {
	if o == nil || o.HotShardMinNodeWrites == nil {
		return nil, false
	}
	return o.HotShardMinNodeWrites, true
}

// HasHotShardMinNodeWrites returns a boolean if a field has been set.
func (o *PerfAdvisorSettingsFormData) HasHotShardMinNodeWrites() bool {
	if o != nil && o.HotShardMinNodeWrites != nil {
		return true
	}

	return false
}

// SetHotShardMinNodeWrites gets a reference to the given int32 and assigns it to the HotShardMinNodeWrites field.
func (o *PerfAdvisorSettingsFormData) SetHotShardMinNodeWrites(v int32) {
	o.HotShardMinNodeWrites = &v
}

// GetHotShardReadSkewThresholdPct returns the HotShardReadSkewThresholdPct field value if set, zero value otherwise.
func (o *PerfAdvisorSettingsFormData) GetHotShardReadSkewThresholdPct() float64 {
	if o == nil || o.HotShardReadSkewThresholdPct == nil {
		var ret float64
		return ret
	}
	return *o.HotShardReadSkewThresholdPct
}

// GetHotShardReadSkewThresholdPctOk returns a tuple with the HotShardReadSkewThresholdPct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfAdvisorSettingsFormData) GetHotShardReadSkewThresholdPctOk() (*float64, bool) {
	if o == nil || o.HotShardReadSkewThresholdPct == nil {
		return nil, false
	}
	return o.HotShardReadSkewThresholdPct, true
}

// HasHotShardReadSkewThresholdPct returns a boolean if a field has been set.
func (o *PerfAdvisorSettingsFormData) HasHotShardReadSkewThresholdPct() bool {
	if o != nil && o.HotShardReadSkewThresholdPct != nil {
		return true
	}

	return false
}

// SetHotShardReadSkewThresholdPct gets a reference to the given float64 and assigns it to the HotShardReadSkewThresholdPct field.
func (o *PerfAdvisorSettingsFormData) SetHotShardReadSkewThresholdPct(v float64) {
	o.HotShardReadSkewThresholdPct = &v
}

// GetHotShardWriteSkewThresholdPct returns the HotShardWriteSkewThresholdPct field value if set, zero value otherwise.
func (o *PerfAdvisorSettingsFormData) GetHotShardWriteSkewThresholdPct() float64 {
	if o == nil || o.HotShardWriteSkewThresholdPct == nil {
		var ret float64
		return ret
	}
	return *o.HotShardWriteSkewThresholdPct
}

// GetHotShardWriteSkewThresholdPctOk returns a tuple with the HotShardWriteSkewThresholdPct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfAdvisorSettingsFormData) GetHotShardWriteSkewThresholdPctOk() (*float64, bool) {
	if o == nil || o.HotShardWriteSkewThresholdPct == nil {
		return nil, false
	}
	return o.HotShardWriteSkewThresholdPct, true
}

// HasHotShardWriteSkewThresholdPct returns a boolean if a field has been set.
func (o *PerfAdvisorSettingsFormData) HasHotShardWriteSkewThresholdPct() bool {
	if o != nil && o.HotShardWriteSkewThresholdPct != nil {
		return true
	}

	return false
}

// SetHotShardWriteSkewThresholdPct gets a reference to the given float64 and assigns it to the HotShardWriteSkewThresholdPct field.
func (o *PerfAdvisorSettingsFormData) SetHotShardWriteSkewThresholdPct(v float64) {
	o.HotShardWriteSkewThresholdPct = &v
}

// GetQuerySkewIntervalMins returns the QuerySkewIntervalMins field value if set, zero value otherwise.
func (o *PerfAdvisorSettingsFormData) GetQuerySkewIntervalMins() int32 {
	if o == nil || o.QuerySkewIntervalMins == nil {
		var ret int32
		return ret
	}
	return *o.QuerySkewIntervalMins
}

// GetQuerySkewIntervalMinsOk returns a tuple with the QuerySkewIntervalMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfAdvisorSettingsFormData) GetQuerySkewIntervalMinsOk() (*int32, bool) {
	if o == nil || o.QuerySkewIntervalMins == nil {
		return nil, false
	}
	return o.QuerySkewIntervalMins, true
}

// HasQuerySkewIntervalMins returns a boolean if a field has been set.
func (o *PerfAdvisorSettingsFormData) HasQuerySkewIntervalMins() bool {
	if o != nil && o.QuerySkewIntervalMins != nil {
		return true
	}

	return false
}

// SetQuerySkewIntervalMins gets a reference to the given int32 and assigns it to the QuerySkewIntervalMins field.
func (o *PerfAdvisorSettingsFormData) SetQuerySkewIntervalMins(v int32) {
	o.QuerySkewIntervalMins = &v
}

// GetQuerySkewMinQueries returns the QuerySkewMinQueries field value if set, zero value otherwise.
func (o *PerfAdvisorSettingsFormData) GetQuerySkewMinQueries() int32 {
	if o == nil || o.QuerySkewMinQueries == nil {
		var ret int32
		return ret
	}
	return *o.QuerySkewMinQueries
}

// GetQuerySkewMinQueriesOk returns a tuple with the QuerySkewMinQueries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfAdvisorSettingsFormData) GetQuerySkewMinQueriesOk() (*int32, bool) {
	if o == nil || o.QuerySkewMinQueries == nil {
		return nil, false
	}
	return o.QuerySkewMinQueries, true
}

// HasQuerySkewMinQueries returns a boolean if a field has been set.
func (o *PerfAdvisorSettingsFormData) HasQuerySkewMinQueries() bool {
	if o != nil && o.QuerySkewMinQueries != nil {
		return true
	}

	return false
}

// SetQuerySkewMinQueries gets a reference to the given int32 and assigns it to the QuerySkewMinQueries field.
func (o *PerfAdvisorSettingsFormData) SetQuerySkewMinQueries(v int32) {
	o.QuerySkewMinQueries = &v
}

// GetQuerySkewThresholdPct returns the QuerySkewThresholdPct field value if set, zero value otherwise.
func (o *PerfAdvisorSettingsFormData) GetQuerySkewThresholdPct() float64 {
	if o == nil || o.QuerySkewThresholdPct == nil {
		var ret float64
		return ret
	}
	return *o.QuerySkewThresholdPct
}

// GetQuerySkewThresholdPctOk returns a tuple with the QuerySkewThresholdPct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfAdvisorSettingsFormData) GetQuerySkewThresholdPctOk() (*float64, bool) {
	if o == nil || o.QuerySkewThresholdPct == nil {
		return nil, false
	}
	return o.QuerySkewThresholdPct, true
}

// HasQuerySkewThresholdPct returns a boolean if a field has been set.
func (o *PerfAdvisorSettingsFormData) HasQuerySkewThresholdPct() bool {
	if o != nil && o.QuerySkewThresholdPct != nil {
		return true
	}

	return false
}

// SetQuerySkewThresholdPct gets a reference to the given float64 and assigns it to the QuerySkewThresholdPct field.
func (o *PerfAdvisorSettingsFormData) SetQuerySkewThresholdPct(v float64) {
	o.QuerySkewThresholdPct = &v
}

// GetRejectedConnIntervalMins returns the RejectedConnIntervalMins field value if set, zero value otherwise.
func (o *PerfAdvisorSettingsFormData) GetRejectedConnIntervalMins() int32 {
	if o == nil || o.RejectedConnIntervalMins == nil {
		var ret int32
		return ret
	}
	return *o.RejectedConnIntervalMins
}

// GetRejectedConnIntervalMinsOk returns a tuple with the RejectedConnIntervalMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfAdvisorSettingsFormData) GetRejectedConnIntervalMinsOk() (*int32, bool) {
	if o == nil || o.RejectedConnIntervalMins == nil {
		return nil, false
	}
	return o.RejectedConnIntervalMins, true
}

// HasRejectedConnIntervalMins returns a boolean if a field has been set.
func (o *PerfAdvisorSettingsFormData) HasRejectedConnIntervalMins() bool {
	if o != nil && o.RejectedConnIntervalMins != nil {
		return true
	}

	return false
}

// SetRejectedConnIntervalMins gets a reference to the given int32 and assigns it to the RejectedConnIntervalMins field.
func (o *PerfAdvisorSettingsFormData) SetRejectedConnIntervalMins(v int32) {
	o.RejectedConnIntervalMins = &v
}

// GetRejectedConnThreshold returns the RejectedConnThreshold field value if set, zero value otherwise.
func (o *PerfAdvisorSettingsFormData) GetRejectedConnThreshold() int32 {
	if o == nil || o.RejectedConnThreshold == nil {
		var ret int32
		return ret
	}
	return *o.RejectedConnThreshold
}

// GetRejectedConnThresholdOk returns a tuple with the RejectedConnThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfAdvisorSettingsFormData) GetRejectedConnThresholdOk() (*int32, bool) {
	if o == nil || o.RejectedConnThreshold == nil {
		return nil, false
	}
	return o.RejectedConnThreshold, true
}

// HasRejectedConnThreshold returns a boolean if a field has been set.
func (o *PerfAdvisorSettingsFormData) HasRejectedConnThreshold() bool {
	if o != nil && o.RejectedConnThreshold != nil {
		return true
	}

	return false
}

// SetRejectedConnThreshold gets a reference to the given int32 and assigns it to the RejectedConnThreshold field.
func (o *PerfAdvisorSettingsFormData) SetRejectedConnThreshold(v int32) {
	o.RejectedConnThreshold = &v
}

// GetUniverseFrequencyMins returns the UniverseFrequencyMins field value if set, zero value otherwise.
func (o *PerfAdvisorSettingsFormData) GetUniverseFrequencyMins() int32 {
	if o == nil || o.UniverseFrequencyMins == nil {
		var ret int32
		return ret
	}
	return *o.UniverseFrequencyMins
}

// GetUniverseFrequencyMinsOk returns a tuple with the UniverseFrequencyMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfAdvisorSettingsFormData) GetUniverseFrequencyMinsOk() (*int32, bool) {
	if o == nil || o.UniverseFrequencyMins == nil {
		return nil, false
	}
	return o.UniverseFrequencyMins, true
}

// HasUniverseFrequencyMins returns a boolean if a field has been set.
func (o *PerfAdvisorSettingsFormData) HasUniverseFrequencyMins() bool {
	if o != nil && o.UniverseFrequencyMins != nil {
		return true
	}

	return false
}

// SetUniverseFrequencyMins gets a reference to the given int32 and assigns it to the UniverseFrequencyMins field.
func (o *PerfAdvisorSettingsFormData) SetUniverseFrequencyMins(v int32) {
	o.UniverseFrequencyMins = &v
}

func (o PerfAdvisorSettingsFormData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConnectionSkewIntervalMins != nil {
		toSerialize["connection_skew_interval_mins"] = o.ConnectionSkewIntervalMins
	}
	if o.ConnectionSkewMinConnections != nil {
		toSerialize["connection_skew_min_connections"] = o.ConnectionSkewMinConnections
	}
	if o.ConnectionSkewThresholdPct != nil {
		toSerialize["connection_skew_threshold_pct"] = o.ConnectionSkewThresholdPct
	}
	if o.CpuSkewIntervalMins != nil {
		toSerialize["cpu_skew_interval_mins"] = o.CpuSkewIntervalMins
	}
	if o.CpuSkewMinUsagePct != nil {
		toSerialize["cpu_skew_min_usage_pct"] = o.CpuSkewMinUsagePct
	}
	if o.CpuSkewThresholdPct != nil {
		toSerialize["cpu_skew_threshold_pct"] = o.CpuSkewThresholdPct
	}
	if o.CpuUsageIntervalMins != nil {
		toSerialize["cpu_usage_interval_mins"] = o.CpuUsageIntervalMins
	}
	if o.CpuUsageThreshold != nil {
		toSerialize["cpu_usage_threshold"] = o.CpuUsageThreshold
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.HotShardIntervalMins != nil {
		toSerialize["hot_shard_interval_mins"] = o.HotShardIntervalMins
	}
	if o.HotShardMinNodeReads != nil {
		toSerialize["hot_shard_min_node_reads"] = o.HotShardMinNodeReads
	}
	if o.HotShardMinNodeWrites != nil {
		toSerialize["hot_shard_min_node_writes"] = o.HotShardMinNodeWrites
	}
	if o.HotShardReadSkewThresholdPct != nil {
		toSerialize["hot_shard_read_skew_threshold_pct"] = o.HotShardReadSkewThresholdPct
	}
	if o.HotShardWriteSkewThresholdPct != nil {
		toSerialize["hot_shard_write_skew_threshold_pct"] = o.HotShardWriteSkewThresholdPct
	}
	if o.QuerySkewIntervalMins != nil {
		toSerialize["query_skew_interval_mins"] = o.QuerySkewIntervalMins
	}
	if o.QuerySkewMinQueries != nil {
		toSerialize["query_skew_min_queries"] = o.QuerySkewMinQueries
	}
	if o.QuerySkewThresholdPct != nil {
		toSerialize["query_skew_threshold_pct"] = o.QuerySkewThresholdPct
	}
	if o.RejectedConnIntervalMins != nil {
		toSerialize["rejected_conn_interval_mins"] = o.RejectedConnIntervalMins
	}
	if o.RejectedConnThreshold != nil {
		toSerialize["rejected_conn_threshold"] = o.RejectedConnThreshold
	}
	if o.UniverseFrequencyMins != nil {
		toSerialize["universe_frequency_mins"] = o.UniverseFrequencyMins
	}
	return json.Marshal(toSerialize)
}

type NullablePerfAdvisorSettingsFormData struct {
	value *PerfAdvisorSettingsFormData
	isSet bool
}

func (v NullablePerfAdvisorSettingsFormData) Get() *PerfAdvisorSettingsFormData {
	return v.value
}

func (v *NullablePerfAdvisorSettingsFormData) Set(val *PerfAdvisorSettingsFormData) {
	v.value = val
	v.isSet = true
}

func (v NullablePerfAdvisorSettingsFormData) IsSet() bool {
	return v.isSet
}

func (v *NullablePerfAdvisorSettingsFormData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePerfAdvisorSettingsFormData(val *PerfAdvisorSettingsFormData) *NullablePerfAdvisorSettingsFormData {
	return &NullablePerfAdvisorSettingsFormData{value: val, isSet: true}
}

func (v NullablePerfAdvisorSettingsFormData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePerfAdvisorSettingsFormData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


