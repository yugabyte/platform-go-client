openapi: 3.0.1
info:
  contact:
    name: https://docs.yugabyte.com
  description: ALPHA - NOT FOR EXTERNAL USE
  license:
    name: Polyform Free Trial License 1.0.0
    url: https://github.com/yugabyte/yugabyte-db/blob/master/licenses/POLYFORM-FREE-TRIAL-LICENSE-1.0.0.txt
  termsOfService: TODO(chirag)
  title: Yugabyte Platform APIs
  version: v1
externalDocs:
  description: About Yugabyte Platform
  url: https://docs.yugabyte.com/latest/yugabyte-platform/
servers:
- url: /
tags:
- name: Access Keys
- name: Alerts
- name: Asynchronous Replication
- name: Audit
- name: Availability Zones
- name: Backups
- name: Certificate Info
- name: Cloud providers
- name: Customer Configuration
- name: Customer Tasks
- name: Customer management
- name: Encryption at rest
- name: Instance types
- name: LoggingConfig
- name: Maintenance windows
- name: Metrics
- name: Node instances
- name: Region management
- name: Release management
- name: Runtime configuration
- name: Schedule management
- name: Session management
- name: Support Bundle management
- name: Table management
- name: Tablet server management
- name: Universe Upgrades Management
- name: Universe actions
- name: Universe database management
- name: Universe information
- name: Universe management
- name: Universe node metadata (metamaster)
- name: UniverseClusterMutations
- name: User management
paths:
  /api/v1/app_version:
    get:
      operationId: appVersion
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  exampleSetFlag: true
                  type: string
                exampleSetFlag: true
                type: object
          description: successful operation
      summary: appVersion
      tags:
      - Session management
  /api/v1/customer_count:
    get:
      operationId: customerCount
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerCountResp'
          description: successful operation
      summary: customerCount
      tags:
      - Session management
  /api/v1/customers:
    get:
      operationId: ListOfCustomers
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/Customer'
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List customers
      tags:
      - Customer management
  /api/v1/customers/{cUUID}:
    delete:
      operationId: deleteCustomer
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete a customer
      tags:
      - Customer management
    get:
      operationId: CustomerDetail
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDetailsData'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get a customer's details
      tags:
      - Customer management
    put:
      operationId: UpdateCustomer
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAlertData'
        description: Customer data to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Update a customer
      tags:
      - Customer management
      x-codegen-request-body-name: Customer
  /api/v1/customers/{cUUID}/alert_channels:
    get:
      operationId: listAlertChannels
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/AlertChannel'
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List all alert channels
      tags:
      - Alerts
    post:
      operationId: createAlertChannel
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertChannelFormData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertChannel'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Create an alert channel
      tags:
      - Alerts
      x-codegen-request-body-name: CreateAlertChannelRequest
  /api/v1/customers/{cUUID}/alert_channels/{acUUID}:
    delete:
      operationId: deleteAlertChannel
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: acUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete an alert channel
      tags:
      - Alerts
    get:
      operationId: getAlertChannel
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: acUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertChannel'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get an alert channel
      tags:
      - Alerts
    put:
      operationId: updateAlertChannel
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: acUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertChannelFormData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertChannel'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Update an alert channel
      tags:
      - Alerts
      x-codegen-request-body-name: UpdateAlertChannelRequest
  /api/v1/customers/{cUUID}/alert_configurations:
    post:
      operationId: createAlertConfiguration
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertConfiguration'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertConfiguration'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Create an alert configuration
      tags:
      - Alerts
      x-codegen-request-body-name: CreateAlertConfigurationRequest
  /api/v1/customers/{cUUID}/alert_configurations/list:
    post:
      operationId: listAlertConfigurations
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertConfigurationApiFilter'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/AlertConfiguration'
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get filtered list of alert configurations
      tags:
      - Alerts
      x-codegen-request-body-name: ListAlertConfigurationsRequest
  /api/v1/customers/{cUUID}/alert_configurations/page:
    post:
      operationId: pageAlertConfigurations
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertConfigurationPagedApiQuery'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertConfigurationPagedResponse'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List all alert configurations (paginated)
      tags:
      - Alerts
      x-codegen-request-body-name: PageAlertConfigurationsRequest
  /api/v1/customers/{cUUID}/alert_configurations/{configurationUUID}:
    delete:
      operationId: deleteAlertConfiguration
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: configurationUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete an alert configuration
      tags:
      - Alerts
    get:
      operationId: getAlertConfiguration
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: configurationUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertConfiguration'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get an alert configuration
      tags:
      - Alerts
    put:
      operationId: updateAlertConfiguration
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: configurationUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertConfiguration'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertConfiguration'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Update an alert configuration
      tags:
      - Alerts
      x-codegen-request-body-name: UpdateAlertConfigurationRequest
  /api/v1/customers/{cUUID}/alert_configurations/{configurationUUID}/test_alert:
    post:
      operationId: sendTestAlert
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: configurationUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Send test alert for alert configuration
      tags:
      - Alerts
  /api/v1/customers/{cUUID}/alert_destinations:
    get:
      operationId: listAlertDestinations
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/AlertDefinition'
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List alert destinations
      tags:
      - Alerts
    post:
      operationId: createAlertDestination
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertDestinationFormData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertDestination'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Create an alert destination
      tags:
      - Alerts
      x-codegen-request-body-name: CreateAlertDestinationRequest
  /api/v1/customers/{cUUID}/alert_destinations/{adUUID}:
    delete:
      operationId: deleteAlertDestination
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: adUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete an alert destination
      tags:
      - Alerts
    get:
      operationId: getAlertDestination
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: adUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertDestination'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get an alert destination
      tags:
      - Alerts
    put:
      operationId: updateAlertDestination
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: adUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertDestinationFormData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertDestination'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Update an alert destination
      tags:
      - Alerts
      x-codegen-request-body-name: UpdateAlertDestinationRequest
  /api/v1/customers/{cUUID}/alert_templates:
    post:
      operationId: listAlertTemplates
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertTemplateApiFilter'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/AlertConfigurationTemplate'
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get filtered list of alert configuration templates
      tags:
      - Alerts
      x-codegen-request-body-name: ListTemplatesRequest
  /api/v1/customers/{cUUID}/alerts:
    get:
      operationId: listOfAlerts
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/Alert'
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List all alerts
      tags:
      - Alerts
  /api/v1/customers/{cUUID}/alerts/acknowledge:
    post:
      operationId: acknowledgeByFilter
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertApiFilter'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/Alert'
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Acknowledge all alerts
      tags:
      - Alerts
      x-codegen-request-body-name: AcknowledgeAlertsRequest
  /api/v1/customers/{cUUID}/alerts/active:
    get:
      operationId: listActive
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/Alert'
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List active alerts
      tags:
      - Alerts
  /api/v1/customers/{cUUID}/alerts/count:
    post:
      operationId: countAlerts
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertApiFilter'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: true
                format: int32
                type: integer
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Count alerts
      tags:
      - Alerts
      x-codegen-request-body-name: CountAlertsRequest
  /api/v1/customers/{cUUID}/alerts/page:
    post:
      operationId: pageAlerts
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertPagedApiQuery'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertPagedResponse'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List alerts (paginated)
      tags:
      - Alerts
      x-codegen-request-body-name: PageAlertsRequest
  /api/v1/customers/{cUUID}/alerts/{alertUUID}:
    get:
      operationId: get
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: alertUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get details of an alert
      tags:
      - Alerts
  /api/v1/customers/{cUUID}/alerts/{alertUUID}/acknowledge:
    post:
      operationId: acknowledge
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: alertUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Acknowledge an alert
      tags:
      - Alerts
  /api/v1/customers/{cUUID}/backups:
    delete:
      operationId: deleteBackups
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTasks'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete backups
      tags:
      - Backups
    post:
      operationId: createBackupV2
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupRequestParams'
        description: Backup data to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Create a backup V2
      tags:
      - Table management
      x-codegen-request-body-name: Backup
  /api/v1/customers/{cUUID}/backups/page:
    post:
      operationId: listBackupsV2
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupPagedApiQuery'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupPagedApiResponse'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List Backups (paginated) V2
      tags:
      - Backups
      x-codegen-request-body-name: PageBackupsRequest
  /api/v1/customers/{cUUID}/backups/{backupUUID}:
    get:
      operationId: getBackupV2
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: backupUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get Backup V2
      tags:
      - Backups
    put:
      description: Edit a backup
      operationId: editBackupV2
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: backupUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditBackupParams'
        description: Parameters of the backup to be edited
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Edit a backup V2
      tags:
      - Backups
      x-codegen-request-body-name: backup
  /api/v1/customers/{cUUID}/backups/{backupUUID}/stop:
    post:
      description: Stop an in-progress backup
      operationId: stopBackup
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: backupUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Stop a backup
      tags:
      - Backups
  /api/v1/customers/{cUUID}/certificates:
    get:
      operationId: getListOfCertificate
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/CertificateInfo'
                type: array
          description: successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPError'
          description: If there was a server or database issue when listing the regions
      security:
      - apiKeyAuth: []
      summary: List a customer's certificates
      tags:
      - Certificate Info
    post:
      operationId: upload
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateParams'
        description: certificate params of the backup to be restored
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: true
                format: uuid
                type: string
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Restore a certificate from backup
      tags:
      - Certificate Info
      x-codegen-request-body-name: certificate
  /api/v1/customers/{cUUID}/certificates/create_self_signed_cert:
    post:
      operationId: createSelfSignedCert
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              exampleSetFlag: false
              type: string
        description: certificate label
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: true
                format: uuid
                type: string
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Create a self signed certificate
      tags:
      - Certificate Info
      x-codegen-request-body-name: label
  /api/v1/customers/{cUUID}/certificates/{name}:
    get:
      operationId: getCertificate
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: name
        required: true
        schema:
          exampleSetFlag: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: true
                format: uuid
                type: string
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get a certificate's UUID
      tags:
      - Certificate Info
  /api/v1/customers/{cUUID}/certificates/{rUUID}:
    delete:
      operationId: deleteCertificate
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: rUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete a certificate
      tags:
      - Certificate Info
    post:
      operationId: getClientCert
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: rUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCertParams'
        description: post certificate info
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDetails'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Add a client certificate
      tags:
      - Certificate Info
      x-codegen-request-body-name: certificate
  /api/v1/customers/{cUUID}/certificates/{rUUID}/download:
    get:
      operationId: getRootCert
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: rUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: true
                type: object
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get a customer's root certificate
      tags:
      - Certificate Info
  /api/v1/customers/{cUUID}/certificates/{rUUID}/edit:
    post:
      operationId: editCertificate
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: rUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Edit TLS certificate config details
      tags:
      - Certificate Info
  /api/v1/customers/{cUUID}/certificates/{rUUID}/update_empty_cert:
    post:
      operationId: updateEmptyCustomCert
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: rUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateInfo'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Update an empty certificate
      tags:
      - Certificate Info
  /api/v1/customers/{cUUID}/configs:
    get:
      operationId: getListOfCustomerConfig
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/CustomerConfigUI'
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List all customer configurations
      tags:
      - Customer Configuration
    post:
      operationId: createCustomerConfig
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerConfig'
        description: Configuration data to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerConfig'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Create a customer configuration
      tags:
      - Customer Configuration
      x-codegen-request-body-name: Config
  /api/v1/customers/{cUUID}/configs/{configUUID}:
    delete:
      operationId: deleteCustomerConfig
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: configUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: query
        name: isDeleteBackups
        schema:
          default: false
          exampleSetFlag: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete a customer configuration
      tags:
      - Customer Configuration
    put:
      operationId: editCustomerConfig
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: configUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerConfig'
        description: Configuration data to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerConfig'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Update a customer configuration
      tags:
      - Customer Configuration
      x-codegen-request-body-name: Config
  /api/v1/customers/{cUUID}/configs/{configUUID}/delete:
    delete:
      operationId: deleteCustomerConfigV2
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: configUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: query
        name: isDeleteBackups
        schema:
          default: false
          exampleSetFlag: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete a customer configuration V2
      tags:
      - Customer Configuration
  /api/v1/customers/{cUUID}/configs/{configUUID}/edit:
    put:
      operationId: editCustomerConfig
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: configUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerConfig'
        description: Configuration data to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerConfig'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Update a customer configuration V2
      tags:
      - Customer Configuration
      x-codegen-request-body-name: Config
  /api/v1/customers/{cUUID}/cost:
    get:
      operationId: getUniverseCostForAll
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/UniverseResourceDetails'
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get a cost estimate for all universes
      tags:
      - Universe information
  /api/v1/customers/{cUUID}/create_backup_schedule:
    post:
      operationId: createBackupScheduleV2
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupRequestParams'
        description: Parameters of the backup to be restored
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Create Backup Schedule V2
      tags:
      - Table management
      x-codegen-request-body-name: backup
  /api/v1/customers/{cUUID}/delete_backups:
    delete:
      operationId: deleteBackupsv2
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTasks'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete backups V2
      tags:
      - Backups
  /api/v1/customers/{cUUID}/host_info:
    get:
      operationId: getHostInfo
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  exampleSetFlag: true
                  properties: {}
                  type: object
                exampleSetFlag: true
                type: object
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get a customer's host info
      tags:
      - Customer management
  /api/v1/customers/{cUUID}/kms_configs:
    get:
      operationId: listKMSConfigs
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  exampleSetFlag: true
                  properties: {}
                  type: object
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List KMS configurations
      tags:
      - Encryption at rest
  /api/v1/customers/{cUUID}/kms_configs/{configUUID}:
    delete:
      operationId: deleteKMSConfig
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: configUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete a KMS configuration
      tags:
      - Encryption at rest
    get:
      operationId: getKMSConfig
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: configUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  exampleSetFlag: true
                  properties: {}
                  type: object
                exampleSetFlag: true
                type: object
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get details of a KMS configuration
      tags:
      - Encryption at rest
  /api/v1/customers/{cUUID}/kms_configs/{configUUID}/edit:
    post:
      operationId: editKMSConfig
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: configUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              exampleSetFlag: false
              type: object
        description: KMS config to be edited
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Edit a KMS configuration
      tags:
      - Encryption at rest
      x-codegen-request-body-name: KMS config
  /api/v1/customers/{cUUID}/kms_configs/{kmsProvider}:
    post:
      operationId: createKMSConfig
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: kmsProvider
        required: true
        schema:
          exampleSetFlag: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              exampleSetFlag: false
              type: object
        description: KMS config to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Create a KMS configuration
      tags:
      - Encryption at rest
      x-codegen-request-body-name: KMS config
  /api/v1/customers/{cUUID}/maintenance_windows:
    post:
      operationId: create
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenanceWindow'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintenanceWindow'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Create maintenance window
      tags:
      - Maintenance windows
      x-codegen-request-body-name: CreateMaintenanceWindowRequest
  /api/v1/customers/{cUUID}/maintenance_windows/list:
    post:
      operationId: listOfMaintenanceWindows
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/MaintenanceWindow'
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List maintenance windows
      tags:
      - Maintenance windows
  /api/v1/customers/{cUUID}/maintenance_windows/page:
    post:
      operationId: page
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenanceWindowPagedApiQuery'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintenanceWindowPagedResponse'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List maintenance windows (paginated)
      tags:
      - Maintenance windows
      x-codegen-request-body-name: PageMaintenanceWindowsRequest
  /api/v1/customers/{cUUID}/maintenance_windows/{windowUUID}:
    delete:
      operationId: delete
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: windowUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete maintenance window
      tags:
      - Maintenance windows
    get:
      operationId: get
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: windowUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintenanceWindow'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get details of a maintenance window
      tags:
      - Maintenance windows
    put:
      operationId: update
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: windowUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenanceWindow'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintenanceWindow'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Update maintenance window
      tags:
      - Maintenance windows
      x-codegen-request-body-name: UpdateMaintenanceWindowRequest
  /api/v1/customers/{cUUID}/metrics:
    post:
      operationId: metrics
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricQueryParams'
        description: Metrics to be added
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  exampleSetFlag: true
                  properties: {}
                  type: object
                exampleSetFlag: true
                type: object
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPError'
          description: When request fails validations.
      security:
      - apiKeyAuth: []
      summary: Add metrics to a customer
      tags:
      - Customer management
      x-codegen-request-body-name: Metrics
  /api/v1/customers/{cUUID}/nodes/{nodeUUID}/list:
    get:
      operationId: getNodeInstance
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: nodeUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeInstance'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get a node instance
      tags:
      - Node instances
  /api/v1/customers/{cUUID}/providers:
    get:
      operationId: getListOfProviders
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: query
        name: name
        schema:
          default: "null"
          exampleSetFlag: false
          type: string
      - in: query
        name: providerCode
        schema:
          default: "null"
          exampleSetFlag: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/Provider'
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List cloud providers
      tags:
      - Cloud providers
    post:
      operationId: createProviders
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Provider'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Create a provider
      tags:
      - Cloud providers
      x-codegen-request-body-name: CreateProviderRequest
  /api/v1/customers/{cUUID}/providers/{pUUID}/access_keys:
    get:
      operationId: list
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: pUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/AccessKey'
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List access keys for a specific provider
      tags:
      - Access Keys
    post:
      operationId: create_accesskey
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: pUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKey'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Create an access key
      tags:
      - Access Keys
  /api/v1/customers/{cUUID}/providers/{pUUID}/access_keys/{keyCode}:
    delete:
      operationId: delete_accesskey
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: pUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: keyCode
        required: true
        schema:
          exampleSetFlag: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete an access key
      tags:
      - Access Keys
    get:
      operationId: index
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: pUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: keyCode
        required: true
        schema:
          exampleSetFlag: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKey'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get an access key
      tags:
      - Access Keys
  /api/v1/customers/{cUUID}/providers/{pUUID}/edit:
    put:
      operationId: editProvider
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: pUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditProviderRequest'
        description: edit provider form data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Update a provider
      tags:
      - Cloud providers
      x-codegen-request-body-name: EditProviderFormData
  /api/v1/customers/{cUUID}/providers/{pUUID}/instance_types:
    get:
      operationId: listOfInstanceType
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: pUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - explode: true
        in: query
        name: zone
        schema:
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/InstanceType'
                type: array
          description: successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPError'
          description: If there was a server or database issue when listing the instance
            types
      security:
      - apiKeyAuth: []
      summary: List a provider's instance types
      tags:
      - Instance types
    post:
      operationId: createInstanceType
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: pUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceType'
        description: Instance type data of the instance to be stored
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceType'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Create an instance type
      tags:
      - Instance types
      x-codegen-request-body-name: Instance type
  /api/v1/customers/{cUUID}/providers/{pUUID}/instance_types/{code}:
    delete:
      operationId: deleteInstanceType
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: pUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: code
        required: true
        schema:
          exampleSetFlag: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete an instance type
      tags:
      - Instance types
    get:
      operationId: instanceTypeDetail
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: pUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: code
        required: true
        schema:
          exampleSetFlag: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceType'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get details of an instance type
      tags:
      - Instance types
  /api/v1/customers/{cUUID}/providers/{pUUID}/instances/{instanceIP}:
    delete:
      operationId: deleteInstance
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: pUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: instanceIP
        required: true
        schema:
          exampleSetFlag: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete a node instance
      tags:
      - Node instances
    post:
      operationId: detachedNodeAction
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: pUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: instanceIP
        required: true
        schema:
          exampleSetFlag: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Detached node action
      tags:
      - Node instances
  /api/v1/customers/{cUUID}/providers/{pUUID}/nodes/list:
    get:
      operationId: listByProvider
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: pUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/NodeInstance'
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List all of a provider's node instances
      tags:
      - Node instances
  /api/v1/customers/{cUUID}/providers/{pUUID}/refresh_pricing:
    put:
      description: Refresh provider pricing info
      operationId: refreshPricing
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: pUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Refresh pricing
      tags:
      - Cloud providers
  /api/v1/customers/{cUUID}/providers/{pUUID}/regions:
    get:
      operationId: getRegion
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: pUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/Region'
                type: array
          description: successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPError'
          description: If there was a server or database issue when listing the regions
      security:
      - apiKeyAuth: []
      summary: List a provider's regions
      tags:
      - Region management
    post:
      operationId: createRegion
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: pUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionFormData'
        description: region form data for new region to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Create a new region
      tags:
      - Region management
      x-codegen-request-body-name: region
  /api/v1/customers/{cUUID}/providers/{pUUID}/regions/{rUUID}:
    delete:
      operationId: deleteRegion
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: pUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: rUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: true
                type: object
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete a region
      tags:
      - Region management
  /api/v1/customers/{cUUID}/providers/{pUUID}/regions/{rUUID}/releases:
    get:
      operationId: getListOfRegionReleases
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: pUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: rUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: query
        name: includeMetadata
        schema:
          default: false
          exampleSetFlag: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  exampleSetFlag: true
                  properties: {}
                  type: object
                exampleSetFlag: true
                type: object
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List all releases valid in region
      tags:
      - Release management
  /api/v1/customers/{cUUID}/providers/{pUUID}/regions/{rUUID}/zones:
    get:
      operationId: listOfAZ
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: pUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: rUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/AvailabilityZone'
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List availability zones
      tags:
      - Availability Zones
    post:
      operationId: createAZ
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: pUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: rUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityZoneFormData'
        description: Availability zone form data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/AvailabilityZone'
                exampleSetFlag: true
                type: object
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Create an availability zone
      tags:
      - Availability Zones
      x-codegen-request-body-name: azFormData
  /api/v1/customers/{cUUID}/providers/{pUUID}/regions/{rUUID}/zones/{azUUID}:
    delete:
      operationId: deleteAZ
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: pUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: rUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: azUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete an availability zone
      tags:
      - Availability Zones
  /api/v1/customers/{cUUID}/regions:
    get:
      operationId: listAllRegions
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/Region'
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List regions for all providers
      tags:
      - Region management
  /api/v1/customers/{cUUID}/releases:
    get:
      operationId: getListOfReleases
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: query
        name: includeMetadata
        schema:
          default: false
          exampleSetFlag: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  exampleSetFlag: true
                  properties: {}
                  type: object
                exampleSetFlag: true
                type: object
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List all releases
      tags:
      - Release management
    post:
      operationId: createRelease
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseFormData'
        description: Release data for remote downloading to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Create a release
      tags:
      - Release management
      x-codegen-request-body-name: Release
    put:
      operationId: refresh
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Refresh a release
      tags:
      - Release management
  /api/v1/customers/{cUUID}/releases/{name}:
    delete:
      operationId: deleteRelease
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: name
        required: true
        schema:
          exampleSetFlag: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseMetadata'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete a release
      tags:
      - Release management
    put:
      operationId: updateRelease
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: name
        required: true
        schema:
          exampleSetFlag: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              exampleSetFlag: false
              type: object
        description: Release data to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseMetadata'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Update a release
      tags:
      - Release management
      x-codegen-request-body-name: Release
  /api/v1/customers/{cUUID}/restore:
    post:
      operationId: restoreBackupV2
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreBackupParams'
        description: Parameters of the backup to be restored
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Restore from a backup V2
      tags:
      - Backups
      x-codegen-request-body-name: backup
  /api/v1/customers/{cUUID}/runtime_config/scopes:
    get:
      description: "Lists all (including empty scopes) runtime config scopes for current\
        \ customer. List includes the Global scope that spans multiple customers,\
        \ scope for customer specific overrides for current customer and one scope\
        \ each for each universe and provider."
      operationId: listScopes
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuntimeConfigData'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List configuration scopes
      tags:
      - Runtime configuration
  /api/v1/customers/{cUUID}/runtime_config/{scope}:
    get:
      description: Lists all runtime config entries for a given scope for current
        customer.
      operationId: getConfig
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: scope
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: query
        name: includeInherited
        schema:
          default: false
          exampleSetFlag: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuntimeConfigData'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List configuration entries for a scope
      tags:
      - Runtime configuration
  /api/v1/customers/{cUUID}/runtime_config/{scope}/key/{key}:
    delete:
      operationId: deleteKey
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: scope
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: key
        required: true
        schema:
          exampleSetFlag: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete a configuration key
      tags:
      - Runtime configuration
    get:
      operationId: getConfigurationKey
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: scope
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: key
        required: true
        schema:
          exampleSetFlag: false
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                exampleSetFlag: true
                type: string
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get a configuration key
      tags:
      - Runtime configuration
    put:
      operationId: setKey
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: scope
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: key
        required: true
        schema:
          exampleSetFlag: false
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              exampleSetFlag: false
              type: string
        description: New value for config key
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Update a configuration key
      tags:
      - Runtime configuration
      x-codegen-request-body-name: newValue
  /api/v1/customers/{cUUID}/schedules:
    get:
      operationId: listSchedules
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/Schedule'
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List schedules
      tags:
      - Schedule management
  /api/v1/customers/{cUUID}/schedules/page:
    post:
      operationId: listSchedulesV2
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SchedulePagedApiQuery'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchedulePagedResponse'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List schedules V2
      tags:
      - Schedule management
      x-codegen-request-body-name: PageScheduleRequest
  /api/v1/customers/{cUUID}/schedules/{sUUID}:
    delete:
      operationId: deleteSchedule
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: sUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete a schedule
      tags:
      - Schedule management
    get:
      operationId: getSchedule
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: sUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get Schedule
      tags:
      - Schedule management
    put:
      operationId: editBackupScheduleV2
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: sUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditBackupScheduleParams'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Edit a backup schedule V2
      tags:
      - Schedule management
      x-codegen-request-body-name: body
  /api/v1/customers/{cUUID}/schedules/{sUUID}/delete:
    delete:
      operationId: deleteScheduleV2
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: sUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete a schedule V2
      tags:
      - Schedule management
  /api/v1/customers/{cUUID}/tasks/{tUUID}:
    get:
      operationId: taskStatus
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: tUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: true
                type: object
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get a task's status
      tags:
      - Customer Tasks
  /api/v1/customers/{cUUID}/tasks/{tUUID}/abort:
    post:
      description: Aborts a running task
      operationId: abortTask
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: tUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Abort a task
      tags:
      - Customer Tasks
  /api/v1/customers/{cUUID}/tasks/{tUUID}/audit_info:
    get:
      operationId: getTaskAudit
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: tUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audit'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get audit info for a task
      tags:
      - Audit
  /api/v1/customers/{cUUID}/tasks/{tUUID}/audit_user:
    get:
      operationId: getUserFromTask
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: tUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audit'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get the user associated with a task
      tags:
      - Audit
  /api/v1/customers/{cUUID}/tasks/{tUUID}/failed:
    get:
      operationId: failedSubtasks
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: tUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  exampleSetFlag: true
                  properties: {}
                  type: object
                exampleSetFlag: true
                type: object
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get a task's failed subtasks
      tags:
      - Customer Tasks
  /api/v1/customers/{cUUID}/tasks/{tUUID}/retry:
    post:
      description: Retry a Universe task.
      operationId: retryTask
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: tUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniverseResp'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Retry a Universe task
      tags:
      - Customer Tasks
  /api/v1/customers/{cUUID}/tasks_list:
    get:
      operationId: tasksList
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: query
        name: uUUID
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/CustomerTaskData'
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List task
      tags:
      - Customer Tasks
  /api/v1/customers/{cUUID}/universes:
    get:
      operationId: listUniverses
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: query
        name: name
        schema:
          default: "null"
          exampleSetFlag: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/UniverseResp'
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List universes
      tags:
      - Universe management
  /api/v1/customers/{cUUID}/universes/clusters:
    post:
      description: This will configure and create universe with (optionally) multiple
        clusters. Just fill in the userIntent for PRIMARY and (optionally) an ASYNC
        cluster
      operationId: createAllClusters
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniverseConfigureTaskParams'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Create Universe Clusters
      tags:
      - UniverseClusterMutations
      x-codegen-request-body-name: UniverseConfigureTaskParams
  /api/v1/customers/{cUUID}/universes/import:
    post:
      operationId: importUniverse
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportUniverseFormData'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Import a universe
      tags:
      - Universe actions
  /api/v1/customers/{cUUID}/universes/{uniUUID}:
    delete:
      operationId: deleteUniverse
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: query
        name: isForceDelete
        schema:
          default: false
          exampleSetFlag: false
          type: boolean
      - in: query
        name: isDeleteBackups
        schema:
          default: false
          exampleSetFlag: false
          type: boolean
      - in: query
        name: isDeleteAssociatedCerts
        schema:
          default: false
          exampleSetFlag: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete a universe
      tags:
      - Universe management
    get:
      operationId: getUniverse
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniverseResp'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get a universe
      tags:
      - Universe management
  /api/v1/customers/{cUUID}/universes/{uniUUID}/backups:
    get:
      operationId: ListOfBackups
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/Backup'
                type: array
          description: successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPError'
          description: If there was a server or database issue when listing the backups
      security:
      - apiKeyAuth: []
      summary: List a customer's backups
      tags:
      - Backups
  /api/v1/customers/{cUUID}/universes/{uniUUID}/backups/restore:
    post:
      operationId: restore
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupTableParams'
        description: Parameters of the backup to be restored
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Restore from a backup
      tags:
      - Backups
      x-codegen-request-body-name: backup
  /api/v1/customers/{cUUID}/universes/{uniUUID}/backups/tasks/{tUUID}:
    get:
      operationId: fetchBackupsByTaskUUID
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: tUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/Backup'
                type: array
          description: successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPError'
          description: If there was a server or database issue when listing the backups
      security:
      - apiKeyAuth: []
      summary: List a task's backups
      tags:
      - Backups
  /api/v1/customers/{cUUID}/universes/{uniUUID}/clusters/primary:
    put:
      description: This will update primary cluster of existing universe.Use API to
        GET current universe. Lookup universeDetails attribute of the universe resource
        returned. Update the necessary field (e.g. numNodes) Use this updated universeDetails
        as request body. See https://github.com/yugabyte/yugabyte-db/blob/master/managed/api-examples/python-simple/edit-universe.ipynb
      operationId: updatePrimaryCluster
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniverseConfigureTaskParams'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Update Primary Cluster
      tags:
      - UniverseClusterMutations
      x-codegen-request-body-name: UniverseConfigureTaskParams
  /api/v1/customers/{cUUID}/universes/{uniUUID}/clusters/read_only:
    post:
      description: This will add a readonly cluster to existing universe. Just fill
        in the userIntent for ASYNC cluster.
      operationId: createReadOnlyCluster
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniverseDefinitionTaskParams'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Create ReadOnly Cluster
      tags:
      - UniverseClusterMutations
      x-codegen-request-body-name: UniverseConfigureTaskParams
    put:
      description: This will update readonly cluster of existing universe.Use API
        to GET current universe. Lookup universeDetails attribute of the universe
        resource returned. Update the necessary field (e.g. numNodes) Use this updated
        universeDetails as request body. See https://github.com/yugabyte/yugabyte-db/blob/master/managed/api-examples/python-simple/edit-universe.ipynb
      operationId: updateReadOnlyCluster
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniverseConfigureTaskParams'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Update Readonly Cluster
      tags:
      - UniverseClusterMutations
      x-codegen-request-body-name: UniverseConfigureTaskParams
  /api/v1/customers/{cUUID}/universes/{uniUUID}/clusters/read_only/{clustUUID}:
    delete:
      description: This will delete readonly cluster of existing universe.
      operationId: deleteReadonlyCluster
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: clustUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: query
        name: isForceDelete
        schema:
          default: false
          exampleSetFlag: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete Readonly Cluster
      tags:
      - UniverseClusterMutations
  /api/v1/customers/{cUUID}/universes/{uniUUID}/config_alerts:
    post:
      operationId: configureUniverseAlerts
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Configure alerts for a universe
      tags:
      - Universe management
  /api/v1/customers/{cUUID}/universes/{uniUUID}/cost:
    get:
      operationId: getUniverseCost
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniverseResourceDetails'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get a cost estimate for a universe
      tags:
      - Universe information
  /api/v1/customers/{cUUID}/universes/{uniUUID}/create_db_credentials:
    post:
      operationId: createUserInDB
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Create a database user for a universe
      tags:
      - Universe database management
  /api/v1/customers/{cUUID}/universes/{uniUUID}/health_check:
    get:
      description: "Checks the health of all tablet servers and masters in the universe,\
        \ as well as certain conditions on the machines themselves, including disk\
        \ utilization, presence of FATAL or core files, and more."
      operationId: healthCheckUniverse
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: true
                type: object
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Run a universe health check
      tags:
      - Universe information
  /api/v1/customers/{cUUID}/universes/{uniUUID}/kms:
    delete:
      operationId: removeKeyRefHistory
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Remove a universe's key reference history
      tags:
      - Encryption at rest
    get:
      operationId: getKeyRefHistory
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  exampleSetFlag: true
                  properties: {}
                  type: object
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get a universe's key reference history
      tags:
      - Encryption at rest
    post:
      operationId: retrieveKey
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  exampleSetFlag: true
                  properties: {}
                  type: object
                exampleSetFlag: true
                type: object
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Retrive a universe's KMS key
      tags:
      - Encryption at rest
  /api/v1/customers/{cUUID}/universes/{uniUUID}/kms/key_ref:
    get:
      operationId: getCurrentKeyRef
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  exampleSetFlag: true
                  properties: {}
                  type: object
                exampleSetFlag: true
                type: object
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get a universe's key reference
      tags:
      - Encryption at rest
  /api/v1/customers/{cUUID}/universes/{uniUUID}/leader:
    get:
      operationId: getMasterLeaderIP
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: true
                type: object
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get IP address of a universe's master leader
      tags:
      - Universe information
  /api/v1/customers/{cUUID}/universes/{uniUUID}/live_queries:
    get:
      operationId: getLiveQueries
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: true
                type: object
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get live queries for a universe
      tags:
      - Universe information
  /api/v1/customers/{cUUID}/universes/{uniUUID}/mark_helm3_compatible:
    put:
      operationId: setUniverseHelm3Compatible
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Flag a universe as Helm 3-compatible
      tags:
      - Universe management
  /api/v1/customers/{cUUID}/universes/{uniUUID}/masters:
    get:
      operationId: getMasterAddresses
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: true
                type: string
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List a master node's addresses
      tags:
      - Universe node metadata (metamaster)
  /api/v1/customers/{cUUID}/universes/{uniUUID}/multi_table_backup:
    put:
      operationId: createMultiTableBackup
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiTableBackupRequestParams'
        description: Table backup data to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: If requested schedule backup.
      security:
      - apiKeyAuth: []
      summary: Create a multi-table backup
      tags:
      - Backups
      - Table management
      x-codegen-request-body-name: Table backup
  /api/v1/customers/{cUUID}/universes/{uniUUID}/pause:
    post:
      operationId: pauseUniverse
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Pause a universe
      tags:
      - Universe management
  /api/v1/customers/{cUUID}/universes/{uniUUID}/redisservers:
    get:
      operationId: getRedisServerAddresses
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: true
                type: string
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List a REDIS server's addresses
      tags:
      - Universe node metadata (metamaster)
  /api/v1/customers/{cUUID}/universes/{uniUUID}/resume:
    post:
      operationId: resumeUniverse
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Resume a paused universe
      tags:
      - Universe management
  /api/v1/customers/{cUUID}/universes/{uniUUID}/run_in_shell:
    post:
      description: "This operation is no longer supported, for security reasons."
      operationId: runInShell
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPError'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Run a shell command
      tags:
      - Universe database management
  /api/v1/customers/{cUUID}/universes/{uniUUID}/run_query:
    post:
      description: Runs a YSQL query. Only valid when the platform is running in `OSS`
        mode.
      operationId: runYsqlQueryUniverse
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunQueryFormData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: true
                type: object
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Run a YSQL query in a universe
      tags:
      - Universe database management
      x-codegen-request-body-name: RunQueryFormData
  /api/v1/customers/{cUUID}/universes/{uniUUID}/set_key:
    post:
      operationId: setUniverseKey
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniverseResp'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Set a universe's key
      tags:
      - Universe management
  /api/v1/customers/{cUUID}/universes/{uniUUID}/setup_universe_2dc:
    put:
      operationId: resetUniverseVersion
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Reset universe version
      tags:
      - Universe management
  /api/v1/customers/{cUUID}/universes/{uniUUID}/slow_queries:
    delete:
      operationId: resetSlowQueries
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: true
                type: object
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Reset slow queries for a universe
      tags:
      - Universe information
    get:
      operationId: getSlowQueries
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: true
                type: object
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get slow queries for a universe
      tags:
      - Universe information
  /api/v1/customers/{cUUID}/universes/{uniUUID}/status:
    get:
      description: This will return a Map of node name to its status in json format
      operationId: universeStatus
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  exampleSetFlag: true
                  properties: {}
                  type: object
                exampleSetFlag: true
                type: object
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get a universe's status
      tags:
      - Universe information
  /api/v1/customers/{cUUID}/universes/{uniUUID}/support_bundle:
    get:
      operationId: listSupportBundle
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/SupportBundle'
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List all support bundles from a universe
      tags:
      - Support Bundle management
    post:
      operationId: createSupportBundle
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Create support bundle for specific universe
      tags:
      - Support Bundle management
  /api/v1/customers/{cUUID}/universes/{uniUUID}/support_bundle/{sbUUID}:
    delete:
      operationId: deleteSupportBundle
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: sbUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete a support bundle
      tags:
      - Support Bundle management
    get:
      operationId: getSupportBundle
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: sbUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportBundle'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get a support bundle from a universe
      tags:
      - Support Bundle management
  /api/v1/customers/{cUUID}/universes/{uniUUID}/support_bundle/{sbUUID}/download:
    get:
      operationId: downloadSupportBundle
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: sbUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/x-compressed:
              schema:
                $ref: '#/components/schemas/SupportBundle'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Download support bundle
      tags:
      - Support Bundle management
  /api/v1/customers/{cUUID}/universes/{uniUUID}/tables:
    get:
      description: Get a list of all tables in the specified universe
      operationId: getAllTables
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/TableInfoResp'
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List all tables
      tags:
      - Table management
    post:
      operationId: createTable
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableDefinitionTaskParams'
        description: Table definition to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Create a YugabyteDB table
      tags:
      - Table management
      x-codegen-request-body-name: Table
  /api/v1/customers/{cUUID}/universes/{uniUUID}/tables/{tableUUID}:
    delete:
      operationId: dropTable
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: tableUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Drop a YugabyteDB table
      tags:
      - Table management
    get:
      operationId: describeTable
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: tableUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableDefinitionTaskParams'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Describe a table
      tags:
      - Table management
    put:
      operationId: alterTable
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: tableUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  exampleSetFlag: true
                  properties: {}
                  type: object
                exampleSetFlag: true
                type: object
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Alter a YugabyteDB table
      tags:
      - Table management
  /api/v1/customers/{cUUID}/universes/{uniUUID}/tables/{tableUUID}/bulk_import:
    put:
      description: Bulk import data into the specified table. This is currently AWS-only.
      operationId: bulkImportData
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: tableUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkImportParams'
        description: Bulk data to be imported
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Bulk import data
      tags:
      - Table management
      x-codegen-request-body-name: Bulk import
  /api/v1/customers/{cUUID}/universes/{uniUUID}/tables/{tableUUID}/create_backup:
    put:
      operationId: createSingleTableBackup
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: tableUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupTableParams'
        description: Backup data to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Create a single-table backup
      tags:
      - Table management
      x-codegen-request-body-name: Backup
  /api/v1/customers/{cUUID}/universes/{uniUUID}/tablet-servers:
    get:
      operationId: listTabletServers
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  exampleSetFlag: true
                  properties: {}
                  type: object
                exampleSetFlag: true
                type: object
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List all tablet servers
      tags:
      - Tablet server management
  /api/v1/customers/{cUUID}/universes/{uniUUID}/toggle_tls:
    post:
      deprecated: true
      description: Enable or disable node-to-node and client-to-node encryption. Supports
        rolling and non-rolling universe upgrades.
      operationId: toggleUniverseTLS
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniverseResp'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Toggle a universe's TLS state
      tags:
      - Universe management
  /api/v1/customers/{cUUID}/universes/{uniUUID}/update_backup_state:
    put:
      operationId: setUniverseBackupFlag
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: query
        name: markActive
        schema:
          exampleSetFlag: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Set a universe's backup flag
      tags:
      - Universe management
      - Backups
  /api/v1/customers/{cUUID}/universes/{uniUUID}/update_db_credentials:
    post:
      operationId: setDatabaseCredentials
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Set a universe's database credentials
      tags:
      - Universe database management
  /api/v1/customers/{cUUID}/universes/{uniUUID}/upgrade/certs:
    post:
      description: Queues a task to perform certificate rotation and rolling restart
        in a universe.
      operationId: upgradeCerts
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertsRotateParams'
        description: Certs Rotate Params
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Upgrade Certs
      tags:
      - Universe Upgrades Management
      x-codegen-request-body-name: certs_rotate_params
  /api/v1/customers/{cUUID}/universes/{uniUUID}/upgrade/gflags:
    post:
      description: Queues a task to perform gflags upgrade and rolling restart in
        a universe.
      operationId: upgradeGFlags
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GFlagsUpgradeParams'
        description: GFlags Upgrade Params
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Upgrade GFlags
      tags:
      - Universe Upgrades Management
      x-codegen-request-body-name: gflags_upgrade_params
  /api/v1/customers/{cUUID}/universes/{uniUUID}/upgrade/resize_node:
    post:
      description: Queues a task to perform node resize and rolling restart in a universe.
      operationId: resizeNode
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResizeNodeParams'
        description: Resize Node Params
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Resize Node
      tags:
      - Universe Upgrades Management
      x-codegen-request-body-name: resize_node_params
  /api/v1/customers/{cUUID}/universes/{uniUUID}/upgrade/restart:
    post:
      description: Queues a task to perform a rolling restart in a universe.
      operationId: restartUniverse
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeTaskParams'
        description: Upgrade Task Params
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Restart Universe
      tags:
      - Universe Upgrades Management
      x-codegen-request-body-name: upgrade_task_params
  /api/v1/customers/{cUUID}/universes/{uniUUID}/upgrade/software:
    post:
      description: Queues a task to perform software upgrade and rolling restart in
        a universe.
      operationId: upgradeSoftware
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoftwareUpgradeParams'
        description: Software Upgrade Params
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Upgrade Software
      tags:
      - Universe Upgrades Management
      x-codegen-request-body-name: software_upgrade_params
  /api/v1/customers/{cUUID}/universes/{uniUUID}/upgrade/systemd:
    post:
      description: Queues a task to perform systemd upgrade and rolling restart in
        a universe.
      operationId: upgradeSystemd
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemdUpgradeParams'
        description: Systemd Upgrade Params
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Upgrade Systemd
      tags:
      - Universe Upgrades Management
      x-codegen-request-body-name: systemd_upgrade_params
  /api/v1/customers/{cUUID}/universes/{uniUUID}/upgrade/tls:
    post:
      description: Queues a task to perform TLS ugprade and rolling restart in a universe.
      operationId: upgradeTls
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TlsToggleParams'
        description: TLS Toggle Params
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Upgrade TLS
      tags:
      - Universe Upgrades Management
      x-codegen-request-body-name: tls_toggle_params
  /api/v1/customers/{cUUID}/universes/{uniUUID}/upgrade/vm:
    post:
      description: Queues a task to perform VM Image upgrade and rolling restart in
        a universe.
      operationId: upgradeVMImage
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMImageUpgradeParams'
        description: VM Image Upgrade Params
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Upgrade VM Image
      tags:
      - Universe Upgrades Management
      x-codegen-request-body-name: vmimage_upgrade_params
  /api/v1/customers/{cUUID}/universes/{uniUUID}/yqlservers:
    get:
      operationId: getYQLServerAddresses
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: true
                type: string
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List a YQL server's addresses
      tags:
      - Universe node metadata (metamaster)
  /api/v1/customers/{cUUID}/universes/{uniUUID}/ysqlservers:
    get:
      operationId: getYSQLServerAddresses
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: true
                type: string
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List a YSQL server's addresses
      tags:
      - Universe node metadata (metamaster)
  /api/v1/customers/{cUUID}/universes/{uniUUID}/{nodeName}/download_logs:
    get:
      description: Downloads the log files from a given node.
      operationId: downloadNodeLogs
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uniUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: nodeName
        required: true
        schema:
          exampleSetFlag: false
          type: string
      responses:
        "200":
          content:
            application/x-compressed:
              schema:
                exampleSetFlag: true
                type: string
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Download a node's logs
      tags:
      - Universe information
  /api/v1/customers/{cUUID}/universes/{universeUUID}/nodes/{nodeName}:
    put:
      operationId: nodeAction
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: universeUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: nodeName
        required: true
        schema:
          exampleSetFlag: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeActionFormData'
        description: Node action data to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Update a node
      tags:
      - Node instances
      x-codegen-request-body-name: Node action
  /api/v1/customers/{cUUID}/users:
    get:
      operationId: listUsers
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/UserWithFeatures'
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List all users
      tags:
      - User management
    post:
      operationId: createUser
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationData'
        description: Details of the new user
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithFeatures'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Create a user
      tags:
      - User management
      x-codegen-request-body-name: User
  /api/v1/customers/{cUUID}/users/{uUUID}:
    delete:
      description: Deletes the specified user. Note that you can't delete a customer's
        primary user.
      operationId: deleteUser
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete a user
      tags:
      - User management
    get:
      operationId: getUserDetails
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithFeatures'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get a user's details
      tags:
      - User management
    put:
      operationId: updateUserRole
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: query
        name: role
        schema:
          exampleSetFlag: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Change a user's role
      tags:
      - User management
  /api/v1/customers/{cUUID}/users/{uUUID}/audit_trail:
    get:
      operationId: ListOfAudit
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/Audit'
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List a user's audit entries
      tags:
      - Audit
  /api/v1/customers/{cUUID}/users/{uUUID}/change_password:
    put:
      operationId: updateUserPassword
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationData'
        description: User data containing the new password
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPSuccess'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Change a user's password
      tags:
      - User management
      x-codegen-request-body-name: Users
  /api/v1/customers/{cUUID}/users/{uUUID}/update_profile:
    put:
      operationId: UpdateUserProfile
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: uUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileData'
        description: User data in profile to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Update a user's profile
      tags:
      - User management
      x-codegen-request-body-name: Users
  /api/v1/customers/{cUUID}/xcluster_configs:
    post:
      operationId: createXClusterConfig
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/XClusterConfigCreateFormData'
        description: XCluster Replication Create Form Data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Create xcluster config
      tags:
      - Asynchronous Replication
      x-codegen-request-body-name: xcluster_replication_create_form_data
  /api/v1/customers/{cUUID}/xcluster_configs/sync:
    post:
      operationId: syncXClusterConfig
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: query
        name: targetUniverseUUID
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Sync xcluster config
      tags:
      - Asynchronous Replication
  /api/v1/customers/{cUUID}/xcluster_configs/{xccUUID}:
    delete:
      operationId: deleteXClusterConfig
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: xccUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Delete xcluster config
      tags:
      - Asynchronous Replication
    get:
      operationId: getXClusterConfig
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: xccUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XClusterConfigGetResp'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get xcluster config
      tags:
      - Asynchronous Replication
    put:
      operationId: editXClusterConfig
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: xccUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/XClusterConfigEditFormData'
        description: XCluster Replication Edit Form Data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YBPTask'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Edit xcluster config
      tags:
      - Asynchronous Replication
      x-codegen-request-body-name: xcluster_replication_edit_form_data
  /api/v1/customers/{cUUID}/zones/{azUUID}/nodes:
    post:
      operationId: createNodeInstance
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: azUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeInstanceFormData'
        description: Node instance data to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/NodeInstance'
                exampleSetFlag: true
                type: object
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Create a node instance
      tags:
      - Node instances
      x-codegen-request-body-name: Node instance
  /api/v1/customers/{cUUID}/zones/{azUUID}/nodes/list:
    get:
      operationId: listByZone
      parameters:
      - in: path
        name: cUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      - in: path
        name: azUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  $ref: '#/components/schemas/NodeInstance'
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List all of a zone's node instances
      tags:
      - Node instances
  /api/v1/logging_config:
    post:
      operationId: setLoggingSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlatformLoggingConfig'
        description: Logging config to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformLoggingConfig'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Set Logging Level
      tags:
      - LoggingConfig
      x-codegen-request-body-name: Logging Config
  /api/v1/logs:
    get:
      operationId: getFilteredLogs
      parameters:
      - in: query
        name: maxLines
        schema:
          default: 10000
          exampleSetFlag: false
          format: int32
          type: integer
      - in: query
        name: universeName
        schema:
          default: "null"
          exampleSetFlag: false
          type: string
      - in: query
        name: queryRegex
        schema:
          default: "null"
          exampleSetFlag: false
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                exampleSetFlag: true
                type: string
          description: successful operation
      summary: getFilteredLogs
      tags:
      - Session management
  /api/v1/logs/{maxLines}:
    get:
      operationId: getLogs
      parameters:
      - in: path
        name: maxLines
        required: true
        schema:
          exampleSetFlag: false
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogData'
          description: successful operation
      summary: getLogs
      tags:
      - Session management
  /api/v1/metadata/azu_types:
    get:
      operationId: getAZUTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  enum:
                  - IO1
                  - GP2
                  - GP3
                  - Scratch
                  - Persistent
                  - StandardSSD_LRS
                  - Premium_LRS
                  - UltraSSD_LRS
                  exampleSetFlag: true
                  type: string
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List supported Azure disk types
      tags:
      - Instance types
  /api/v1/metadata/ebs_types:
    get:
      operationId: getEBSTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  enum:
                  - IO1
                  - GP2
                  - GP3
                  - Scratch
                  - Persistent
                  - StandardSSD_LRS
                  - Premium_LRS
                  - UltraSSD_LRS
                  exampleSetFlag: true
                  type: string
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List supported EBS volume types
      tags:
      - Instance types
  /api/v1/metadata/gcp_types:
    get:
      operationId: getGCPTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  enum:
                  - IO1
                  - GP2
                  - GP3
                  - Scratch
                  - Persistent
                  - StandardSSD_LRS
                  - Premium_LRS
                  - UltraSSD_LRS
                  exampleSetFlag: true
                  type: string
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List supported GCP disk types
      tags:
      - Instance types
  /api/v1/metadata/yql_data_types:
    get:
      description: Get a list of all defined column types.
      operationId: getYQLDataTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  enum:
                  - TINYINT
                  - SMALLINT
                  - INT
                  - BIGINT
                  - VARCHAR
                  - BOOLEAN
                  - FLOAT
                  - DOUBLE_PRECISION
                  - BLOB
                  - TIMESTAMP
                  - DECIMAL
                  - VARINT
                  - INET
                  - LIST
                  - MAP
                  - SET
                  - UUID
                  - TIMEUUID
                  - FROZEN
                  - DATE
                  - TIME
                  - JSONB
                  - USER_DEFINED_TYPE
                  exampleSetFlag: true
                  type: string
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List column types
      tags:
      - Table management
  /api/v1/prometheus_metrics:
    get:
      operationId: MetricsDetail
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: true
                type: string
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get Prometheus metrics
      tags:
      - Metrics
  /api/v1/register:
    post:
      description: Creates new customer and user
      operationId: registerCustomer
      parameters:
      - in: query
        name: generateApiToken
        schema:
          default: false
          exampleSetFlag: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRegisterFormData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionInfo'
          description: successful operation
      summary: Register a customer
      tags:
      - Session management
      x-codegen-request-body-name: CustomerRegisterFormData
  /api/v1/runtime_config/mutable_keys:
    get:
      description: List all the mutable runtime config keys
      operationId: listKeys
      responses:
        "200":
          content:
            application/json:
              schema:
                exampleSetFlag: false
                items:
                  exampleSetFlag: true
                  type: string
                type: array
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List mutable keys
      tags:
      - Runtime configuration
  /api/v1/session_info:
    get:
      operationId: getSessionInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionInfo'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: Get current user/customer uuid auth/api token
      tags:
      - Session management
  /metamaster/universe/{universeUUID}:
    get:
      operationId: getUniverseMasterNodes
      parameters:
      - in: path
        name: universeUUID
        required: true
        schema:
          exampleSetFlag: false
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MastersList'
          description: successful operation
      security:
      - apiKeyAuth: []
      summary: List a universe's master nodes
      tags:
      - Universe node metadata (metamaster)
components:
  schemas:
    AccessKey:
      description: Access key for the cloud provider. This helps to authenticate the
        user and get access to the provider.
      example:
        idKey:
          keyCode: keyCode
          providerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        keyInfo:
          sshPort: 6
          nodeExporterPort: 0
          installNodeExporter: true
          skipProvisioning: true
          nodeExporterUser: nodeExporterUser
          provisionInstanceScript: provisionInstanceScript
          passwordlessSudoAccess: true
          publicKey: publicKey
          vaultFile: vaultFile
          privateKey: privateKey
          vaultPasswordFile: vaultPasswordFile
          sshUser: sshUser
          deleteRemote: true
          airGapInstall: true
      exampleSetFlag: true
      properties:
        idKey:
          $ref: '#/components/schemas/AccessKeyId'
        keyInfo:
          $ref: '#/components/schemas/KeyInfo'
      required:
      - idKey
      - keyInfo
      type: object
    AccessKeyId:
      example:
        keyCode: keyCode
        providerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        keyCode:
          exampleSetFlag: true
          type: string
        providerUUID:
          exampleSetFlag: true
          format: uuid
          type: string
      type: object
    Alert:
      description: Alert definition. Used to send an alert notification.
      example:
        severity: SEVERE
        nextNotificationTime: 2000-01-23T04:56:07.000+00:00
        resolvedTime: 2000-01-23T04:56:07.000+00:00
        severityIndex: 6
        message: message
        notifiedState: ACTIVE
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        definitionUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        labels:
        - name: name
          value: value
          key:
            name: name
        - name: name
          value: value
          key:
            name: name
        customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        createTime: 2000-01-23T04:56:07.000+00:00
        sourceUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        stateIndex: 1
        name: name
        notificationAttemptTime: 2000-01-23T04:56:07.000+00:00
        sourceName: sourceName
        state: ACTIVE
        configurationType: PLATFORM
        configurationUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        notificationsFailed: 0
        acknowledgedTime: 2000-01-23T04:56:07.000+00:00
      exampleSetFlag: true
      properties:
        acknowledgedTime:
          description: Timestamp at which the alert was acknowledged
          exampleSetFlag: true
          format: date-time
          readOnly: true
          type: string
        configurationType:
          description: Alert configuration type
          enum:
          - PLATFORM
          - UNIVERSE
          exampleSetFlag: true
          readOnly: true
          type: string
        configurationUuid:
          description: Alert configuration UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
        createTime:
          description: Alert creation timestamp
          exampleSetFlag: true
          format: date-time
          readOnly: true
          type: string
        customerUUID:
          description: Customer UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
        definitionUuid:
          description: Alert definition UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
        labels:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/AlertLabel'
          type: array
        message:
          description: The alert's message text
          exampleSetFlag: true
          maxLength: 2147483647
          minLength: 1
          readOnly: true
          type: string
        name:
          description: The alert's name
          exampleSetFlag: true
          maxLength: 1000
          minLength: 1
          readOnly: true
          type: string
        nextNotificationTime:
          description: Time of the next notification attempt
          exampleSetFlag: true
          format: date-time
          readOnly: true
          type: string
        notificationAttemptTime:
          description: Time of the last notification attempt
          exampleSetFlag: true
          format: date-time
          readOnly: true
          type: string
        notificationsFailed:
          description: Count of failures to send a notification
          exampleSetFlag: true
          format: int32
          readOnly: true
          type: integer
        notifiedState:
          description: Alert state in the last-sent notification
          enum:
          - ACTIVE
          - ACKNOWLEDGED
          - SUSPENDED
          - RESOLVED
          exampleSetFlag: true
          readOnly: true
          type: string
        resolvedTime:
          description: Timestamp at which the alert was resolved
          exampleSetFlag: true
          format: date-time
          readOnly: true
          type: string
        severity:
          description: Alert configuration severity
          enum:
          - SEVERE
          - WARNING
          exampleSetFlag: true
          readOnly: true
          type: string
        severityIndex:
          exampleSetFlag: true
          format: int32
          type: integer
        sourceName:
          description: The source of the alert
          exampleSetFlag: true
          readOnly: true
          type: string
        sourceUUID:
          description: The sourceUUID of the alert
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
        state:
          description: The alert's state
          enum:
          - ACTIVE
          - ACKNOWLEDGED
          - SUSPENDED
          - RESOLVED
          exampleSetFlag: true
          readOnly: true
          type: string
        stateIndex:
          exampleSetFlag: true
          format: int32
          type: integer
        uuid:
          description: Alert UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
      required:
      - configurationType
      - configurationUuid
      - createTime
      - customerUUID
      - definitionUuid
      - labels
      - message
      - name
      - severity
      - severityIndex
      - sourceName
      - sourceUUID
      - state
      - stateIndex
      type: object
    AlertApiFilter:
      example:
        sourceUUIDs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        configurationTypes:
        - PLATFORM
        - PLATFORM
        sourceName: sourceName
        configurationUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        severities:
        - SEVERE
        - SEVERE
        states:
        - ACTIVE
        - ACTIVE
        uuids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        configurationTypes:
          exampleSetFlag: false
          items:
            enum:
            - PLATFORM
            - UNIVERSE
            exampleSetFlag: true
            type: string
          type: array
          uniqueItems: true
        configurationUuid:
          exampleSetFlag: true
          format: uuid
          type: string
        severities:
          exampleSetFlag: false
          items:
            enum:
            - SEVERE
            - WARNING
            exampleSetFlag: true
            type: string
          type: array
          uniqueItems: true
        sourceName:
          exampleSetFlag: true
          type: string
        sourceUUIDs:
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          type: array
          uniqueItems: true
        states:
          exampleSetFlag: false
          items:
            enum:
            - ACTIVE
            - ACKNOWLEDGED
            - SUSPENDED
            - RESOLVED
            exampleSetFlag: true
            type: string
          type: array
          uniqueItems: true
        uuids:
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          type: array
          uniqueItems: true
      required:
      - configurationTypes
      - configurationUuid
      - severities
      - sourceName
      - sourceUUIDs
      - states
      - uuids
      type: object
    AlertChannel:
      example:
        customer_uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        params:
          textTemplate: textTemplate
          titleTemplate: titleTemplate
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        customer_uuid:
          exampleSetFlag: true
          format: uuid
          type: string
        name:
          exampleSetFlag: true
          maxLength: 63
          minLength: 1
          type: string
        params:
          $ref: '#/components/schemas/AlertChannelParams'
        uuid:
          exampleSetFlag: true
          format: uuid
          type: string
      required:
      - customer_uuid
      - name
      - params
      - uuid
      type: object
    AlertChannelEmailParams:
      allOf:
      - $ref: '#/components/schemas/AlertChannelParams'
      - $ref: '#/components/schemas/AlertChannelEmailParams_allOf'
      exampleSetFlag: true
    AlertChannelFormData:
      example:
        name: name
        params:
          textTemplate: textTemplate
          titleTemplate: titleTemplate
        alertChannelUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        alertChannelUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        name:
          exampleSetFlag: true
          type: string
        params:
          $ref: '#/components/schemas/AlertChannelParams'
      required:
      - alertChannelUUID
      - name
      - params
      type: object
    AlertChannelPagerDutyParams:
      allOf:
      - $ref: '#/components/schemas/AlertChannelParams'
      - $ref: '#/components/schemas/AlertChannelPagerDutyParams_allOf'
      exampleSetFlag: true
    AlertChannelParams:
      discriminator:
        propertyName: channelType
      example:
        textTemplate: textTemplate
        titleTemplate: titleTemplate
      exampleSetFlag: true
      properties:
        textTemplate:
          exampleSetFlag: true
          type: string
        titleTemplate:
          exampleSetFlag: true
          type: string
      required:
      - textTemplate
      - titleTemplate
      type: object
    AlertChannelSlackParams:
      allOf:
      - $ref: '#/components/schemas/AlertChannelParams'
      - $ref: '#/components/schemas/AlertChannelSlackParams_allOf'
      exampleSetFlag: true
    AlertChannelWebHookParams:
      allOf:
      - $ref: '#/components/schemas/AlertChannelParams'
      - $ref: '#/components/schemas/AlertChannelWebHookParams_allOf'
      exampleSetFlag: true
    AlertConfiguration:
      description: Alert configuration
      example:
        template: REPLICATION_LAG
        active: true
        description: description
        targetType: PLATFORM
        maintenanceWindowUuids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        target:
          all: true
          uuids:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        thresholds:
          key:
            condition: GREATER_THAN
            threshold: 1.4658129805029452
        customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        thresholdUnit: STATUS
        alertCount: 0.8008281904610115
        createTime: 2000-01-23T04:56:07.000+00:00
        defaultDestination: true
        destinationUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        durationSec: 0
      exampleSetFlag: true
      properties:
        active:
          description: Is configured alerts raised or not
          exampleSetFlag: true
          type: boolean
        alertCount:
          exampleSetFlag: true
          format: double
          type: number
        createTime:
          description: Creation time
          exampleSetFlag: true
          format: date-time
          readOnly: true
          type: string
        customerUUID:
          description: Customer UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
        defaultDestination:
          description: Is default destination used for this config
          exampleSetFlag: true
          type: boolean
        description:
          description: Description
          exampleSetFlag: true
          type: string
        destinationUUID:
          description: Alert destination UUID
          exampleSetFlag: true
          format: uuid
          type: string
        durationSec:
          description: "Duration in seconds, while condition is met to raise an alert"
          exampleSetFlag: true
          format: int32
          minimum: 0
          type: integer
        maintenanceWindowUuids:
          description: "Maintenance window UUIDs, applied to this alert config"
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
          uniqueItems: true
        name:
          description: Name
          exampleSetFlag: true
          maxLength: 1000
          minLength: 1
          type: string
        target:
          $ref: '#/components/schemas/AlertConfigurationTarget'
        targetType:
          description: Target type
          enum:
          - PLATFORM
          - UNIVERSE
          exampleSetFlag: true
          readOnly: true
          type: string
        template:
          description: Template name
          enum:
          - REPLICATION_LAG
          - CLOCK_SKEW
          - MEMORY_CONSUMPTION
          - HEALTH_CHECK_ERROR
          - HEALTH_CHECK_NOTIFICATION_ERROR
          - BACKUP_FAILURE
          - BACKUP_SCHEDULE_FAILURE
          - INACTIVE_CRON_NODES
          - ALERT_QUERY_FAILED
          - ALERT_CONFIG_WRITING_FAILED
          - ALERT_NOTIFICATION_ERROR
          - ALERT_NOTIFICATION_CHANNEL_ERROR
          - NODE_DOWN
          - NODE_RESTART
          - NODE_CPU_USAGE
          - NODE_DISK_USAGE
          - NODE_FILE_DESCRIPTORS_USAGE
          - NODE_OOM_KILLS
          - DB_VERSION_MISMATCH
          - DB_INSTANCE_DOWN
          - DB_INSTANCE_RESTART
          - DB_FATAL_LOGS
          - DB_ERROR_LOGS
          - DB_CORE_FILES
          - DB_YSQL_CONNECTION
          - DB_YCQL_CONNECTION
          - DB_REDIS_CONNECTION
          - DB_MEMORY_OVERLOAD
          - DB_COMPACTION_OVERLOAD
          - DB_QUEUES_OVERFLOW
          - DB_WRITE_READ_TEST_ERROR
          - NODE_TO_NODE_CA_CERT_EXPIRY
          - NODE_TO_NODE_CERT_EXPIRY
          - CLIENT_TO_NODE_CA_CERT_EXPIRY
          - CLIENT_TO_NODE_CERT_EXPIRY
          - ENCRYPTION_AT_REST_CONFIG_EXPIRY
          - YSQL_OP_AVG_LATENCY
          - YCQL_OP_AVG_LATENCY
          - YSQL_OP_P99_LATENCY
          - YCQL_OP_P99_LATENCY
          - HIGH_NUM_YSQL_CONNECTIONS
          - HIGH_NUM_YCQL_CONNECTIONS
          - HIGH_NUM_YEDIS_CONNECTIONS
          - YSQL_THROUGHPUT
          - YCQL_THROUGHPUT
          - MASTER_LEADER_MISSING
          - LEADERLESS_TABLETS
          - UNDER_REPLICATED_TABLETS
          exampleSetFlag: true
          readOnly: true
          type: string
        thresholdUnit:
          description: Threshold unit
          enum:
          - STATUS
          - COUNT
          - PERCENT
          - MILLISECOND
          - SECOND
          - DAY
          exampleSetFlag: true
          readOnly: true
          type: string
        thresholds:
          additionalProperties:
            $ref: '#/components/schemas/AlertConfigurationThreshold'
          description: Thresholds
          exampleSetFlag: true
          type: object
        uuid:
          description: Configuration UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
      required:
      - active
      - alertCount
      - createTime
      - customerUUID
      - defaultDestination
      - description
      - durationSec
      - name
      - target
      - targetType
      - template
      - thresholdUnit
      - thresholds
      type: object
    AlertConfigurationApiFilter:
      example:
        severity: SEVERE
        template: REPLICATION_LAG
        destinationUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        active: true
        destinationType: NO_DESTINATION
        targetType: PLATFORM
        target:
          all: true
          uuids:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        uuids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        active:
          exampleSetFlag: true
          type: boolean
        destinationType:
          enum:
          - NO_DESTINATION
          - DEFAULT_DESTINATION
          - SELECTED_DESTINATION
          exampleSetFlag: true
          type: string
        destinationUuid:
          exampleSetFlag: true
          format: uuid
          type: string
        name:
          exampleSetFlag: true
          type: string
        severity:
          enum:
          - SEVERE
          - WARNING
          exampleSetFlag: true
          type: string
        target:
          $ref: '#/components/schemas/AlertConfigurationTarget'
        targetType:
          enum:
          - PLATFORM
          - UNIVERSE
          exampleSetFlag: true
          type: string
        template:
          enum:
          - REPLICATION_LAG
          - CLOCK_SKEW
          - MEMORY_CONSUMPTION
          - HEALTH_CHECK_ERROR
          - HEALTH_CHECK_NOTIFICATION_ERROR
          - BACKUP_FAILURE
          - BACKUP_SCHEDULE_FAILURE
          - INACTIVE_CRON_NODES
          - ALERT_QUERY_FAILED
          - ALERT_CONFIG_WRITING_FAILED
          - ALERT_NOTIFICATION_ERROR
          - ALERT_NOTIFICATION_CHANNEL_ERROR
          - NODE_DOWN
          - NODE_RESTART
          - NODE_CPU_USAGE
          - NODE_DISK_USAGE
          - NODE_FILE_DESCRIPTORS_USAGE
          - NODE_OOM_KILLS
          - DB_VERSION_MISMATCH
          - DB_INSTANCE_DOWN
          - DB_INSTANCE_RESTART
          - DB_FATAL_LOGS
          - DB_ERROR_LOGS
          - DB_CORE_FILES
          - DB_YSQL_CONNECTION
          - DB_YCQL_CONNECTION
          - DB_REDIS_CONNECTION
          - DB_MEMORY_OVERLOAD
          - DB_COMPACTION_OVERLOAD
          - DB_QUEUES_OVERFLOW
          - DB_WRITE_READ_TEST_ERROR
          - NODE_TO_NODE_CA_CERT_EXPIRY
          - NODE_TO_NODE_CERT_EXPIRY
          - CLIENT_TO_NODE_CA_CERT_EXPIRY
          - CLIENT_TO_NODE_CERT_EXPIRY
          - ENCRYPTION_AT_REST_CONFIG_EXPIRY
          - YSQL_OP_AVG_LATENCY
          - YCQL_OP_AVG_LATENCY
          - YSQL_OP_P99_LATENCY
          - YCQL_OP_P99_LATENCY
          - HIGH_NUM_YSQL_CONNECTIONS
          - HIGH_NUM_YCQL_CONNECTIONS
          - HIGH_NUM_YEDIS_CONNECTIONS
          - YSQL_THROUGHPUT
          - YCQL_THROUGHPUT
          - MASTER_LEADER_MISSING
          - LEADERLESS_TABLETS
          - UNDER_REPLICATED_TABLETS
          exampleSetFlag: true
          type: string
        uuids:
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          type: array
          uniqueItems: true
      required:
      - active
      - destinationType
      - destinationUuid
      - name
      - severity
      - target
      - targetType
      - template
      - uuids
      type: object
    AlertConfigurationPagedApiQuery:
      example:
        filter:
          severity: SEVERE
          template: REPLICATION_LAG
          destinationUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          active: true
          destinationType: NO_DESTINATION
          targetType: PLATFORM
          target:
            all: true
            uuids:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          uuids:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        offset: 6
        needTotalCount: true
        limit: 0
        sortBy: uuid
        direction: ASC
      exampleSetFlag: true
      properties:
        direction:
          enum:
          - ASC
          - DESC
          exampleSetFlag: true
          type: string
        filter:
          $ref: '#/components/schemas/AlertConfigurationApiFilter'
        limit:
          exampleSetFlag: true
          format: int32
          type: integer
        needTotalCount:
          exampleSetFlag: true
          type: boolean
        offset:
          exampleSetFlag: true
          format: int32
          type: integer
        sortBy:
          enum:
          - uuid
          - name
          - active
          - targetType
          - target
          - createTime
          - template
          - severity
          - destination
          - alertCount
          exampleSetFlag: true
          type: string
      required:
      - direction
      - filter
      - limit
      - needTotalCount
      - offset
      - sortBy
      type: object
    AlertConfigurationPagedResponse:
      example:
        entities:
        - template: REPLICATION_LAG
          active: true
          description: description
          targetType: PLATFORM
          maintenanceWindowUuids:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          target:
            all: true
            uuids:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          thresholds:
            key:
              condition: GREATER_THAN
              threshold: 1.4658129805029452
          customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          thresholdUnit: STATUS
          alertCount: 0.8008281904610115
          createTime: 2000-01-23T04:56:07.000+00:00
          defaultDestination: true
          destinationUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          durationSec: 0
        - template: REPLICATION_LAG
          active: true
          description: description
          targetType: PLATFORM
          maintenanceWindowUuids:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          target:
            all: true
            uuids:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          thresholds:
            key:
              condition: GREATER_THAN
              threshold: 1.4658129805029452
          customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          thresholdUnit: STATUS
          alertCount: 0.8008281904610115
          createTime: 2000-01-23T04:56:07.000+00:00
          defaultDestination: true
          destinationUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          durationSec: 0
        hasPrev: true
        hasNext: true
        totalCount: 0
      exampleSetFlag: true
      properties:
        entities:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/AlertConfiguration'
          type: array
        hasNext:
          exampleSetFlag: true
          type: boolean
        hasPrev:
          exampleSetFlag: true
          type: boolean
        totalCount:
          exampleSetFlag: true
          format: int32
          type: integer
      required:
      - entities
      - hasNext
      - hasPrev
      - totalCount
      type: object
    AlertConfigurationTarget:
      description: "Alert target. Set to `all`, or specify one or more target UUIDs."
      example:
        all: true
        uuids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        all:
          description: Alert applicable to all targets
          exampleSetFlag: true
          type: boolean
        uuids:
          description: Alert target UUIDs
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          type: array
          uniqueItems: true
      type: object
    AlertConfigurationTemplate:
      description: Alert configuration template
      example:
        template: REPLICATION_LAG
        thresholdUnitName: thresholdUnitName
        thresholdMaxValue: 1.4658129805029452
        active: true
        description: description
        targetType: PLATFORM
        maintenanceWindowUuids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        target:
          all: true
          uuids:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        thresholdInteger: true
        thresholds:
          key:
            condition: GREATER_THAN
            threshold: 1.4658129805029452
        customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        thresholdUnit: STATUS
        alertCount: 0.8008281904610115
        createTime: 2000-01-23T04:56:07.000+00:00
        thresholdConditionReadOnly: true
        thresholdMinValue: 5.962133916683182
        thresholdReadOnly: true
        defaultDestination: true
        destinationUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        durationSec: 0
      exampleSetFlag: true
      properties:
        active:
          description: Is configured alerts raised or not
          exampleSetFlag: true
          type: boolean
        alertCount:
          exampleSetFlag: true
          format: double
          type: number
        createTime:
          description: Creation time
          exampleSetFlag: true
          format: date-time
          readOnly: true
          type: string
        customerUUID:
          description: Customer UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
        defaultDestination:
          description: Is default destination used for this config
          exampleSetFlag: true
          type: boolean
        description:
          description: Description
          exampleSetFlag: true
          type: string
        destinationUUID:
          description: Alert destination UUID
          exampleSetFlag: true
          format: uuid
          type: string
        durationSec:
          description: "Duration in seconds, while condition is met to raise an alert"
          exampleSetFlag: true
          format: int32
          minimum: 0
          type: integer
        maintenanceWindowUuids:
          description: "Maintenance window UUIDs, applied to this alert config"
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
          uniqueItems: true
        name:
          description: Name
          exampleSetFlag: true
          maxLength: 1000
          minLength: 1
          type: string
        target:
          $ref: '#/components/schemas/AlertConfigurationTarget'
        targetType:
          description: Target type
          enum:
          - PLATFORM
          - UNIVERSE
          exampleSetFlag: true
          readOnly: true
          type: string
        template:
          description: Template name
          enum:
          - REPLICATION_LAG
          - CLOCK_SKEW
          - MEMORY_CONSUMPTION
          - HEALTH_CHECK_ERROR
          - HEALTH_CHECK_NOTIFICATION_ERROR
          - BACKUP_FAILURE
          - BACKUP_SCHEDULE_FAILURE
          - INACTIVE_CRON_NODES
          - ALERT_QUERY_FAILED
          - ALERT_CONFIG_WRITING_FAILED
          - ALERT_NOTIFICATION_ERROR
          - ALERT_NOTIFICATION_CHANNEL_ERROR
          - NODE_DOWN
          - NODE_RESTART
          - NODE_CPU_USAGE
          - NODE_DISK_USAGE
          - NODE_FILE_DESCRIPTORS_USAGE
          - NODE_OOM_KILLS
          - DB_VERSION_MISMATCH
          - DB_INSTANCE_DOWN
          - DB_INSTANCE_RESTART
          - DB_FATAL_LOGS
          - DB_ERROR_LOGS
          - DB_CORE_FILES
          - DB_YSQL_CONNECTION
          - DB_YCQL_CONNECTION
          - DB_REDIS_CONNECTION
          - DB_MEMORY_OVERLOAD
          - DB_COMPACTION_OVERLOAD
          - DB_QUEUES_OVERFLOW
          - DB_WRITE_READ_TEST_ERROR
          - NODE_TO_NODE_CA_CERT_EXPIRY
          - NODE_TO_NODE_CERT_EXPIRY
          - CLIENT_TO_NODE_CA_CERT_EXPIRY
          - CLIENT_TO_NODE_CERT_EXPIRY
          - ENCRYPTION_AT_REST_CONFIG_EXPIRY
          - YSQL_OP_AVG_LATENCY
          - YCQL_OP_AVG_LATENCY
          - YSQL_OP_P99_LATENCY
          - YCQL_OP_P99_LATENCY
          - HIGH_NUM_YSQL_CONNECTIONS
          - HIGH_NUM_YCQL_CONNECTIONS
          - HIGH_NUM_YEDIS_CONNECTIONS
          - YSQL_THROUGHPUT
          - YCQL_THROUGHPUT
          - MASTER_LEADER_MISSING
          - LEADERLESS_TABLETS
          - UNDER_REPLICATED_TABLETS
          exampleSetFlag: true
          readOnly: true
          type: string
        thresholdConditionReadOnly:
          description: Is alert threshold condition read-only or configurable
          exampleSetFlag: true
          readOnly: true
          type: boolean
        thresholdInteger:
          description: Is alert threshold integer or floating point
          exampleSetFlag: true
          readOnly: true
          type: boolean
        thresholdMaxValue:
          description: Alert threshold maximal value
          exampleSetFlag: true
          format: double
          readOnly: true
          type: number
        thresholdMinValue:
          description: Alert threshold minimal value
          exampleSetFlag: true
          format: double
          readOnly: true
          type: number
        thresholdReadOnly:
          description: Is alert threshold read-only or configurable
          exampleSetFlag: true
          readOnly: true
          type: boolean
        thresholdUnit:
          description: Threshold unit
          enum:
          - STATUS
          - COUNT
          - PERCENT
          - MILLISECOND
          - SECOND
          - DAY
          exampleSetFlag: true
          readOnly: true
          type: string
        thresholdUnitName:
          description: Threshold unit name
          exampleSetFlag: true
          readOnly: true
          type: string
        thresholds:
          additionalProperties:
            $ref: '#/components/schemas/AlertConfigurationThreshold'
          description: Thresholds
          exampleSetFlag: true
          type: object
        uuid:
          description: Configuration UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
      required:
      - active
      - alertCount
      - createTime
      - customerUUID
      - defaultDestination
      - description
      - durationSec
      - name
      - target
      - targetType
      - template
      - thresholdUnit
      - thresholds
      type: object
    AlertConfigurationThreshold:
      description: "Alert configuration threshold. Conditions can be either greater\
        \ than a specified value, or less than a specified value."
      example:
        condition: GREATER_THAN
        threshold: 1.4658129805029452
      exampleSetFlag: true
      properties:
        condition:
          description: "Threshold condition (greater than, or less than)"
          enum:
          - GREATER_THAN
          - LESS_THAN
          exampleSetFlag: true
          type: string
        threshold:
          description: Threshold value
          exampleSetFlag: true
          format: double
          type: number
      required:
      - condition
      - threshold
      type: object
    AlertDefinition:
      example:
        universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        query: query
        configurationUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        version: 0
        labels:
        - name: name
          value: value
          key:
            name: name
        - name: name
          value: value
          key:
            name: name
      exampleSetFlag: true
      properties:
        configurationUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        customerUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        labels:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/AlertDefinitionLabel'
          type: array
        query:
          exampleSetFlag: true
          type: string
        universeUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        uuid:
          exampleSetFlag: true
          format: uuid
          type: string
        version:
          exampleSetFlag: true
          format: int32
          type: integer
      required:
      - configurationUUID
      - customerUUID
      - labels
      - query
      - universeUUID
      - uuid
      - version
      type: object
    AlertDefinitionLabel:
      example:
        name: name
        value: value
        key:
          name: name
      exampleSetFlag: true
      properties:
        key:
          $ref: '#/components/schemas/AlertDefinitionLabelKey'
        name:
          exampleSetFlag: true
          type: string
        value:
          exampleSetFlag: true
          type: string
      required:
      - key
      - name
      - value
      type: object
    AlertDefinitionLabelKey:
      example:
        name: name
      exampleSetFlag: true
      properties:
        name:
          exampleSetFlag: true
          type: string
      required:
      - name
      type: object
    AlertDestination:
      example:
        customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        channels:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        defaultDestination: true
        name: name
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        channels:
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          maxItems: 2147483647
          minItems: 1
          readOnly: true
          type: array
        customerUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        defaultDestination:
          exampleSetFlag: true
          type: boolean
        name:
          exampleSetFlag: true
          maxLength: 63
          minLength: 1
          type: string
        uuid:
          exampleSetFlag: true
          format: uuid
          type: string
      required:
      - channels
      - customerUUID
      - defaultDestination
      - name
      - uuid
      type: object
    AlertDestinationFormData:
      example:
        channels:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        defaultDestination: true
        name: name
      exampleSetFlag: true
      properties:
        channels:
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          type: array
        defaultDestination:
          exampleSetFlag: true
          type: boolean
        name:
          exampleSetFlag: true
          type: string
      required:
      - channels
      - defaultDestination
      - name
      type: object
    AlertLabel:
      example:
        name: name
        value: value
        key:
          name: name
      exampleSetFlag: true
      properties:
        key:
          $ref: '#/components/schemas/AlertLabelKey'
        name:
          exampleSetFlag: true
          type: string
        value:
          exampleSetFlag: true
          type: string
      required:
      - key
      - name
      - value
      type: object
    AlertLabelKey:
      example:
        name: name
      exampleSetFlag: true
      properties:
        name:
          exampleSetFlag: true
          type: string
      required:
      - name
      type: object
    AlertPagedApiQuery:
      example:
        filter:
          sourceUUIDs:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          configurationTypes:
          - PLATFORM
          - PLATFORM
          sourceName: sourceName
          configurationUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          severities:
          - SEVERE
          - SEVERE
          states:
          - ACTIVE
          - ACTIVE
          uuids:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        offset: 6
        needTotalCount: true
        limit: 0
        sortBy: uuid
        direction: ASC
      exampleSetFlag: true
      properties:
        direction:
          enum:
          - ASC
          - DESC
          exampleSetFlag: true
          type: string
        filter:
          $ref: '#/components/schemas/AlertApiFilter'
        limit:
          exampleSetFlag: true
          format: int32
          type: integer
        needTotalCount:
          exampleSetFlag: true
          type: boolean
        offset:
          exampleSetFlag: true
          format: int32
          type: integer
        sortBy:
          enum:
          - uuid
          - createTime
          - severity
          - name
          - sourceName
          - state
          exampleSetFlag: true
          type: string
      required:
      - direction
      - filter
      - limit
      - needTotalCount
      - offset
      - sortBy
      type: object
    AlertPagedResponse:
      example:
        entities:
        - severity: SEVERE
          nextNotificationTime: 2000-01-23T04:56:07.000+00:00
          resolvedTime: 2000-01-23T04:56:07.000+00:00
          severityIndex: 6
          message: message
          notifiedState: ACTIVE
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          definitionUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          labels:
          - name: name
            value: value
            key:
              name: name
          - name: name
            value: value
            key:
              name: name
          customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          createTime: 2000-01-23T04:56:07.000+00:00
          sourceUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          stateIndex: 1
          name: name
          notificationAttemptTime: 2000-01-23T04:56:07.000+00:00
          sourceName: sourceName
          state: ACTIVE
          configurationType: PLATFORM
          configurationUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          notificationsFailed: 0
          acknowledgedTime: 2000-01-23T04:56:07.000+00:00
        - severity: SEVERE
          nextNotificationTime: 2000-01-23T04:56:07.000+00:00
          resolvedTime: 2000-01-23T04:56:07.000+00:00
          severityIndex: 6
          message: message
          notifiedState: ACTIVE
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          definitionUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          labels:
          - name: name
            value: value
            key:
              name: name
          - name: name
            value: value
            key:
              name: name
          customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          createTime: 2000-01-23T04:56:07.000+00:00
          sourceUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          stateIndex: 1
          name: name
          notificationAttemptTime: 2000-01-23T04:56:07.000+00:00
          sourceName: sourceName
          state: ACTIVE
          configurationType: PLATFORM
          configurationUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          notificationsFailed: 0
          acknowledgedTime: 2000-01-23T04:56:07.000+00:00
        hasPrev: true
        hasNext: true
        totalCount: 0
      exampleSetFlag: true
      properties:
        entities:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/Alert'
          type: array
        hasNext:
          exampleSetFlag: true
          type: boolean
        hasPrev:
          exampleSetFlag: true
          type: boolean
        totalCount:
          exampleSetFlag: true
          format: int32
          type: integer
      required:
      - entities
      - hasNext
      - hasPrev
      - totalCount
      type: object
    AlertTemplateApiFilter:
      example:
        name: name
        targetType: PLATFORM
      exampleSetFlag: true
      properties:
        name:
          exampleSetFlag: true
          type: string
        targetType:
          enum:
          - PLATFORM
          - UNIVERSE
          exampleSetFlag: true
          type: string
      required:
      - name
      - targetType
      type: object
    AlertingData:
      description: Alerting configuration
      example:
        alertingEmail: test@example.com
        statusUpdateIntervalMs: 1
        checkIntervalMs: 6
        reportOnlyErrors: true
        sendAlertsToYb: true
        activeAlertNotificationIntervalMs: 0
      exampleSetFlag: true
      properties:
        activeAlertNotificationIntervalMs:
          description: "Period, which is used to send active alert notifications"
          exampleSetFlag: true
          format: int64
          type: integer
        alertingEmail:
          description: Alert email address
          example: test@example.com
          exampleSetFlag: true
          type: string
        checkIntervalMs:
          description: "Alert interval, in milliseconds"
          exampleSetFlag: true
          format: int64
          type: integer
        reportOnlyErrors:
          description: Trigger an alert only for errors
          exampleSetFlag: true
          type: boolean
        sendAlertsToYb:
          description: Send alerts to YB as well as to customer
          exampleSetFlag: true
          type: boolean
        statusUpdateIntervalMs:
          description: "Status update of alert interval, in milliseconds"
          exampleSetFlag: true
          format: int64
          type: integer
      type: object
    Audit:
      description: Audit logging for requests and responses
      example:
        auditID: 0
        apiMethod: GET
        customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        targetID: targetID
        payload: "{}"
        action: Create User
        apiCall: /api/v1/customers/<496fdea8-df25-11eb-ba80-0242ac130004>/providers
        userEmail: userEmail
        userUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        taskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        target: User
        timestamp: 2000-01-23T04:56:07.000+00:00
      exampleSetFlag: true
      properties:
        action:
          description: Action
          enum:
          - Set
          - Create
          - Edit
          - Update
          - Delete
          - Register
          - Refresh
          - Upload
          - Upgrade
          - Import
          - Pause
          - Resume
          - Restart
          - Abort
          - Retry
          - Restore
          - Alter
          - Drop
          - Stop
          - SyncXClusterConfig
          - Login
          - Promote
          - Bootstrap
          - Configure
          - RefreshPricing
          - UpgradeSoftware
          - UpgradeGFlags
          - ValidateGFlags
          - UpgradeCerts
          - UpgradeTLS
          - UpgradeVmImage
          - UpgradeSystemd
          - ResizeNode
          - AddMetrics
          - CreateKubernetes
          - SetupDocker
          - RetrieveKmsKey
          - RemoveKmsKeyReferenceHistory
          - UpsertCustomerFeatures
          - CreateSelfSignedCert
          - UpdateEmptyCustomerCertificate
          - GetRootCertificate
          - AddClientCertificate
          - SetDBCredentials
          - CreateUserInDB
          - SetHelm3Compatible
          - SetBackupFlag
          - SetUniverseKey
          - ResetUniverseVersion
          - ConfigUniverseAlert
          - ToggleTls
          - TlsConfigUpdate
          - UpdateDiskSize
          - CreateCluster
          - DeleteCluster
          - CreateAllClusters
          - UpdatePrimaryCluster
          - UpdateReadOnlyCluster
          - CreateReadOnlyCluster
          - DeleteReadOnlyCluster
          - RunYsqlQuery
          - BulkImport
          - CreateMultiTableBackup
          - CreateBackupSchedule
          - EditBackupSchedule
          - StartPeriodicBackup
          - StopPeriodicBackup
          - DetachedNodeInstanceAction
          - NodeInstanceAction
          - DeleteBackupSchedule
          - ChangeUserRole
          - ChangeUserPassword
          - SetSecurity
          - GenerateApiToken
          - ResetSlowQueries
          - ExternalScriptSchedule
          - StopScheduledScript
          - UpdateScheduledScript
          - CreateInstanceType
          - DeleteInstanceType
          example: Create User
          exampleSetFlag: true
          readOnly: true
          type: string
        apiCall:
          description: API call
          example: /api/v1/customers/<496fdea8-df25-11eb-ba80-0242ac130004>/providers
          exampleSetFlag: true
          readOnly: true
          type: string
        apiMethod:
          description: API method
          example: GET
          exampleSetFlag: true
          readOnly: true
          type: string
        auditID:
          exampleSetFlag: true
          format: int64
          type: integer
        customerUUID:
          description: Customer UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
        payload:
          description: Audit UUID
          exampleSetFlag: true
          properties: {}
          readOnly: true
          type: object
        target:
          description: Target
          enum:
          - Session
          - CloudProvider
          - Region
          - AvailabilityZone
          - CustomerConfig
          - KMSConfig
          - Customer
          - Release
          - Certificate
          - Alert
          - AlertChannel
          - AlertDestination
          - MaintenanceWindow
          - AccessKey
          - Universe
          - XClusterConfig
          - Table
          - Backup
          - CustomerTask
          - NodeInstance
          - PlatformInstance
          - Schedule
          - User
          - LoggingConfig
          - RuntimeConfigKey
          - HAConfig
          - HABackup
          - ScheduledScript
          - SupportBundle
          - GFlagsValidation
          example: User
          exampleSetFlag: true
          readOnly: true
          type: string
        targetID:
          description: Target ID
          exampleSetFlag: true
          readOnly: true
          type: string
        taskUUID:
          description: Task UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
        timestamp:
          exampleSetFlag: true
          format: date-time
          type: string
        userEmail:
          description: User Email
          exampleSetFlag: true
          readOnly: true
          type: string
        userUUID:
          description: User UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
      required:
      - auditID
      - timestamp
      type: object
    AvailabilityZone:
      description: Availability zone (AZ) for a region
      example:
        subnet: subnet id
        code: AWS
        name: south-east-1
        active: true
        kubeconfigPath: kubeconfigPath
        config:
          key: config
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        secondarySubnet: secondary subnet id
      exampleSetFlag: true
      properties:
        active:
          description: AZ status. This value is `true` for an active AZ.
          exampleSetFlag: true
          readOnly: true
          type: boolean
        code:
          description: AZ code
          example: AWS
          exampleSetFlag: true
          type: string
        config:
          additionalProperties:
            exampleSetFlag: true
            type: string
          description: AZ configuration values
          exampleSetFlag: true
          type: object
        kubeconfigPath:
          description: Path to Kubernetes configuration file
          exampleSetFlag: true
          readOnly: true
          type: string
        name:
          description: AZ name
          example: south-east-1
          exampleSetFlag: true
          type: string
        secondarySubnet:
          description: AZ secondary subnet
          example: secondary subnet id
          exampleSetFlag: true
          type: string
        subnet:
          description: AZ subnet
          example: subnet id
          exampleSetFlag: true
          type: string
        uuid:
          description: AZ UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
      required:
      - name
      type: object
    AvailabilityZoneData:
      description: "Details of an availability zone, used by the API and UI to validate\
        \ data against input constraints"
      example:
        subnet: subnet
        code: code
        name: name
      exampleSetFlag: true
      properties:
        code:
          description: AZ code
          exampleSetFlag: true
          type: string
        name:
          description: AZ name
          exampleSetFlag: true
          type: string
        subnet:
          description: AZ subnet
          exampleSetFlag: true
          type: string
      required:
      - code
      - name
      type: object
    AvailabilityZoneFormData:
      example:
        availabilityZones:
        - subnet: subnet
          code: code
          name: name
        - subnet: subnet
          code: code
          name: name
      exampleSetFlag: true
      properties:
        availabilityZones:
          description: List of availability zones
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/AvailabilityZoneData'
          type: array
      required:
      - availabilityZones
      type: object
    Backup:
      description: "A single backup. Includes the backup's status, expiration time,\
        \ and configuration."
      example:
        updateTime: 2000-01-23T04:56:07.000+00:00
        taskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        version: V1
        backupUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        storageConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        createTime: 2000-01-23T04:56:07.000+00:00
        scheduleUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        expiry: 2000-01-23T04:56:07.000+00:00
        state: DELETED
        category: YB_BACKUP_SCRIPT
        backupInfo:
          backupSizeInBytes: 0
          expectedUniverseVersion: 6
          minNumBackupsToRetain: 1
          sourceXClusterConfigs:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sse: true
          nodeExporterUser: nodeExporterUser
          parallelism: 5
          backupUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          encryptionAtRestConfig:
            encryptionAtRestEnabled: true
            opType: ENABLE
            kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: CMK
          storageLocation: storageLocation
          newOwner: newOwner
          backupList:
          - null
          - null
          backupType: YQL_TABLE_TYPE
          tableName: tableName
          storageConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          firstTry: true
          alterLoadBalancer: true
          customerUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          extraDependencies:
            installNodeExporter: true
          enableVerboseLogs: true
          scheduleUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          restoreTimeStamp: restoreTimeStamp
          timeBeforeDelete: 2
          tableUUIDList:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ignoreErrors: true
          targetXClusterConfigs:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ybPrevSoftwareVersion: ybPrevSoftwareVersion
          deviceInfo:
            diskIops: 7
            storageClass: storageClass
            numVolumes: 1
            mountPoints: mountPoints
            storageType: IO1
            throughput: 1
            volumeSize: 1
          cronExpression: cronExpression
          tableUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          actionType: CREATE
          keyspace: keyspace
          universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          errorString: errorString
          nodeDetailsSet:
          - nodeName: nodeName
            nodeExporterPort: 5
            placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            machineImage: machineImage
            nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            redisServerHttpPort: 9
            masterState: ToStart
            tserverRpcPort: 9
            ysqlServerHttpPort: 6
            yqlServerRpcPort: 3
            isMaster: true
            cloudInfo:
              mount_roots: mount_roots
              public_ip: public_ip
              secondary_subnet_id: secondary_subnet_id
              private_dns: private_dns
              useTimeSync: true
              secondary_private_ip: secondary_private_ip
              private_ip: private_ip
              cloud: cloud
              assignPublicIP: true
              az: az
              subnet_id: subnet_id
              public_dns: public_dns
              region: region
              instance_type: instance_type
            cronsActive: true
            state: Provisioned
            nodeIdx: 9
            masterRpcPort: 4
            redisServerRpcPort: 6
            tserverHttpPort: 8
            disksAreMountedByUUID: true
            isRedisServer: true
            isTserver: true
            nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isYsqlServer: true
            isYqlServer: true
            azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            masterHttpPort: 1
            ysqlServerRpcPort: 1
            yqlServerHttpPort: 6
          - nodeName: nodeName
            nodeExporterPort: 5
            placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            machineImage: machineImage
            nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            redisServerHttpPort: 9
            masterState: ToStart
            tserverRpcPort: 9
            ysqlServerHttpPort: 6
            yqlServerRpcPort: 3
            isMaster: true
            cloudInfo:
              mount_roots: mount_roots
              public_ip: public_ip
              secondary_subnet_id: secondary_subnet_id
              private_dns: private_dns
              useTimeSync: true
              secondary_private_ip: secondary_private_ip
              private_ip: private_ip
              cloud: cloud
              assignPublicIP: true
              az: az
              subnet_id: subnet_id
              public_dns: public_dns
              region: region
              instance_type: instance_type
            cronsActive: true
            state: Provisioned
            nodeIdx: 9
            masterRpcPort: 4
            redisServerRpcPort: 6
            tserverHttpPort: 8
            disksAreMountedByUUID: true
            isRedisServer: true
            isTserver: true
            nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isYsqlServer: true
            isYqlServer: true
            azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            masterHttpPort: 1
            ysqlServerRpcPort: 1
            yqlServerHttpPort: 6
          transactionalBackup: true
          oldOwner: oldOwner
          tableNameList:
          - tableNameList
          - tableNameList
          schedulingFrequency: 5
          communicationPorts:
            tserverRpcPort: 7
            nodeExporterPort: 1
            tserverHttpPort: 2
            ysqlServerHttpPort: 2
            yqlServerRpcPort: 3
            masterHttpPort: 0
            ysqlServerRpcPort: 4
            yqlServerHttpPort: 9
            masterRpcPort: 6
            redisServerHttpPort: 5
            redisServerRpcPort: 5
          cmkArn: cmkArn
          useTablespaces: true
          previousTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        universeName: universeName
      exampleSetFlag: true
      properties:
        backupInfo:
          $ref: '#/components/schemas/BackupTableParams'
        backupUUID:
          description: Backup UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
        category:
          description: Category of the backup
          enum:
          - YB_BACKUP_SCRIPT
          - YB_CONTROLLER
          exampleSetFlag: true
          type: string
        createTime:
          exampleSetFlag: true
          format: date-time
          type: string
        customerUUID:
          description: Customer UUID that owns this backup
          exampleSetFlag: true
          format: uuid
          type: string
        expiry:
          description: Expiry time (unix timestamp) of the backup
          exampleSetFlag: true
          format: date-time
          type: string
        scheduleUUID:
          description: "Schedule UUID, if this backup is part of a schedule"
          exampleSetFlag: true
          format: uuid
          type: string
        state:
          description: State of the backup
          enum:
          - InProgress
          - Completed
          - Failed
          - Deleted
          - Skipped
          - FailedToDelete
          - Stopped
          - DeleteInProgress
          - QueuedForDeletion
          example: DELETED
          exampleSetFlag: true
          readOnly: true
          type: string
        storageConfigUUID:
          description: Storage Config UUID that created this backup
          exampleSetFlag: true
          format: uuid
          type: string
        taskUUID:
          description: Backup UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
        universeName:
          description: Universe name that created this backup
          exampleSetFlag: true
          type: string
        universeUUID:
          description: Universe UUID that created this backup
          exampleSetFlag: true
          format: uuid
          type: string
        updateTime:
          exampleSetFlag: true
          format: date-time
          type: string
        version:
          description: Version of the backup in a category
          enum:
          - V1
          - V2
          exampleSetFlag: true
          type: string
      required:
      - createTime
      - updateTime
      type: object
    BackupApiFilter:
      example:
        dateRangeEnd: 2000-01-23T04:56:07.000+00:00
        storageConfigUUIDList:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        keyspaceList:
        - keyspaceList
        - keyspaceList
        dateRangeStart: 2000-01-23T04:56:07.000+00:00
        scheduleUUIDList:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        universeNameList:
        - universeNameList
        - universeNameList
        universeUUIDList:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        states:
        - InProgress
        - InProgress
      exampleSetFlag: true
      properties:
        dateRangeEnd:
          exampleSetFlag: true
          format: date-time
          type: string
        dateRangeStart:
          exampleSetFlag: true
          format: date-time
          type: string
        keyspaceList:
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            type: string
          type: array
          uniqueItems: true
        scheduleUUIDList:
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          type: array
          uniqueItems: true
        states:
          exampleSetFlag: false
          items:
            enum:
            - InProgress
            - Completed
            - Failed
            - Deleted
            - Skipped
            - FailedToDelete
            - Stopped
            - DeleteInProgress
            - QueuedForDeletion
            exampleSetFlag: true
            type: string
          type: array
          uniqueItems: true
        storageConfigUUIDList:
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          type: array
          uniqueItems: true
        universeNameList:
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            type: string
          type: array
          uniqueItems: true
        universeUUIDList:
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          type: array
          uniqueItems: true
      required:
      - dateRangeEnd
      - dateRangeStart
      - keyspaceList
      - scheduleUUIDList
      - states
      - storageConfigUUIDList
      - universeNameList
      - universeUUIDList
      type: object
    BackupPagedApiQuery:
      example:
        filter:
          dateRangeEnd: 2000-01-23T04:56:07.000+00:00
          storageConfigUUIDList:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          keyspaceList:
          - keyspaceList
          - keyspaceList
          dateRangeStart: 2000-01-23T04:56:07.000+00:00
          scheduleUUIDList:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          universeNameList:
          - universeNameList
          - universeNameList
          universeUUIDList:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          states:
          - InProgress
          - InProgress
        offset: 6
        needTotalCount: true
        limit: 0
        sortBy: createTime
        direction: ASC
      exampleSetFlag: true
      properties:
        direction:
          enum:
          - ASC
          - DESC
          exampleSetFlag: true
          type: string
        filter:
          $ref: '#/components/schemas/BackupApiFilter'
        limit:
          exampleSetFlag: true
          format: int32
          type: integer
        needTotalCount:
          exampleSetFlag: true
          type: boolean
        offset:
          exampleSetFlag: true
          format: int32
          type: integer
        sortBy:
          enum:
          - createTime
          exampleSetFlag: true
          type: string
      required:
      - direction
      - filter
      - limit
      - needTotalCount
      - offset
      - sortBy
      type: object
    BackupPagedApiResponse:
      example:
        entities:
        - sse: true
          updateTime: 2000-01-23T04:56:07.000+00:00
          backupUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          backupType: YQL_TABLE_TYPE
          isUniversePresent: true
          onDemand: true
          storageConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          createTime: 2000-01-23T04:56:07.000+00:00
          scheduleUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          expiryTime: 2000-01-23T04:56:07.000+00:00
          responseList:
          - backupSizeInBytes: 0
            keyspace: keyspace
            tablesList:
            - tablesList
            - tablesList
            storageLocation: storageLocation
          - backupSizeInBytes: 0
            keyspace: keyspace
            tablesList:
            - tablesList
            - tablesList
            storageLocation: storageLocation
          isStorageConfigPresent: true
          state: InProgress
          totalBackupSizeInBytes: 6
          universeName: universeName
        - sse: true
          updateTime: 2000-01-23T04:56:07.000+00:00
          backupUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          backupType: YQL_TABLE_TYPE
          isUniversePresent: true
          onDemand: true
          storageConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          createTime: 2000-01-23T04:56:07.000+00:00
          scheduleUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          expiryTime: 2000-01-23T04:56:07.000+00:00
          responseList:
          - backupSizeInBytes: 0
            keyspace: keyspace
            tablesList:
            - tablesList
            - tablesList
            storageLocation: storageLocation
          - backupSizeInBytes: 0
            keyspace: keyspace
            tablesList:
            - tablesList
            - tablesList
            storageLocation: storageLocation
          isStorageConfigPresent: true
          state: InProgress
          totalBackupSizeInBytes: 6
          universeName: universeName
        hasPrev: true
        hasNext: true
        totalCount: 1
      exampleSetFlag: true
      properties:
        entities:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/BackupResp'
          type: array
        hasNext:
          exampleSetFlag: true
          type: boolean
        hasPrev:
          exampleSetFlag: true
          type: boolean
        totalCount:
          exampleSetFlag: true
          format: int32
          type: integer
      required:
      - entities
      - hasNext
      - hasPrev
      - totalCount
      type: object
    BackupRequestParams:
      description: Backup table parameters
      example:
        expectedUniverseVersion: 6
        minNumBackupsToRetain: 7
        sourceXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sse: true
        nodeExporterUser: nodeExporterUser
        parallelism: 2
        encryptionAtRestConfig:
          encryptionAtRestEnabled: true
          opType: ENABLE
          kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: CMK
        backupType: YQL_TABLE_TYPE
        storageConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        firstTry: true
        alterLoadBalancer: true
        extraDependencies:
          installNodeExporter: true
        enableVerboseLogs: true
        scheduleUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        keyspaceTableList:
        - keyspace: keyspace
          tableNameList:
          - tableNameList
          - tableNameList
          tableUUIDList:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - keyspace: keyspace
          tableNameList:
          - tableNameList
          - tableNameList
          tableUUIDList:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        timeBeforeDelete: 6
        kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ignoreErrors: true
        targetXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ybPrevSoftwareVersion: ybPrevSoftwareVersion
        deviceInfo:
          diskIops: 7
          storageClass: storageClass
          numVolumes: 1
          mountPoints: mountPoints
          storageType: IO1
          throughput: 1
          volumeSize: 1
        cronExpression: cronExpression
        universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        errorString: errorString
        customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodeDetailsSet:
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        schedulingFrequency: 6
        communicationPorts:
          tserverRpcPort: 7
          nodeExporterPort: 1
          tserverHttpPort: 2
          ysqlServerHttpPort: 2
          yqlServerRpcPort: 3
          masterHttpPort: 0
          ysqlServerRpcPort: 4
          yqlServerHttpPort: 9
          masterRpcPort: 6
          redisServerHttpPort: 5
          redisServerRpcPort: 5
        cmkArn: cmkArn
        previousTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        alterLoadBalancer:
          description: Alter load balancer state
          exampleSetFlag: true
          type: boolean
        backupType:
          description: Backup type
          enum:
          - YQL_TABLE_TYPE
          - REDIS_TABLE_TYPE
          - PGSQL_TABLE_TYPE
          - TRANSACTION_STATUS_TABLE_TYPE
          exampleSetFlag: true
          type: string
        cmkArn:
          description: Amazon Resource Name (ARN) of the CMK
          exampleSetFlag: true
          type: string
        communicationPorts:
          $ref: '#/components/schemas/CommunicationPorts'
        cronExpression:
          description: Cron expression for a recurring backup
          exampleSetFlag: true
          type: string
        customerUUID:
          description: Customer UUID
          exampleSetFlag: true
          format: uuid
          type: string
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        enableVerboseLogs:
          description: Is verbose logging enabled
          exampleSetFlag: true
          type: boolean
        encryptionAtRestConfig:
          $ref: '#/components/schemas/EncryptionAtRestConfig'
        errorString:
          description: Error message
          exampleSetFlag: true
          type: string
        expectedUniverseVersion:
          description: Expected universe version
          exampleSetFlag: true
          format: int32
          type: integer
        extraDependencies:
          $ref: '#/components/schemas/ExtraDependencies'
        firstTry:
          description: Whether this task has been tried before
          exampleSetFlag: true
          type: boolean
        ignoreErrors:
          description: Should table backup errors be ignored
          exampleSetFlag: true
          type: boolean
        keyspaceTableList:
          description: Backup info
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/KeyspaceTable'
          type: array
        kmsConfigUUID:
          description: KMS configuration UUID
          exampleSetFlag: true
          format: uuid
          type: string
        minNumBackupsToRetain:
          description: Minimum number of backups to retain for a particular backup
            schedule
          exampleSetFlag: true
          format: int32
          type: integer
        nodeDetailsSet:
          description: Node details
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/NodeDetails'
          type: array
          uniqueItems: true
        nodeExporterUser:
          description: Node exporter user
          exampleSetFlag: true
          type: string
        parallelism:
          description: Number of concurrent commands to run on nodes over SSH
          exampleSetFlag: true
          format: int32
          type: integer
        previousTaskUUID:
          description: Previous task UUID only if this task is a retry
          exampleSetFlag: true
          format: uuid
          type: string
        scheduleUUID:
          description: Schedule UUID
          exampleSetFlag: true
          format: uuid
          type: string
        schedulingFrequency:
          description: "Frequency to run the backup, in milliseconds"
          exampleSetFlag: true
          format: int64
          type: integer
        sourceXClusterConfigs:
          description: The source universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        sse:
          description: Is SSE
          exampleSetFlag: true
          type: boolean
        storageConfigUUID:
          description: Storage configuration UUID
          exampleSetFlag: true
          format: uuid
          type: string
        targetXClusterConfigs:
          description: The target universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        timeBeforeDelete:
          description: "Time before deleting the backup from storage, in milliseconds"
          exampleSetFlag: true
          format: int64
          type: integer
        universeUUID:
          description: Universe UUID
          exampleSetFlag: true
          format: uuid
          type: string
        ybPrevSoftwareVersion:
          description: Previous software version
          exampleSetFlag: true
          type: string
      required:
      - storageConfigUUID
      - universeUUID
      type: object
    BackupResp:
      example:
        sse: true
        updateTime: 2000-01-23T04:56:07.000+00:00
        backupUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        backupType: YQL_TABLE_TYPE
        isUniversePresent: true
        onDemand: true
        storageConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        createTime: 2000-01-23T04:56:07.000+00:00
        scheduleUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        expiryTime: 2000-01-23T04:56:07.000+00:00
        responseList:
        - backupSizeInBytes: 0
          keyspace: keyspace
          tablesList:
          - tablesList
          - tablesList
          storageLocation: storageLocation
        - backupSizeInBytes: 0
          keyspace: keyspace
          tablesList:
          - tablesList
          - tablesList
          storageLocation: storageLocation
        isStorageConfigPresent: true
        state: InProgress
        totalBackupSizeInBytes: 6
        universeName: universeName
      exampleSetFlag: true
      properties:
        backupType:
          enum:
          - YQL_TABLE_TYPE
          - REDIS_TABLE_TYPE
          - PGSQL_TABLE_TYPE
          - TRANSACTION_STATUS_TABLE_TYPE
          exampleSetFlag: true
          type: string
        backupUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        createTime:
          exampleSetFlag: true
          format: date-time
          type: string
        customerUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        expiryTime:
          exampleSetFlag: true
          format: date-time
          type: string
        isStorageConfigPresent:
          exampleSetFlag: true
          type: boolean
        isUniversePresent:
          exampleSetFlag: true
          type: boolean
        onDemand:
          exampleSetFlag: true
          type: boolean
        responseList:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/KeyspaceTablesList'
          type: array
          uniqueItems: true
        scheduleUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        sse:
          exampleSetFlag: true
          type: boolean
        state:
          enum:
          - InProgress
          - Completed
          - Failed
          - Deleted
          - Skipped
          - FailedToDelete
          - Stopped
          - DeleteInProgress
          - QueuedForDeletion
          exampleSetFlag: true
          type: string
        storageConfigUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        totalBackupSizeInBytes:
          exampleSetFlag: true
          format: int64
          type: integer
        universeName:
          exampleSetFlag: true
          type: string
        universeUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        updateTime:
          exampleSetFlag: true
          format: date-time
          type: string
      required:
      - backupType
      - backupUUID
      - createTime
      - customerUUID
      - expiryTime
      - isStorageConfigPresent
      - isUniversePresent
      - onDemand
      - responseList
      - scheduleUUID
      - sse
      - state
      - storageConfigUUID
      - totalBackupSizeInBytes
      - universeName
      - universeUUID
      - updateTime
      type: object
    BackupStorageInfo:
      description: Backup Storage Info for doing restore operation
      example:
        keyspace: keyspace
        sse: true
        tableNameList:
        - tableNameList
        - tableNameList
        storageLocation: storageLocation
        backupType: YQL_TABLE_TYPE
      exampleSetFlag: true
      properties:
        backupType:
          description: Backup type
          enum:
          - YQL_TABLE_TYPE
          - REDIS_TABLE_TYPE
          - PGSQL_TABLE_TYPE
          - TRANSACTION_STATUS_TABLE_TYPE
          exampleSetFlag: true
          type: string
        keyspace:
          description: Keyspace name
          exampleSetFlag: true
          type: string
        sse:
          description: Is SSE
          exampleSetFlag: true
          type: boolean
        storageLocation:
          description: Storage location
          exampleSetFlag: true
          type: string
        tableNameList:
          description: Tables
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            type: string
          type: array
      type: object
    BackupTableParams:
      description: Backup table parameters
      example:
        backupSizeInBytes: 0
        expectedUniverseVersion: 6
        minNumBackupsToRetain: 1
        sourceXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sse: true
        nodeExporterUser: nodeExporterUser
        parallelism: 5
        backupUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        encryptionAtRestConfig:
          encryptionAtRestEnabled: true
          opType: ENABLE
          kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: CMK
        storageLocation: storageLocation
        newOwner: newOwner
        backupList:
        - null
        - null
        backupType: YQL_TABLE_TYPE
        tableName: tableName
        storageConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        firstTry: true
        alterLoadBalancer: true
        customerUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        extraDependencies:
          installNodeExporter: true
        enableVerboseLogs: true
        scheduleUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        restoreTimeStamp: restoreTimeStamp
        timeBeforeDelete: 2
        tableUUIDList:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ignoreErrors: true
        targetXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ybPrevSoftwareVersion: ybPrevSoftwareVersion
        deviceInfo:
          diskIops: 7
          storageClass: storageClass
          numVolumes: 1
          mountPoints: mountPoints
          storageType: IO1
          throughput: 1
          volumeSize: 1
        cronExpression: cronExpression
        tableUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        actionType: CREATE
        keyspace: keyspace
        universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        errorString: errorString
        nodeDetailsSet:
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        transactionalBackup: true
        oldOwner: oldOwner
        tableNameList:
        - tableNameList
        - tableNameList
        schedulingFrequency: 5
        communicationPorts:
          tserverRpcPort: 7
          nodeExporterPort: 1
          tserverHttpPort: 2
          ysqlServerHttpPort: 2
          yqlServerRpcPort: 3
          masterHttpPort: 0
          ysqlServerRpcPort: 4
          yqlServerHttpPort: 9
          masterRpcPort: 6
          redisServerHttpPort: 5
          redisServerRpcPort: 5
        cmkArn: cmkArn
        useTablespaces: true
        previousTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        actionType:
          description: Action type
          enum:
          - CREATE
          - RESTORE
          - RESTORE_KEYS
          - DELETE
          exampleSetFlag: true
          type: string
        alterLoadBalancer:
          description: Alter load balancer state
          exampleSetFlag: true
          type: boolean
        backupList:
          description: Backups
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/BackupTableParams'
          type: array
        backupSizeInBytes:
          description: Backup size in bytes
          exampleSetFlag: true
          format: int64
          type: integer
        backupType:
          description: Backup type
          enum:
          - YQL_TABLE_TYPE
          - REDIS_TABLE_TYPE
          - PGSQL_TABLE_TYPE
          - TRANSACTION_STATUS_TABLE_TYPE
          exampleSetFlag: true
          type: string
        backupUuid:
          description: Backup UUID
          exampleSetFlag: true
          format: uuid
          type: string
        cmkArn:
          description: Amazon Resource Name (ARN) of the CMK
          exampleSetFlag: true
          type: string
        communicationPorts:
          $ref: '#/components/schemas/CommunicationPorts'
        cronExpression:
          description: Cron expression for a recurring backup
          exampleSetFlag: true
          type: string
        customerUuid:
          description: Customer UUID
          exampleSetFlag: true
          format: uuid
          type: string
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        enableVerboseLogs:
          description: Is verbose logging enabled
          exampleSetFlag: true
          type: boolean
        encryptionAtRestConfig:
          $ref: '#/components/schemas/EncryptionAtRestConfig'
        errorString:
          description: Error message
          exampleSetFlag: true
          type: string
        expectedUniverseVersion:
          description: Expected universe version
          exampleSetFlag: true
          format: int32
          type: integer
        extraDependencies:
          $ref: '#/components/schemas/ExtraDependencies'
        firstTry:
          description: Whether this task has been tried before
          exampleSetFlag: true
          type: boolean
        ignoreErrors:
          description: Should table backup errors be ignored
          exampleSetFlag: true
          type: boolean
        keyspace:
          description: Key space
          exampleSetFlag: true
          type: string
        kmsConfigUUID:
          description: KMS configuration UUID
          exampleSetFlag: true
          format: uuid
          type: string
        minNumBackupsToRetain:
          description: Minimum number of backups to retain for a particular backup
            schedule
          exampleSetFlag: true
          format: int32
          type: integer
        newOwner:
          description: User name of the new tables owner
          exampleSetFlag: true
          type: string
        nodeDetailsSet:
          description: Node details
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/NodeDetails'
          type: array
          uniqueItems: true
        nodeExporterUser:
          description: Node exporter user
          exampleSetFlag: true
          type: string
        oldOwner:
          description: User name of the current tables owner
          exampleSetFlag: true
          type: string
        parallelism:
          description: Number of concurrent commands to run on nodes over SSH
          exampleSetFlag: true
          format: int32
          type: integer
        previousTaskUUID:
          description: Previous task UUID only if this task is a retry
          exampleSetFlag: true
          format: uuid
          type: string
        restoreTimeStamp:
          description: Restore TimeStamp
          exampleSetFlag: true
          type: string
        scheduleUUID:
          description: Schedule UUID
          exampleSetFlag: true
          format: uuid
          type: string
        schedulingFrequency:
          description: "Frequency to run the backup, in milliseconds"
          exampleSetFlag: true
          format: int64
          type: integer
        sourceXClusterConfigs:
          description: The source universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        sse:
          description: Is SSE
          exampleSetFlag: true
          type: boolean
        storageConfigUUID:
          description: Storage configuration UUID
          exampleSetFlag: true
          format: uuid
          type: string
        storageLocation:
          description: Storage location
          exampleSetFlag: true
          type: string
        tableName:
          description: Table name
          exampleSetFlag: true
          type: string
        tableNameList:
          description: Tables
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            type: string
          type: array
        tableUUID:
          description: Table UUID
          exampleSetFlag: true
          format: uuid
          type: string
        tableUUIDList:
          description: Table UUIDs
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          type: array
        targetXClusterConfigs:
          description: The target universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        timeBeforeDelete:
          description: "Time before deleting the backup from storage, in milliseconds"
          exampleSetFlag: true
          format: int64
          type: integer
        transactionalBackup:
          description: Is backup transactional across tables
          exampleSetFlag: true
          type: boolean
        universeUUID:
          description: Associated universe UUID
          exampleSetFlag: true
          format: uuid
          type: string
        useTablespaces:
          description: Is tablespaces information included
          exampleSetFlag: true
          type: boolean
        ybPrevSoftwareVersion:
          description: Previous software version
          exampleSetFlag: true
          type: string
      required:
      - storageConfigUUID
      type: object
    BulkImportParams:
      description: Bulk import parameters
      example:
        expectedUniverseVersion: 0
        sourceXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sse: true
        nodeExporterUser: nodeExporterUser
        encryptionAtRestConfig:
          encryptionAtRestEnabled: true
          opType: ENABLE
          kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: CMK
        targetXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ybPrevSoftwareVersion: ybPrevSoftwareVersion
        deviceInfo:
          diskIops: 7
          storageClass: storageClass
          numVolumes: 1
          mountPoints: mountPoints
          storageType: IO1
          throughput: 1
          volumeSize: 1
        s3Bucket: s3Bucket
        tableName: tableName
        tableUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        keyspace: keyspace
        universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        errorString: errorString
        firstTry: true
        nodeDetailsSet:
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        extraDependencies:
          installNodeExporter: true
        instanceCount: 6
        communicationPorts:
          tserverRpcPort: 7
          nodeExporterPort: 1
          tserverHttpPort: 2
          ysqlServerHttpPort: 2
          yqlServerRpcPort: 3
          masterHttpPort: 0
          ysqlServerRpcPort: 4
          yqlServerHttpPort: 9
          masterRpcPort: 6
          redisServerHttpPort: 5
          redisServerRpcPort: 5
        cmkArn: cmkArn
        previousTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        cmkArn:
          description: Amazon Resource Name (ARN) of the CMK
          exampleSetFlag: true
          type: string
        communicationPorts:
          $ref: '#/components/schemas/CommunicationPorts'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        encryptionAtRestConfig:
          $ref: '#/components/schemas/EncryptionAtRestConfig'
        errorString:
          description: Error message
          exampleSetFlag: true
          type: string
        expectedUniverseVersion:
          description: Expected universe version
          exampleSetFlag: true
          format: int32
          type: integer
        extraDependencies:
          $ref: '#/components/schemas/ExtraDependencies'
        firstTry:
          description: Whether this task has been tried before
          exampleSetFlag: true
          type: boolean
        instanceCount:
          description: Instance count
          exampleSetFlag: true
          format: int32
          type: integer
        keyspace:
          description: Key space
          exampleSetFlag: true
          type: string
        nodeDetailsSet:
          description: Node details
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/NodeDetails'
          type: array
          uniqueItems: true
        nodeExporterUser:
          description: Node exporter user
          exampleSetFlag: true
          type: string
        previousTaskUUID:
          description: Previous task UUID only if this task is a retry
          exampleSetFlag: true
          format: uuid
          type: string
        s3Bucket:
          description: S3 bucket URL
          exampleSetFlag: true
          type: string
        sourceXClusterConfigs:
          description: The source universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        sse:
          description: Is SSE
          exampleSetFlag: true
          type: boolean
        tableName:
          description: Table name
          exampleSetFlag: true
          type: string
        tableUUID:
          description: Table UUID
          exampleSetFlag: true
          format: uuid
          type: string
        targetXClusterConfigs:
          description: The target universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        universeUUID:
          description: Associated universe UUID
          exampleSetFlag: true
          format: uuid
          type: string
        ybPrevSoftwareVersion:
          description: Previous software version
          exampleSetFlag: true
          type: string
      required:
      - s3Bucket
      type: object
    BundleDetails:
      example:
        components:
        - UniverseLogs
        - UniverseLogs
      exampleSetFlag: true
      properties:
        components:
          exampleSetFlag: false
          items:
            enum:
            - UniverseLogs
            - ApplicationLogs
            - OutputFiles
            - ErrorFiles
            - GFlags
            - Instance
            - ConsensusMeta
            - TabletMeta
            exampleSetFlag: true
            type: string
          type: array
      required:
      - components
      type: object
    CertificateDetails:
      example:
        yugabytedb.key: yugabytedb.key
        yugabytedb.crt: yugabytedb.crt
      exampleSetFlag: true
      properties:
        yugabytedb.crt:
          exampleSetFlag: true
          type: string
        yugabytedb.key:
          exampleSetFlag: true
          type: string
      type: object
    CertificateInfo:
      description: SSL certificate used by the universe
      example:
        customServerCertInfo:
          serverCert: serverCert
          serverKey: serverKey
        certType: SelfSigned
        customHCPKICertInfo:
          vaultAddr: vaultAddr
          mountPath: mountPath
          role: role
          engine: engine
          ttlExpiry: 6
          ttl: 0
          vaultToken: vaultToken
        certificate: /opt/yugaware/certs/.../ca.root.cert
        label: yb-admin-example
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        expiryDate: 2000-01-23T04:56:07.000+00:00
        privateKey: /opt/yugaware/.../example.key.pem
        customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        universeDetails:
        - universePaused: true
          updateSucceeded: true
          name: name
          updateInProgress: true
          creationDate: 1
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - universePaused: true
          updateSucceeded: true
          name: name
          updateInProgress: true
          creationDate: 1
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        checksum: checksum
        inUse: true
        customCertPathParams:
          nodeCertPath: nodeCertPath
          nodeKeyPath: nodeKeyPath
          clientKeyPath: clientKeyPath
          clientCertPath: clientCertPath
          rootCertPath: rootCertPath
        startDate: 2000-01-23T04:56:07.000+00:00
      exampleSetFlag: true
      properties:
        certType:
          description: Type of the certificate
          enum:
          - SelfSigned
          - CustomCertHostPath
          - CustomServerCert
          - HashicorpVault
          example: SelfSigned
          exampleSetFlag: true
          type: string
        certificate:
          description: Certificate path
          example: /opt/yugaware/certs/.../ca.root.cert
          exampleSetFlag: true
          type: string
        checksum:
          description: The certificate file's checksum
          exampleSetFlag: true
          readOnly: true
          type: string
        customCertPathParams:
          $ref: '#/components/schemas/CustomCertInfo'
        customHCPKICertInfo:
          $ref: '#/components/schemas/HashicorpVaultConfigParams'
        customServerCertInfo:
          $ref: '#/components/schemas/CustomServerCertInfo'
        customerUUID:
          description: Customer UUID of the backup which it belongs to
          exampleSetFlag: true
          format: uuid
          type: string
        expiryDate:
          description: The certificate's expiry date
          exampleSetFlag: true
          format: date-time
          type: string
        inUse:
          description: Indicates whether the certificate is in use. This value is
            `true` if the universe contains a reference to the certificate.
          exampleSetFlag: true
          readOnly: true
          type: boolean
        label:
          description: Certificate label
          example: yb-admin-example
          exampleSetFlag: true
          type: string
        privateKey:
          description: Private key path
          example: /opt/yugaware/.../example.key.pem
          exampleSetFlag: true
          type: string
        startDate:
          description: The certificate's creation date
          exampleSetFlag: true
          format: date-time
          type: string
        universeDetails:
          description: Associated universe details for the certificate
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/UniverseDetailSubset'
          readOnly: true
          type: array
        uuid:
          description: Certificate UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
      required:
      - customCertPathParams
      - customHCPKICertInfo
      - customServerCertInfo
      type: object
    CertificateParams:
      example:
        certStart: 6
        customCertInfo:
          nodeCertPath: nodeCertPath
          nodeKeyPath: nodeKeyPath
          clientKeyPath: clientKeyPath
          clientCertPath: clientCertPath
          rootCertPath: rootCertPath
        customServerCertData:
          serverCertContent: serverCertContent
          serverKeyContent: serverKeyContent
        certType: SelfSigned
        certContent: certContent
        certExpiry: 0
        keyContent: keyContent
        label: label
        hcVaultCertParams:
          vaultAddr: vaultAddr
          mountPath: mountPath
          role: role
          engine: engine
          ttlExpiry: 6
          ttl: 0
          vaultToken: vaultToken
      exampleSetFlag: true
      properties:
        certContent:
          exampleSetFlag: true
          type: string
        certExpiry:
          exampleSetFlag: true
          format: int64
          type: integer
        certStart:
          exampleSetFlag: true
          format: int64
          type: integer
        certType:
          enum:
          - SelfSigned
          - CustomCertHostPath
          - CustomServerCert
          - HashicorpVault
          exampleSetFlag: true
          type: string
        customCertInfo:
          $ref: '#/components/schemas/CustomCertInfo'
        customServerCertData:
          $ref: '#/components/schemas/CustomServerCertData'
        hcVaultCertParams:
          $ref: '#/components/schemas/HashicorpVaultConfigParams'
        keyContent:
          exampleSetFlag: true
          type: string
        label:
          exampleSetFlag: true
          type: string
      required:
      - certContent
      - certExpiry
      - certStart
      - certType
      - customCertInfo
      - customServerCertData
      - hcVaultCertParams
      - keyContent
      - label
      type: object
    CertsRotateParams:
      example:
        expectedUniverseVersion: 0
        resetAZConfig: true
        sourceXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userAZSelected: true
        nodeExporterUser: nodeExporterUser
        encryptionAtRestConfig:
          encryptionAtRestEnabled: true
          opType: ENABLE
          kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: CMK
        upgradeOption: Rolling
        nodePrefix: nodePrefix
        itestS3PackagePath: itestS3PackagePath
        capability: READ_ONLY
        firstTry: true
        extraDependencies:
          installNodeExporter: true
        rootCA: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodesResizeAvailable: true
        updatingTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        allowInsecure: true
        backupInProgress: true
        clusters:
        - clusterType: PRIMARY
          placementInfo:
            cloudList:
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          regions:
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          userIntent:
            replicationFactor: 2
            useSystemd: true
            enableNodeToNodeEncrypt: true
            preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            enableYCQLAuth: true
            instanceTags:
              key: instanceTags
            providerType: unknown
            tserverGFlags:
              key: tserverGFlags
            ysqlPassword: ysqlPassword
            enableYEDIS: true
            enableVolumeEncryption: true
            provider: provider
            accessKeyCode: accessKeyCode
            enableIPV6: true
            enableYSQLAuth: true
            universeName: universeName
            assignStaticPublicIP: true
            enableYSQL: true
            useTimeSync: true
            regionList:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            useHostname: true
            instanceType: instanceType
            ybSoftwareVersion: ybSoftwareVersion
            deviceInfo:
              diskIops: 7
              storageClass: storageClass
              numVolumes: 1
              mountPoints: mountPoints
              storageType: IO1
              throughput: 1
              volumeSize: 1
            enableYCQL: true
            numNodes: 5
            assignPublicIP: true
            ycqlPassword: ycqlPassword
            enableClientToNodeEncrypt: true
            awsArnString: awsArnString
            enableExposingService: NONE
            masterGFlags:
              key: masterGFlags
          index: 6
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - clusterType: PRIMARY
          placementInfo:
            cloudList:
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          regions:
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          userIntent:
            replicationFactor: 2
            useSystemd: true
            enableNodeToNodeEncrypt: true
            preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            enableYCQLAuth: true
            instanceTags:
              key: instanceTags
            providerType: unknown
            tserverGFlags:
              key: tserverGFlags
            ysqlPassword: ysqlPassword
            enableYEDIS: true
            enableVolumeEncryption: true
            provider: provider
            accessKeyCode: accessKeyCode
            enableIPV6: true
            enableYSQLAuth: true
            universeName: universeName
            assignStaticPublicIP: true
            enableYSQL: true
            useTimeSync: true
            regionList:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            useHostname: true
            instanceType: instanceType
            ybSoftwareVersion: ybSoftwareVersion
            deviceInfo:
              diskIops: 7
              storageClass: storageClass
              numVolumes: 1
              mountPoints: mountPoints
              storageType: IO1
              throughput: 1
              volumeSize: 1
            enableYCQL: true
            numNodes: 5
            assignPublicIP: true
            ycqlPassword: ycqlPassword
            enableClientToNodeEncrypt: true
            awsArnString: awsArnString
            enableExposingService: NONE
            masterGFlags:
              key: masterGFlags
          index: 6
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sleepAfterTServerRestartMillis: 5
        universePaused: true
        updateSucceeded: true
        importedState: NONE
        updateInProgress: true
        targetXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        setTxnTableWaitCountFlag: true
        ybPrevSoftwareVersion: ybPrevSoftwareVersion
        deviceInfo:
          diskIops: 7
          storageClass: storageClass
          numVolumes: 1
          mountPoints: mountPoints
          storageType: IO1
          throughput: 1
          volumeSize: 1
        updatingTask: CloudBootstrap
        kubernetesUpgradeSupported: true
        nextClusterIndex: 6
        universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        errorString: errorString
        clientRootCA: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodeDetailsSet:
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        remotePackagePath: remotePackagePath
        currentClusterType: PRIMARY
        communicationPorts:
          tserverRpcPort: 7
          nodeExporterPort: 1
          tserverHttpPort: 2
          ysqlServerHttpPort: 2
          yqlServerRpcPort: 3
          masterHttpPort: 0
          ysqlServerRpcPort: 4
          yqlServerHttpPort: 9
          masterRpcPort: 6
          redisServerHttpPort: 5
          redisServerRpcPort: 5
        cmkArn: cmkArn
        rootAndClientRootCASame: true
        sleepAfterMasterRestartMillis: 1
        previousTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        allowInsecure:
          exampleSetFlag: true
          type: boolean
        backupInProgress:
          exampleSetFlag: true
          type: boolean
        capability:
          enum:
          - READ_ONLY
          - EDITS_ALLOWED
          exampleSetFlag: true
          type: string
        clientRootCA:
          exampleSetFlag: true
          format: uuid
          type: string
        clusters:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/Cluster'
          type: array
        cmkArn:
          description: Amazon Resource Name (ARN) of the CMK
          exampleSetFlag: true
          type: string
        communicationPorts:
          $ref: '#/components/schemas/CommunicationPorts'
        currentClusterType:
          enum:
          - PRIMARY
          - ASYNC
          exampleSetFlag: true
          type: string
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        encryptionAtRestConfig:
          $ref: '#/components/schemas/EncryptionAtRestConfig'
        errorString:
          description: Error message
          exampleSetFlag: true
          type: string
        expectedUniverseVersion:
          description: Expected universe version
          exampleSetFlag: true
          format: int32
          type: integer
        extraDependencies:
          $ref: '#/components/schemas/ExtraDependencies'
        firstTry:
          description: Whether this task has been tried before
          exampleSetFlag: true
          type: boolean
        importedState:
          enum:
          - NONE
          - STARTED
          - MASTERS_ADDED
          - TSERVERS_ADDED
          - IMPORTED
          exampleSetFlag: true
          type: string
        itestS3PackagePath:
          exampleSetFlag: true
          type: string
        kubernetesUpgradeSupported:
          exampleSetFlag: true
          type: boolean
        nextClusterIndex:
          exampleSetFlag: true
          format: int32
          type: integer
        nodeDetailsSet:
          description: Node details
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/NodeDetails'
          type: array
          uniqueItems: true
        nodeExporterUser:
          description: Node exporter user
          exampleSetFlag: true
          type: string
        nodePrefix:
          exampleSetFlag: true
          type: string
        nodesResizeAvailable:
          exampleSetFlag: true
          type: boolean
        previousTaskUUID:
          description: Previous task UUID only if this task is a retry
          exampleSetFlag: true
          format: uuid
          type: string
        remotePackagePath:
          exampleSetFlag: true
          type: string
        resetAZConfig:
          exampleSetFlag: true
          type: boolean
        rootAndClientRootCASame:
          exampleSetFlag: true
          type: boolean
        rootCA:
          exampleSetFlag: true
          format: uuid
          type: string
        setTxnTableWaitCountFlag:
          exampleSetFlag: true
          type: boolean
        sleepAfterMasterRestartMillis:
          exampleSetFlag: true
          format: int32
          type: integer
        sleepAfterTServerRestartMillis:
          exampleSetFlag: true
          format: int32
          type: integer
        sourceXClusterConfigs:
          description: The source universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        targetXClusterConfigs:
          description: The target universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        universePaused:
          exampleSetFlag: true
          type: boolean
        universeUUID:
          description: Associated universe UUID
          exampleSetFlag: true
          format: uuid
          type: string
        updateInProgress:
          exampleSetFlag: true
          type: boolean
        updateSucceeded:
          exampleSetFlag: true
          type: boolean
        updatingTask:
          enum:
          - CloudBootstrap
          - CloudCleanup
          - CreateCassandraTable
          - CreateUniverse
          - ReadOnlyClusterCreate
          - ReadOnlyClusterDelete
          - CreateKubernetesUniverse
          - DestroyUniverse
          - PauseUniverse
          - ResumeUniverse
          - DestroyKubernetesUniverse
          - DeleteTable
          - BackupUniverse
          - RestoreBackup
          - MultiTableBackup
          - CreateBackup
          - EditUniverse
          - EditKubernetesUniverse
          - ExternalScript
          - KubernetesProvision
          - ImportIntoTable
          - UpgradeUniverse
          - RestartUniverse
          - SoftwareUpgrade
          - SoftwareKubernetesUpgrade
          - GFlagsUpgrade
          - GFlagsKubernetesUpgrade
          - CertsRotate
          - TlsToggle
          - VMImageUpgrade
          - SystemdUpgrade
          - CreateRootVolumes
          - ReplaceRootVolume
          - ChangeInstanceType
          - PersistResizeNode
          - PersistSystemdUpgrade
          - UpdateNodeDetails
          - UpgradeKubernetesUniverse
          - DeleteNodeFromUniverse
          - StopNodeInUniverse
          - StartNodeInUniverse
          - AddNodeToUniverse
          - RemoveNodeFromUniverse
          - ReleaseInstanceFromUniverse
          - SetUniverseKey
          - SetKubernetesUniverseKey
          - CreateKMSConfig
          - EditKMSConfig
          - DeleteKMSConfig
          - UpdateDiskSize
          - StartMasterOnNode
          - CreateXClusterConfig
          - EditXClusterConfig
          - DeleteXClusterConfig
          - SyncXClusterConfig
          - CreateSupportBundle
          - AnsibleClusterServerCtl
          - AnsibleConfigureServers
          - AnsibleDestroyServer
          - PauseServer
          - ResumeServer
          - AnsibleSetupServer
          - AnsibleCreateServer
          - PrecheckNode
          - PrecheckNodeDetached
          - AnsibleUpdateNodeInfo
          - BulkImport
          - ChangeMasterConfig
          - ChangeAdminPassword
          - CreateTable
          - DeleteNode
          - DeleteBackup
          - DeleteBackupYb
          - DeleteCustomerConfig
          - DeleteCustomerStorageConfig
          - UpdateNodeProcess
          - DeleteTableFromUniverse
          - LoadBalancerStateChange
          - ModifyBlackList
          - ManipulateDnsRecordTask
          - RemoveUniverseEntry
          - SetFlagInMemory
          - SetNodeState
          - SwamperTargetsFileUpdate
          - UniverseUpdateSucceeded
          - UpdateAndPersistGFlags
          - UpdatePlacementInfo
          - UpdateSoftwareVersion
          - WaitForDataMove
          - WaitForLeaderBlacklistCompletion
          - WaitForFollowerLag
          - WaitForLoadBalance
          - WaitForMasterLeader
          - WaitForServer
          - WaitForTServerHeartBeats
          - DeleteClusterFromUniverse
          - InstanceActions
          - WaitForServerReady
          - RunExternalScript
          - XClusterConfigSetup
          - XClusterConfigSetStatus
          - XClusterConfigModifyTables
          - XClusterConfigRename
          - XClusterConfigDelete
          - XClusterConfigSync
          - CloudAccessKeyCleanup
          - CloudAccessKeySetup
          - CloudInitializer
          - CloudProviderCleanup
          - CloudRegionCleanup
          - CloudRegionSetup
          - CloudSetup
          - BackupTable
          - BackupTableYb
          - BackupUniverseKeys
          - RestoreBackupYb
          - RestoreUniverseKeys
          - RestoreUniverseKeysYb
          - WaitForLeadersOnPreferredOnly
          - EnableEncryptionAtRest
          - DisableEncryptionAtRest
          - DestroyEncryptionAtRest
          - KubernetesCommandExecutor
          - KubernetesWaitForPod
          - KubernetesCheckNumPod
          - SetActiveUniverseKeys
          - CopyEncryptionKeyFile
          - WaitForEncryptionKeyInMemory
          - UnivSetCertificate
          - CreateAlertDefinitions
          - UniverseSetTlsParams
          - UniverseUpdateRootCert
          - ResetUniverseVersion
          - DeleteCertificate
          - SetNodeStatus
          - CheckMasterLeader
          - CheckMasters
          - CheckTServers
          - WaitForTServerHBs
          - CreatePrometheusSwamperConfig
          - PreflightNodeCheck
          - RunYsqlUpgrade
          - ResizeNode
          - UpdateMountedDisks
          exampleSetFlag: true
          type: string
        updatingTaskUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        upgradeOption:
          enum:
          - Rolling
          - Non-Rolling
          - Non-Restart
          exampleSetFlag: true
          type: string
        userAZSelected:
          exampleSetFlag: true
          type: boolean
        ybPrevSoftwareVersion:
          description: Previous software version
          exampleSetFlag: true
          type: string
      required:
      - clientRootCA
      - clusters
      - kubernetesUpgradeSupported
      - rootAndClientRootCASame
      - rootCA
      - sleepAfterMasterRestartMillis
      - sleepAfterTServerRestartMillis
      - upgradeOption
      type: object
    ClientCertParams:
      example:
        certStart: 6
        certExpiry: 0
        username: username
      exampleSetFlag: true
      properties:
        certExpiry:
          exampleSetFlag: true
          format: int64
          type: integer
        certStart:
          exampleSetFlag: true
          format: int64
          type: integer
        username:
          exampleSetFlag: true
          type: string
      required:
      - certExpiry
      - certStart
      - username
      type: object
    CloudSpecificInfo:
      description: Node information reported by the cloud provider
      example:
        mount_roots: mount_roots
        public_ip: public_ip
        secondary_subnet_id: secondary_subnet_id
        private_dns: private_dns
        useTimeSync: true
        secondary_private_ip: secondary_private_ip
        private_ip: private_ip
        cloud: cloud
        assignPublicIP: true
        az: az
        subnet_id: subnet_id
        public_dns: public_dns
        region: region
        instance_type: instance_type
      exampleSetFlag: true
      properties:
        assignPublicIP:
          description: True if the node has a public IP address assigned
          exampleSetFlag: true
          type: boolean
        az:
          description: The node's availability zone
          exampleSetFlag: true
          type: string
        cloud:
          description: The node's cloud provider
          exampleSetFlag: true
          type: string
        instance_type:
          description: The node's instance type
          exampleSetFlag: true
          type: string
        mount_roots:
          description: Mount roots
          exampleSetFlag: true
          type: string
        private_dns:
          description: The node's private DNS
          exampleSetFlag: true
          type: string
        private_ip:
          description: The node's private IP address
          exampleSetFlag: true
          type: string
        public_dns:
          description: The node's public DNS name
          exampleSetFlag: true
          type: string
        public_ip:
          description: The node's public IP address
          exampleSetFlag: true
          type: string
        region:
          description: The node's region
          exampleSetFlag: true
          type: string
        secondary_private_ip:
          description: Secondary Private IP
          exampleSetFlag: true
          type: string
        secondary_subnet_id:
          description: Secondary Subnet IP
          exampleSetFlag: true
          type: string
        subnet_id:
          description: ID of the subnet on which this node is deployed
          exampleSetFlag: true
          type: string
        useTimeSync:
          description: True if `use time sync` is enabled
          exampleSetFlag: true
          type: boolean
      type: object
    Cluster:
      example:
        clusterType: PRIMARY
        placementInfo:
          cloudList:
          - code: code
            regionList:
            - code: code
              azList:
              - replicationFactor: 5
                subnet: subnet
                numNodesInAZ: 1
                name: name
                isAffinitized: true
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                secondarySubnet: secondarySubnet
              - replicationFactor: 5
                subnet: subnet
                numNodesInAZ: 1
                name: name
                isAffinitized: true
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                secondarySubnet: secondarySubnet
              name: name
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - code: code
              azList:
              - replicationFactor: 5
                subnet: subnet
                numNodesInAZ: 1
                name: name
                isAffinitized: true
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                secondarySubnet: secondarySubnet
              - replicationFactor: 5
                subnet: subnet
                numNodesInAZ: 1
                name: name
                isAffinitized: true
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                secondarySubnet: secondarySubnet
              name: name
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - code: code
            regionList:
            - code: code
              azList:
              - replicationFactor: 5
                subnet: subnet
                numNodesInAZ: 1
                name: name
                isAffinitized: true
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                secondarySubnet: secondarySubnet
              - replicationFactor: 5
                subnet: subnet
                numNodesInAZ: 1
                name: name
                isAffinitized: true
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                secondarySubnet: secondarySubnet
              name: name
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - code: code
              azList:
              - replicationFactor: 5
                subnet: subnet
                numNodesInAZ: 1
                name: name
                isAffinitized: true
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                secondarySubnet: secondarySubnet
              - replicationFactor: 5
                subnet: subnet
                numNodesInAZ: 1
                name: name
                isAffinitized: true
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                secondarySubnet: secondarySubnet
              name: name
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        regions:
        - code: us-west-2
          ybPrebuiltAmi: true
          latitude: 37.22
          active: true
          vnetName: vnetName
          zones:
          - subnet: subnet id
            code: AWS
            name: south-east-1
            active: true
            kubeconfigPath: kubeconfigPath
            config:
              key: config
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            secondarySubnet: secondary subnet id
          - subnet: subnet id
            code: AWS
            name: south-east-1
            active: true
            kubeconfigPath: kubeconfigPath
            config:
              key: config
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            secondarySubnet: secondary subnet id
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          securityGroupId: securityGroupId
          ybImage: TODO
          name: US West (Oregon)
          config:
            key: config
          architecture: x86_64
          longitude: -120.01
        - code: us-west-2
          ybPrebuiltAmi: true
          latitude: 37.22
          active: true
          vnetName: vnetName
          zones:
          - subnet: subnet id
            code: AWS
            name: south-east-1
            active: true
            kubeconfigPath: kubeconfigPath
            config:
              key: config
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            secondarySubnet: secondary subnet id
          - subnet: subnet id
            code: AWS
            name: south-east-1
            active: true
            kubeconfigPath: kubeconfigPath
            config:
              key: config
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            secondarySubnet: secondary subnet id
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          securityGroupId: securityGroupId
          ybImage: TODO
          name: US West (Oregon)
          config:
            key: config
          architecture: x86_64
          longitude: -120.01
        userIntent:
          replicationFactor: 2
          useSystemd: true
          enableNodeToNodeEncrypt: true
          preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          enableYCQLAuth: true
          instanceTags:
            key: instanceTags
          providerType: unknown
          tserverGFlags:
            key: tserverGFlags
          ysqlPassword: ysqlPassword
          enableYEDIS: true
          enableVolumeEncryption: true
          provider: provider
          accessKeyCode: accessKeyCode
          enableIPV6: true
          enableYSQLAuth: true
          universeName: universeName
          assignStaticPublicIP: true
          enableYSQL: true
          useTimeSync: true
          regionList:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          useHostname: true
          instanceType: instanceType
          ybSoftwareVersion: ybSoftwareVersion
          deviceInfo:
            diskIops: 7
            storageClass: storageClass
            numVolumes: 1
            mountPoints: mountPoints
            storageType: IO1
            throughput: 1
            volumeSize: 1
          enableYCQL: true
          numNodes: 5
          assignPublicIP: true
          ycqlPassword: ycqlPassword
          enableClientToNodeEncrypt: true
          awsArnString: awsArnString
          enableExposingService: NONE
          masterGFlags:
            key: masterGFlags
        index: 6
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        clusterType:
          enum:
          - PRIMARY
          - ASYNC
          exampleSetFlag: true
          type: string
        index:
          exampleSetFlag: true
          format: int32
          type: integer
        placementInfo:
          $ref: '#/components/schemas/PlacementInfo'
        regions:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/Region'
          readOnly: true
          type: array
        userIntent:
          $ref: '#/components/schemas/UserIntent'
        uuid:
          exampleSetFlag: true
          format: uuid
          type: string
      required:
      - clusterType
      - userIntent
      type: object
    ColumnDetails:
      description: Details of a CQL database column
      example:
        columnOrder: 6
        isClusteringKey: true
        sortOrder: NONE
        valueType: TINYINT
        name: name
        keyType: TINYINT
        type: TINYINT
        isPartitionKey: true
      exampleSetFlag: true
      properties:
        columnOrder:
          description: "Relative position (column order) for this column, in the table\
            \ and in CQL commands"
          exampleSetFlag: true
          format: int32
          type: integer
        isClusteringKey:
          description: True if this column is a clustering key
          exampleSetFlag: true
          type: boolean
        isPartitionKey:
          description: True if this column is a partition key
          exampleSetFlag: true
          type: boolean
        keyType:
          description: Column key type
          enum:
          - TINYINT
          - SMALLINT
          - INT
          - BIGINT
          - VARCHAR
          - BOOLEAN
          - FLOAT
          - DOUBLE_PRECISION
          - BLOB
          - TIMESTAMP
          - DECIMAL
          - VARINT
          - INET
          - LIST
          - MAP
          - SET
          - UUID
          - TIMEUUID
          - FROZEN
          - DATE
          - TIME
          - JSONB
          - USER_DEFINED_TYPE
          exampleSetFlag: true
          type: string
        name:
          description: Column name
          exampleSetFlag: true
          type: string
        sortOrder:
          description: Sort order for this column. Valid only for clustering columns.
          enum:
          - NONE
          - ASC
          - DESC
          exampleSetFlag: true
          type: string
        type:
          description: The column's data type
          enum:
          - TINYINT
          - SMALLINT
          - INT
          - BIGINT
          - VARCHAR
          - BOOLEAN
          - FLOAT
          - DOUBLE_PRECISION
          - BLOB
          - TIMESTAMP
          - DECIMAL
          - VARINT
          - INET
          - LIST
          - MAP
          - SET
          - UUID
          - TIMEUUID
          - FROZEN
          - DATE
          - TIME
          - JSONB
          - USER_DEFINED_TYPE
          exampleSetFlag: true
          type: string
        valueType:
          description: Column value name
          enum:
          - TINYINT
          - SMALLINT
          - INT
          - BIGINT
          - VARCHAR
          - BOOLEAN
          - FLOAT
          - DOUBLE_PRECISION
          - BLOB
          - TIMESTAMP
          - DECIMAL
          - VARINT
          - INET
          - LIST
          - MAP
          - SET
          - UUID
          - TIMEUUID
          - FROZEN
          - DATE
          - TIME
          - JSONB
          - USER_DEFINED_TYPE
          exampleSetFlag: true
          type: string
      type: object
    CommunicationPorts:
      description: Communication ports
      example:
        tserverRpcPort: 7
        nodeExporterPort: 1
        tserverHttpPort: 2
        ysqlServerHttpPort: 2
        yqlServerRpcPort: 3
        masterHttpPort: 0
        ysqlServerRpcPort: 4
        yqlServerHttpPort: 9
        masterRpcPort: 6
        redisServerHttpPort: 5
        redisServerRpcPort: 5
      exampleSetFlag: true
      properties:
        masterHttpPort:
          description: Master table HTTP port
          exampleSetFlag: true
          format: int32
          type: integer
        masterRpcPort:
          description: Master table RCP port
          exampleSetFlag: true
          format: int32
          type: integer
        nodeExporterPort:
          description: Node exporter port
          exampleSetFlag: true
          format: int32
          type: integer
        redisServerHttpPort:
          description: Redis HTTP port
          exampleSetFlag: true
          format: int32
          type: integer
        redisServerRpcPort:
          description: Redis RPC port
          exampleSetFlag: true
          format: int32
          type: integer
        tserverHttpPort:
          description: Tablet server HTTP port
          exampleSetFlag: true
          format: int32
          type: integer
        tserverRpcPort:
          description: Tablet server RPC port
          exampleSetFlag: true
          format: int32
          type: integer
        yqlServerHttpPort:
          description: YQL HTTP port
          exampleSetFlag: true
          format: int32
          type: integer
        yqlServerRpcPort:
          description: YQL RPC port
          exampleSetFlag: true
          format: int32
          type: integer
        ysqlServerHttpPort:
          description: YSQL HTTP port
          exampleSetFlag: true
          format: int32
          type: integer
        ysqlServerRpcPort:
          description: YSQL RPC port
          exampleSetFlag: true
          format: int32
          type: integer
      type: object
    ConfigEntry:
      description: Configuration entry
      example:
        inherited: true
        value: value
        key: key
      exampleSetFlag: true
      properties:
        inherited:
          description: Is this configuration inherited?
          exampleSetFlag: true
          type: boolean
        key:
          description: Configuration key
          exampleSetFlag: true
          type: string
        value:
          description: Configuration value
          exampleSetFlag: true
          type: string
      type: object
    CustomCertInfo:
      example:
        nodeCertPath: nodeCertPath
        nodeKeyPath: nodeKeyPath
        clientKeyPath: clientKeyPath
        clientCertPath: clientCertPath
        rootCertPath: rootCertPath
      exampleSetFlag: true
      properties:
        clientCertPath:
          exampleSetFlag: true
          type: string
        clientKeyPath:
          exampleSetFlag: true
          type: string
        nodeCertPath:
          exampleSetFlag: true
          type: string
        nodeKeyPath:
          exampleSetFlag: true
          type: string
        rootCertPath:
          exampleSetFlag: true
          type: string
      required:
      - clientCertPath
      - clientKeyPath
      - nodeCertPath
      - nodeKeyPath
      - rootCertPath
      type: object
    CustomServerCertData:
      example:
        serverCertContent: serverCertContent
        serverKeyContent: serverKeyContent
      exampleSetFlag: true
      properties:
        serverCertContent:
          exampleSetFlag: true
          type: string
        serverKeyContent:
          exampleSetFlag: true
          type: string
      required:
      - serverCertContent
      - serverKeyContent
      type: object
    CustomServerCertInfo:
      example:
        serverCert: serverCert
        serverKey: serverKey
      exampleSetFlag: true
      properties:
        serverCert:
          exampleSetFlag: true
          type: string
        serverKey:
          exampleSetFlag: true
          type: string
      required:
      - serverCert
      - serverKey
      type: object
    Customer:
      description: "Customer information, including associated universes"
      example:
        code: admin
        customerId: 1
        name: sridhar
        creationDate: 2000-01-23T04:56:07.000+00:00
        universeUUIDs: "[c3595ca7-68a3-47f0-b1b2-1725886d5ed5, 9e0bb733-556c-4935-83dd-6b742a2c32e6]"
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        code:
          description: Customer code
          example: admin
          exampleSetFlag: true
          type: string
        creationDate:
          description: Creation time
          exampleSetFlag: false
          format: date-time
          readOnly: true
          type: string
        customerId:
          description: Customer ID
          example: 1
          exampleSetFlag: true
          format: int64
          readOnly: true
          type: integer
        name:
          description: Name of customer
          example: sridhar
          exampleSetFlag: true
          type: string
        universeUUIDs:
          description: Universe UUIDs
          example: "[c3595ca7-68a3-47f0-b1b2-1725886d5ed5, 9e0bb733-556c-4935-83dd-6b742a2c32e6]"
          exampleSetFlag: true
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
          uniqueItems: true
        uuid:
          description: Customer UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
      required:
      - code
      - name
      type: object
    CustomerAlertData:
      description: "Format of an alert, used by the API and UI to validate data against\
        \ input constraints"
      example:
        features:
          key: "{}"
        password: XurenRknsc
        code: code
        alertingData:
          alertingEmail: test@example.com
          statusUpdateIntervalMs: 1
          checkIntervalMs: 6
          reportOnlyErrors: true
          sendAlertsToYb: true
          activeAlertNotificationIntervalMs: 0
        callhomeLevel: callhomeLevel
        name: Test alert
        confirmPassword: XurenRknsc
        smtpData:
          smtpServer: smtp.example.com
          smtpUsername: testsmtp
          smtpPort: 465
          smtpPassword: XurenRknsc
          emailFrom: test@example.com
          useTLS: false
          useSSL: true
        email: test@example.com
      exampleSetFlag: true
      properties:
        alertingData:
          $ref: '#/components/schemas/AlertingData'
        callhomeLevel:
          exampleSetFlag: true
          type: string
        code:
          description: Alert code
          exampleSetFlag: true
          type: string
        confirmPassword:
          description: Email password confirmation
          example: XurenRknsc
          exampleSetFlag: true
          type: string
        email:
          description: Alert email address
          example: test@example.com
          exampleSetFlag: true
          type: string
        features:
          additionalProperties:
            exampleSetFlag: true
            properties: {}
            type: object
          description: Features
          exampleSetFlag: true
          type: object
        name:
          description: Alert name
          example: Test alert
          exampleSetFlag: true
          type: string
        password:
          description: Email password
          example: XurenRknsc
          exampleSetFlag: true
          type: string
        smtpData:
          $ref: '#/components/schemas/SmtpData'
      required:
      - alertingData
      - callhomeLevel
      - smtpData
      type: object
    CustomerConfig:
      description: "Customer configuration. Includes storage, alerts, password policy,\
        \ and call-home level."
      example:
        configName: backup20-01-2021
        configUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        data: "{\"AWS_ACCESS_KEY_ID\": \"AK****************ZD\"}"
        name: S3
        state: Active
        type: STORAGE
      exampleSetFlag: true
      properties:
        configName:
          description: Config name
          example: backup20-01-2021
          exampleSetFlag: true
          maxLength: 100
          minLength: 1
          type: string
        configUUID:
          description: Config UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
        customerUUID:
          description: Customer UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
        data:
          description: Configuration data
          example: "{\"AWS_ACCESS_KEY_ID\": \"AK****************ZD\"}"
          exampleSetFlag: true
          properties: {}
          type: object
        name:
          description: Name
          example: S3
          exampleSetFlag: true
          maxLength: 50
          minLength: 1
          type: string
        state:
          description: "state of the customerConfig. Possible values are Active, QueuedForDeletion."
          enum:
          - Active
          - QueuedForDeletion
          exampleSetFlag: true
          readOnly: true
          type: string
        type:
          description: Config type
          enum:
          - STORAGE
          - ALERTS
          - CALLHOME
          - PASSWORD_POLICY
          - OTHER
          example: STORAGE
          exampleSetFlag: true
          type: string
      required:
      - configName
      - customerUUID
      - data
      - name
      - type
      type: object
    CustomerConfigUI:
      description: "Customer configuration with additional information. Includes storage,\
        \ alerts, password policy, and call-home level."
      example:
        configName: backup20-01-2021
        configUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        data: "{\"AWS_ACCESS_KEY_ID\": \"AK****************ZD\"}"
        universeDetails: "{\"name\": \"jd-aws-21-6-21-test4\"}"
        inUse: true
        name: S3
        state: Active
        type: STORAGE
      exampleSetFlag: true
      properties:
        configName:
          description: Config name
          example: backup20-01-2021
          exampleSetFlag: true
          maxLength: 100
          minLength: 1
          type: string
        configUUID:
          description: Config UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
        customerUUID:
          description: Customer UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
        data:
          description: Configuration data
          example: "{\"AWS_ACCESS_KEY_ID\": \"AK****************ZD\"}"
          exampleSetFlag: true
          properties: {}
          type: object
        inUse:
          description: True if there is an in use reference to the object
          exampleSetFlag: true
          readOnly: true
          type: boolean
        name:
          description: Name
          example: S3
          exampleSetFlag: true
          maxLength: 50
          minLength: 1
          type: string
        state:
          description: "state of the customerConfig. Possible values are Active, QueuedForDeletion."
          enum:
          - Active
          - QueuedForDeletion
          exampleSetFlag: true
          readOnly: true
          type: string
        type:
          description: Config type
          enum:
          - STORAGE
          - ALERTS
          - CALLHOME
          - PASSWORD_POLICY
          - OTHER
          example: STORAGE
          exampleSetFlag: true
          type: string
        universeDetails:
          description: Universe details
          example: "{\"name\": \"jd-aws-21-6-21-test4\"}"
          exampleSetFlag: true
          items:
            $ref: '#/components/schemas/UniverseDetailSubset'
          type: array
      required:
      - configName
      - customerUUID
      - data
      - name
      - type
      type: object
    CustomerCountResp:
      example:
        count: 0
      exampleSetFlag: true
      properties:
        count:
          exampleSetFlag: true
          format: int32
          type: integer
      required:
      - count
      type: object
    CustomerDetailsData:
      description: "Customer details, including their universe UUIDs. Only the customer\
        \ code and name are modifiable."
      example:
        code: admin
        alertingData:
          alertingEmail: test@example.com
          statusUpdateIntervalMs: 1
          checkIntervalMs: 6
          reportOnlyErrors: true
          sendAlertsToYb: true
          activeAlertNotificationIntervalMs: 0
        callhomeLevel: MEDIUM
        customerId: 5
        name: Sridhar
        smtpData:
          smtpServer: smtp.example.com
          smtpUsername: testsmtp
          smtpPort: 465
          smtpPassword: XurenRknsc
          emailFrom: test@example.com
          useTLS: false
          useSSL: true
        creationDate: 2000-01-23T04:56:07.000+00:00
        universeUUIDs: "[c3595ca7-68a3-47f0-b1b2-1725886d5ed5, 9e0bb733-556c-4935-83dd-6b742a2c32e6]"
        uuid: uuid
      exampleSetFlag: true
      properties:
        alertingData:
          $ref: '#/components/schemas/AlertingData'
        callhomeLevel:
          description: Call-home level
          example: MEDIUM
          exampleSetFlag: true
          readOnly: true
          type: string
        code:
          description: Customer code
          example: admin
          exampleSetFlag: true
          type: string
        creationDate:
          description: Creation timestamp
          exampleSetFlag: false
          format: date-time
          readOnly: true
          type: string
        customerId:
          description: Customer ID
          exampleSetFlag: true
          format: int32
          readOnly: true
          type: integer
        name:
          description: Customer name
          example: Sridhar
          exampleSetFlag: true
          type: string
        smtpData:
          $ref: '#/components/schemas/SmtpData'
        universeUUIDs:
          description: Associated universe IDs
          example: "[c3595ca7-68a3-47f0-b1b2-1725886d5ed5, 9e0bb733-556c-4935-83dd-6b742a2c32e6]"
          exampleSetFlag: true
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        uuid:
          description: User UUID
          exampleSetFlag: true
          readOnly: true
          type: string
      required:
      - code
      - name
      type: object
    CustomerRegisterFormData:
      example:
        password: password
        code: code
        name: name
        email: email
      exampleSetFlag: true
      properties:
        code:
          exampleSetFlag: true
          type: string
        email:
          exampleSetFlag: true
          type: string
        name:
          exampleSetFlag: true
          type: string
        password:
          exampleSetFlag: true
          type: string
      required:
      - code
      - email
      - name
      - password
      type: object
    CustomerTaskData:
      description: Customer task data
      example:
        retryable: true
        completionTime: 2000-01-23T04:56:07.000+00:00
        createTime: 2000-01-23T04:56:07.000+00:00
        abortable: true
        typeName: Software Upgrade
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        percentComplete: 100
        title: "Deleted Universe : test-universe"
        type: Delete
        targetUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: Complete
        target: Universe
      exampleSetFlag: true
      properties:
        abortable:
          description: Customer task abortable
          exampleSetFlag: true
          type: boolean
        completionTime:
          description: Customer task completion time
          exampleSetFlag: false
          format: date-time
          type: string
        createTime:
          description: Customer task creation time
          exampleSetFlag: false
          format: date-time
          type: string
        id:
          description: Customer task UUID
          exampleSetFlag: true
          format: uuid
          type: string
        percentComplete:
          description: Customer task percentage completed
          example: 100
          exampleSetFlag: true
          format: int32
          type: integer
        retryable:
          description: Customer task retryable
          exampleSetFlag: true
          type: boolean
        status:
          description: Customer task status
          example: Complete
          exampleSetFlag: true
          type: string
        target:
          description: Customer task target
          example: Universe
          exampleSetFlag: true
          type: string
        targetUUID:
          description: Customer task target UUID
          exampleSetFlag: true
          format: uuid
          type: string
        title:
          description: Customer task title
          example: "Deleted Universe : test-universe"
          exampleSetFlag: true
          type: string
        type:
          description: Customer task type
          example: Delete
          exampleSetFlag: true
          type: string
        typeName:
          description: Customer task type name
          example: Software Upgrade
          exampleSetFlag: true
          type: string
      type: object
    DeviceInfo:
      description: Device information
      example:
        diskIops: 7
        storageClass: storageClass
        numVolumes: 1
        mountPoints: mountPoints
        storageType: IO1
        throughput: 1
        volumeSize: 1
      exampleSetFlag: true
      properties:
        diskIops:
          description: Desired IOPS for the volumes mounted on this instance
          exampleSetFlag: true
          format: int32
          type: integer
        mountPoints:
          description: Comma-separated list of mount points for the devices in each
            instance
          exampleSetFlag: true
          type: string
        numVolumes:
          description: Number of volumes to be mounted on this instance at the default
            path
          exampleSetFlag: true
          format: int32
          type: integer
        storageClass:
          description: Name of the storage class
          exampleSetFlag: true
          type: string
        storageType:
          description: Storage type used for this instance
          enum:
          - IO1
          - GP2
          - GP3
          - Scratch
          - Persistent
          - StandardSSD_LRS
          - Premium_LRS
          - UltraSSD_LRS
          exampleSetFlag: true
          type: string
        throughput:
          description: Desired throughput for the volumes mounted on this instance
          exampleSetFlag: true
          format: int32
          type: integer
        volumeSize:
          description: The size of each volume in each instance
          exampleSetFlag: true
          format: int32
          type: integer
      type: object
    EditBackupParams:
      description: Edit backup parameters
      example:
        timeBeforeDeleteFromPresentInMillis: 0
      exampleSetFlag: true
      properties:
        timeBeforeDeleteFromPresentInMillis:
          description: "Time before deleting the backup from storage, in milliseconds"
          exampleSetFlag: true
          format: int64
          type: integer
      required:
      - timeBeforeDeleteFromPresentInMillis
      type: object
    EditBackupScheduleParams:
      description: Info to edit the schedule params for backups
      example:
        cronExpression: cronExpression
        frequency: 0
        status: Active
      exampleSetFlag: true
      properties:
        cronExpression:
          description: Cron expression for scheduling
          exampleSetFlag: true
          type: string
        frequency:
          description: Frequency of the schedule
          exampleSetFlag: true
          format: int64
          type: integer
        status:
          description: State of the schedule
          enum:
          - Active
          - Paused
          - Stopped
          exampleSetFlag: true
          type: string
      type: object
    EditProviderRequest:
      example:
        hostedZoneId: hostedZoneId
        config:
          key: config
      exampleSetFlag: true
      properties:
        config:
          additionalProperties:
            exampleSetFlag: true
            type: string
          exampleSetFlag: true
          type: object
        hostedZoneId:
          exampleSetFlag: true
          type: string
      required:
      - config
      - hostedZoneId
      type: object
    EncryptionAtRestConfig:
      description: Encryption at rest configuration
      example:
        encryptionAtRestEnabled: true
        opType: ENABLE
        kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: CMK
      exampleSetFlag: true
      properties:
        encryptionAtRestEnabled:
          description: Whether a universe is currently encrypted at rest
          exampleSetFlag: true
          type: boolean
        kmsConfigUUID:
          description: KMS configuration UUID
          exampleSetFlag: true
          format: uuid
          type: string
        opType:
          description: "Operation type: enable, disable, or rotate the universe key/encryption\
            \ at rest"
          enum:
          - ENABLE
          - DISABLE
          - UNDEFINED
          exampleSetFlag: true
          type: string
        type:
          description: Whether to generate a data key or just retrieve the CMK ARN
          enum:
          - CMK
          - DATA_KEY
          exampleSetFlag: true
          type: string
      type: object
    ExtraDependencies:
      description: Extra dependencies
      example:
        installNodeExporter: true
      exampleSetFlag: true
      properties:
        installNodeExporter:
          description: Install node exporter on nodes
          exampleSetFlag: true
          type: boolean
      type: object
    GCSLocation:
      example:
        paths:
          x86_64: x86_64
          x86_64_checksum: x86_64_checksum
      exampleSetFlag: true
      properties:
        paths:
          $ref: '#/components/schemas/PackagePaths'
      type: object
    GFlagsUpgradeParams:
      example:
        expectedUniverseVersion: 0
        resetAZConfig: true
        sourceXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userAZSelected: true
        nodeExporterUser: nodeExporterUser
        encryptionAtRestConfig:
          encryptionAtRestEnabled: true
          opType: ENABLE
          kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: CMK
        upgradeOption: Rolling
        nodePrefix: nodePrefix
        itestS3PackagePath: itestS3PackagePath
        tserverGFlags:
          key: tserverGFlags
        capability: READ_ONLY
        firstTry: true
        extraDependencies:
          installNodeExporter: true
        rootCA: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodesResizeAvailable: true
        updatingTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        allowInsecure: true
        backupInProgress: true
        clusters:
        - clusterType: PRIMARY
          placementInfo:
            cloudList:
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          regions:
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          userIntent:
            replicationFactor: 2
            useSystemd: true
            enableNodeToNodeEncrypt: true
            preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            enableYCQLAuth: true
            instanceTags:
              key: instanceTags
            providerType: unknown
            tserverGFlags:
              key: tserverGFlags
            ysqlPassword: ysqlPassword
            enableYEDIS: true
            enableVolumeEncryption: true
            provider: provider
            accessKeyCode: accessKeyCode
            enableIPV6: true
            enableYSQLAuth: true
            universeName: universeName
            assignStaticPublicIP: true
            enableYSQL: true
            useTimeSync: true
            regionList:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            useHostname: true
            instanceType: instanceType
            ybSoftwareVersion: ybSoftwareVersion
            deviceInfo:
              diskIops: 7
              storageClass: storageClass
              numVolumes: 1
              mountPoints: mountPoints
              storageType: IO1
              throughput: 1
              volumeSize: 1
            enableYCQL: true
            numNodes: 5
            assignPublicIP: true
            ycqlPassword: ycqlPassword
            enableClientToNodeEncrypt: true
            awsArnString: awsArnString
            enableExposingService: NONE
            masterGFlags:
              key: masterGFlags
          index: 6
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - clusterType: PRIMARY
          placementInfo:
            cloudList:
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          regions:
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          userIntent:
            replicationFactor: 2
            useSystemd: true
            enableNodeToNodeEncrypt: true
            preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            enableYCQLAuth: true
            instanceTags:
              key: instanceTags
            providerType: unknown
            tserverGFlags:
              key: tserverGFlags
            ysqlPassword: ysqlPassword
            enableYEDIS: true
            enableVolumeEncryption: true
            provider: provider
            accessKeyCode: accessKeyCode
            enableIPV6: true
            enableYSQLAuth: true
            universeName: universeName
            assignStaticPublicIP: true
            enableYSQL: true
            useTimeSync: true
            regionList:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            useHostname: true
            instanceType: instanceType
            ybSoftwareVersion: ybSoftwareVersion
            deviceInfo:
              diskIops: 7
              storageClass: storageClass
              numVolumes: 1
              mountPoints: mountPoints
              storageType: IO1
              throughput: 1
              volumeSize: 1
            enableYCQL: true
            numNodes: 5
            assignPublicIP: true
            ycqlPassword: ycqlPassword
            enableClientToNodeEncrypt: true
            awsArnString: awsArnString
            enableExposingService: NONE
            masterGFlags:
              key: masterGFlags
          index: 6
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sleepAfterTServerRestartMillis: 5
        universePaused: true
        updateSucceeded: true
        importedState: NONE
        updateInProgress: true
        targetXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        setTxnTableWaitCountFlag: true
        ybPrevSoftwareVersion: ybPrevSoftwareVersion
        deviceInfo:
          diskIops: 7
          storageClass: storageClass
          numVolumes: 1
          mountPoints: mountPoints
          storageType: IO1
          throughput: 1
          volumeSize: 1
        updatingTask: CloudBootstrap
        kubernetesUpgradeSupported: true
        nextClusterIndex: 6
        universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        errorString: errorString
        clientRootCA: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodeDetailsSet:
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        remotePackagePath: remotePackagePath
        currentClusterType: PRIMARY
        communicationPorts:
          tserverRpcPort: 7
          nodeExporterPort: 1
          tserverHttpPort: 2
          ysqlServerHttpPort: 2
          yqlServerRpcPort: 3
          masterHttpPort: 0
          ysqlServerRpcPort: 4
          yqlServerHttpPort: 9
          masterRpcPort: 6
          redisServerHttpPort: 5
          redisServerRpcPort: 5
        cmkArn: cmkArn
        rootAndClientRootCASame: true
        sleepAfterMasterRestartMillis: 1
        previousTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        masterGFlags:
          key: masterGFlags
      exampleSetFlag: true
      properties:
        allowInsecure:
          exampleSetFlag: true
          type: boolean
        backupInProgress:
          exampleSetFlag: true
          type: boolean
        capability:
          enum:
          - READ_ONLY
          - EDITS_ALLOWED
          exampleSetFlag: true
          type: string
        clientRootCA:
          exampleSetFlag: true
          format: uuid
          type: string
        clusters:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/Cluster'
          type: array
        cmkArn:
          description: Amazon Resource Name (ARN) of the CMK
          exampleSetFlag: true
          type: string
        communicationPorts:
          $ref: '#/components/schemas/CommunicationPorts'
        currentClusterType:
          enum:
          - PRIMARY
          - ASYNC
          exampleSetFlag: true
          type: string
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        encryptionAtRestConfig:
          $ref: '#/components/schemas/EncryptionAtRestConfig'
        errorString:
          description: Error message
          exampleSetFlag: true
          type: string
        expectedUniverseVersion:
          description: Expected universe version
          exampleSetFlag: true
          format: int32
          type: integer
        extraDependencies:
          $ref: '#/components/schemas/ExtraDependencies'
        firstTry:
          description: Whether this task has been tried before
          exampleSetFlag: true
          type: boolean
        importedState:
          enum:
          - NONE
          - STARTED
          - MASTERS_ADDED
          - TSERVERS_ADDED
          - IMPORTED
          exampleSetFlag: true
          type: string
        itestS3PackagePath:
          exampleSetFlag: true
          type: string
        kubernetesUpgradeSupported:
          exampleSetFlag: true
          type: boolean
        masterGFlags:
          additionalProperties:
            exampleSetFlag: true
            type: string
          exampleSetFlag: true
          type: object
        nextClusterIndex:
          exampleSetFlag: true
          format: int32
          type: integer
        nodeDetailsSet:
          description: Node details
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/NodeDetails'
          type: array
          uniqueItems: true
        nodeExporterUser:
          description: Node exporter user
          exampleSetFlag: true
          type: string
        nodePrefix:
          exampleSetFlag: true
          type: string
        nodesResizeAvailable:
          exampleSetFlag: true
          type: boolean
        previousTaskUUID:
          description: Previous task UUID only if this task is a retry
          exampleSetFlag: true
          format: uuid
          type: string
        remotePackagePath:
          exampleSetFlag: true
          type: string
        resetAZConfig:
          exampleSetFlag: true
          type: boolean
        rootAndClientRootCASame:
          exampleSetFlag: true
          type: boolean
        rootCA:
          exampleSetFlag: true
          format: uuid
          type: string
        setTxnTableWaitCountFlag:
          exampleSetFlag: true
          type: boolean
        sleepAfterMasterRestartMillis:
          exampleSetFlag: true
          format: int32
          type: integer
        sleepAfterTServerRestartMillis:
          exampleSetFlag: true
          format: int32
          type: integer
        sourceXClusterConfigs:
          description: The source universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        targetXClusterConfigs:
          description: The target universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        tserverGFlags:
          additionalProperties:
            exampleSetFlag: true
            type: string
          exampleSetFlag: true
          type: object
        universePaused:
          exampleSetFlag: true
          type: boolean
        universeUUID:
          description: Associated universe UUID
          exampleSetFlag: true
          format: uuid
          type: string
        updateInProgress:
          exampleSetFlag: true
          type: boolean
        updateSucceeded:
          exampleSetFlag: true
          type: boolean
        updatingTask:
          enum:
          - CloudBootstrap
          - CloudCleanup
          - CreateCassandraTable
          - CreateUniverse
          - ReadOnlyClusterCreate
          - ReadOnlyClusterDelete
          - CreateKubernetesUniverse
          - DestroyUniverse
          - PauseUniverse
          - ResumeUniverse
          - DestroyKubernetesUniverse
          - DeleteTable
          - BackupUniverse
          - RestoreBackup
          - MultiTableBackup
          - CreateBackup
          - EditUniverse
          - EditKubernetesUniverse
          - ExternalScript
          - KubernetesProvision
          - ImportIntoTable
          - UpgradeUniverse
          - RestartUniverse
          - SoftwareUpgrade
          - SoftwareKubernetesUpgrade
          - GFlagsUpgrade
          - GFlagsKubernetesUpgrade
          - CertsRotate
          - TlsToggle
          - VMImageUpgrade
          - SystemdUpgrade
          - CreateRootVolumes
          - ReplaceRootVolume
          - ChangeInstanceType
          - PersistResizeNode
          - PersistSystemdUpgrade
          - UpdateNodeDetails
          - UpgradeKubernetesUniverse
          - DeleteNodeFromUniverse
          - StopNodeInUniverse
          - StartNodeInUniverse
          - AddNodeToUniverse
          - RemoveNodeFromUniverse
          - ReleaseInstanceFromUniverse
          - SetUniverseKey
          - SetKubernetesUniverseKey
          - CreateKMSConfig
          - EditKMSConfig
          - DeleteKMSConfig
          - UpdateDiskSize
          - StartMasterOnNode
          - CreateXClusterConfig
          - EditXClusterConfig
          - DeleteXClusterConfig
          - SyncXClusterConfig
          - CreateSupportBundle
          - AnsibleClusterServerCtl
          - AnsibleConfigureServers
          - AnsibleDestroyServer
          - PauseServer
          - ResumeServer
          - AnsibleSetupServer
          - AnsibleCreateServer
          - PrecheckNode
          - PrecheckNodeDetached
          - AnsibleUpdateNodeInfo
          - BulkImport
          - ChangeMasterConfig
          - ChangeAdminPassword
          - CreateTable
          - DeleteNode
          - DeleteBackup
          - DeleteBackupYb
          - DeleteCustomerConfig
          - DeleteCustomerStorageConfig
          - UpdateNodeProcess
          - DeleteTableFromUniverse
          - LoadBalancerStateChange
          - ModifyBlackList
          - ManipulateDnsRecordTask
          - RemoveUniverseEntry
          - SetFlagInMemory
          - SetNodeState
          - SwamperTargetsFileUpdate
          - UniverseUpdateSucceeded
          - UpdateAndPersistGFlags
          - UpdatePlacementInfo
          - UpdateSoftwareVersion
          - WaitForDataMove
          - WaitForLeaderBlacklistCompletion
          - WaitForFollowerLag
          - WaitForLoadBalance
          - WaitForMasterLeader
          - WaitForServer
          - WaitForTServerHeartBeats
          - DeleteClusterFromUniverse
          - InstanceActions
          - WaitForServerReady
          - RunExternalScript
          - XClusterConfigSetup
          - XClusterConfigSetStatus
          - XClusterConfigModifyTables
          - XClusterConfigRename
          - XClusterConfigDelete
          - XClusterConfigSync
          - CloudAccessKeyCleanup
          - CloudAccessKeySetup
          - CloudInitializer
          - CloudProviderCleanup
          - CloudRegionCleanup
          - CloudRegionSetup
          - CloudSetup
          - BackupTable
          - BackupTableYb
          - BackupUniverseKeys
          - RestoreBackupYb
          - RestoreUniverseKeys
          - RestoreUniverseKeysYb
          - WaitForLeadersOnPreferredOnly
          - EnableEncryptionAtRest
          - DisableEncryptionAtRest
          - DestroyEncryptionAtRest
          - KubernetesCommandExecutor
          - KubernetesWaitForPod
          - KubernetesCheckNumPod
          - SetActiveUniverseKeys
          - CopyEncryptionKeyFile
          - WaitForEncryptionKeyInMemory
          - UnivSetCertificate
          - CreateAlertDefinitions
          - UniverseSetTlsParams
          - UniverseUpdateRootCert
          - ResetUniverseVersion
          - DeleteCertificate
          - SetNodeStatus
          - CheckMasterLeader
          - CheckMasters
          - CheckTServers
          - WaitForTServerHBs
          - CreatePrometheusSwamperConfig
          - PreflightNodeCheck
          - RunYsqlUpgrade
          - ResizeNode
          - UpdateMountedDisks
          exampleSetFlag: true
          type: string
        updatingTaskUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        upgradeOption:
          enum:
          - Rolling
          - Non-Rolling
          - Non-Restart
          exampleSetFlag: true
          type: string
        userAZSelected:
          exampleSetFlag: true
          type: boolean
        ybPrevSoftwareVersion:
          description: Previous software version
          exampleSetFlag: true
          type: string
      required:
      - clusters
      - kubernetesUpgradeSupported
      - masterGFlags
      - sleepAfterMasterRestartMillis
      - sleepAfterTServerRestartMillis
      - tserverGFlags
      - upgradeOption
      type: object
    HashicorpVaultConfigParams:
      example:
        vaultAddr: vaultAddr
        mountPath: mountPath
        role: role
        engine: engine
        ttlExpiry: 6
        ttl: 0
        vaultToken: vaultToken
      exampleSetFlag: true
      properties:
        engine:
          exampleSetFlag: true
          type: string
        mountPath:
          exampleSetFlag: true
          type: string
        role:
          exampleSetFlag: true
          type: string
        ttl:
          exampleSetFlag: true
          format: int64
          type: integer
        ttlExpiry:
          exampleSetFlag: true
          format: int64
          type: integer
        vaultAddr:
          exampleSetFlag: true
          type: string
        vaultToken:
          exampleSetFlag: true
          type: string
      required:
      - engine
      - mountPath
      - role
      - vaultAddr
      - vaultToken
      type: object
    HttpLocation:
      example:
        paths:
          x86_64: x86_64
          x86_64_checksum: x86_64_checksum
      exampleSetFlag: true
      properties:
        paths:
          $ref: '#/components/schemas/PackagePaths'
      type: object
    ImportUniverseFormData:
      example:
        singleStep: true
        replicationFactor: 0
        instanceType: instanceType
        regionName: regionName
        providerType: unknown
        masterAddresses: masterAddresses
        universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        regionCode: regionCode
        cloudName: cloudName
        cloudProviderType: cloudProviderType
        zoneName: zoneName
        currentState: BEGIN
        universeName: universeName
        zoneCode: zoneCode
      exampleSetFlag: true
      properties:
        cloudName:
          exampleSetFlag: true
          type: string
        cloudProviderType:
          exampleSetFlag: true
          type: string
        currentState:
          enum:
          - BEGIN
          - IMPORTED_MASTERS
          - IMPORTED_TSERVERS
          - FINISHED
          exampleSetFlag: true
          type: string
        instanceType:
          exampleSetFlag: true
          type: string
        masterAddresses:
          exampleSetFlag: true
          type: string
        providerType:
          enum:
          - unknown
          - aws
          - gcp
          - azu
          - docker
          - onprem
          - kubernetes
          - local
          - other
          exampleSetFlag: true
          type: string
        regionCode:
          exampleSetFlag: true
          type: string
        regionName:
          exampleSetFlag: true
          type: string
        replicationFactor:
          exampleSetFlag: true
          format: int32
          type: integer
        singleStep:
          exampleSetFlag: true
          type: boolean
        universeName:
          exampleSetFlag: true
          type: string
        universeUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        zoneCode:
          exampleSetFlag: true
          type: string
        zoneName:
          exampleSetFlag: true
          type: string
      required:
      - cloudName
      - cloudProviderType
      - currentState
      - instanceType
      - masterAddresses
      - providerType
      - regionCode
      - regionName
      - replicationFactor
      - singleStep
      - universeName
      - universeUUID
      - zoneCode
      - zoneName
      type: object
    InstanceType:
      description: Information about an instance
      example:
        numCores: 1.4658129805029452
        idKey:
          instanceTypeCode: instanceTypeCode
          providerUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        providerCode: providerCode
        memSizeGB: 6.027456183070403
        provider:
          sshPort: 0
          hostVpcId: hostVpcId
          code: code
          destVpcId: destVpcId
          regions:
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          customHostCidrs:
          - customHostCidrs
          - customHostCidrs
          active: true
          hostedZoneName: hostedZoneName
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          hostVpcRegion: hostVpcRegion
          hostedZoneId: hostedZoneId
          sshPrivateKeyContent: sshPrivateKeyContent
          customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          overrideKeyValidate: true
          name: name
          sshUser: sshUser
          config:
            key: config
          airGapInstall: true
          keyPairName: keyPairName
        instanceTypeCode: instanceTypeCode
        instanceTypeDetails:
          tenancy: Shared
          volumeDetailsList:
          - volumeSizeGB: 0
            volumeType: EBS
            mountPath: mountPath
          - volumeSizeGB: 0
            volumeType: EBS
            mountPath: mountPath
        active: true
        providerUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        active:
          description: True if the instance is active
          exampleSetFlag: true
          readOnly: true
          type: boolean
        idKey:
          $ref: '#/components/schemas/InstanceTypeKey'
        instanceTypeCode:
          exampleSetFlag: true
          type: string
        instanceTypeDetails:
          $ref: '#/components/schemas/InstanceTypeDetails'
        memSizeGB:
          description: "The instance's memory size, in gigabytes"
          exampleSetFlag: true
          format: double
          type: number
        numCores:
          description: The instance's number of CPU cores
          exampleSetFlag: true
          format: double
          type: number
        provider:
          $ref: '#/components/schemas/Provider'
        providerCode:
          exampleSetFlag: true
          type: string
        providerUuid:
          exampleSetFlag: true
          format: uuid
          type: string
      required:
      - idKey
      - instanceTypeCode
      - instanceTypeDetails
      - provider
      - providerCode
      - providerUuid
      type: object
    InstanceTypeDetails:
      example:
        tenancy: Shared
        volumeDetailsList:
        - volumeSizeGB: 0
          volumeType: EBS
          mountPath: mountPath
        - volumeSizeGB: 0
          volumeType: EBS
          mountPath: mountPath
      exampleSetFlag: true
      properties:
        tenancy:
          enum:
          - Shared
          - Dedicated
          - Host
          exampleSetFlag: true
          type: string
        volumeDetailsList:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/VolumeDetails'
          type: array
      required:
      - tenancy
      - volumeDetailsList
      type: object
    InstanceTypeKey:
      example:
        instanceTypeCode: instanceTypeCode
        providerUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        instanceTypeCode:
          exampleSetFlag: true
          type: string
        providerUuid:
          exampleSetFlag: true
          format: uuid
          type: string
      required:
      - instanceTypeCode
      - providerUuid
      type: object
    KeyInfo:
      example:
        sshPort: 6
        nodeExporterPort: 0
        installNodeExporter: true
        skipProvisioning: true
        nodeExporterUser: nodeExporterUser
        provisionInstanceScript: provisionInstanceScript
        passwordlessSudoAccess: true
        publicKey: publicKey
        vaultFile: vaultFile
        privateKey: privateKey
        vaultPasswordFile: vaultPasswordFile
        sshUser: sshUser
        deleteRemote: true
        airGapInstall: true
      exampleSetFlag: true
      properties:
        airGapInstall:
          exampleSetFlag: true
          type: boolean
        deleteRemote:
          exampleSetFlag: true
          type: boolean
        installNodeExporter:
          exampleSetFlag: true
          type: boolean
        nodeExporterPort:
          exampleSetFlag: true
          format: int32
          type: integer
        nodeExporterUser:
          exampleSetFlag: true
          type: string
        passwordlessSudoAccess:
          exampleSetFlag: true
          type: boolean
        privateKey:
          exampleSetFlag: true
          type: string
        provisionInstanceScript:
          exampleSetFlag: true
          type: string
        publicKey:
          exampleSetFlag: true
          type: string
        skipProvisioning:
          exampleSetFlag: true
          type: boolean
        sshPort:
          exampleSetFlag: true
          format: int32
          type: integer
        sshUser:
          exampleSetFlag: true
          type: string
        vaultFile:
          exampleSetFlag: true
          type: string
        vaultPasswordFile:
          exampleSetFlag: true
          type: string
      type: object
    KeyspaceTable:
      description: Keyspace and table info for backup
      example:
        keyspace: keyspace
        tableNameList:
        - tableNameList
        - tableNameList
        tableUUIDList:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        keyspace:
          description: keyspace
          exampleSetFlag: true
          type: string
        tableNameList:
          description: Tables
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            type: string
          type: array
        tableUUIDList:
          description: Table UUIDs
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          type: array
      type: object
    KeyspaceTablesList:
      example:
        backupSizeInBytes: 0
        keyspace: keyspace
        tablesList:
        - tablesList
        - tablesList
        storageLocation: storageLocation
      exampleSetFlag: true
      properties:
        backupSizeInBytes:
          exampleSetFlag: true
          format: int64
          type: integer
        keyspace:
          exampleSetFlag: true
          type: string
        storageLocation:
          exampleSetFlag: true
          type: string
        tablesList:
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            type: string
          type: array
          uniqueItems: true
      required:
      - backupSizeInBytes
      - keyspace
      - storageLocation
      - tablesList
      type: object
    LogData:
      example:
        lines:
        - lines
        - lines
      exampleSetFlag: true
      properties:
        lines:
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            type: string
          type: array
      required:
      - lines
      type: object
    MaintenanceWindow:
      description: Maintenance Window
      example:
        alertConfigurationFilter:
          severity: SEVERE
          template: REPLICATION_LAG
          destinationUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          active: true
          destinationType: NO_DESTINATION
          targetType: PLATFORM
          target:
            all: true
            uuids:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          uuids:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        createTime: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        state: FINISHED
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        alertConfigurationFilter:
          $ref: '#/components/schemas/AlertConfigurationApiFilter'
        createTime:
          description: Creation time
          exampleSetFlag: true
          format: date-time
          readOnly: true
          type: string
        customerUUID:
          description: Customer UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
        description:
          description: Description
          exampleSetFlag: true
          maxLength: 2147483647
          minLength: 1
          type: string
        endTime:
          description: End time
          exampleSetFlag: true
          format: date-time
          type: string
        name:
          description: Name
          exampleSetFlag: true
          maxLength: 1000
          minLength: 1
          type: string
        startTime:
          description: Start time
          exampleSetFlag: true
          format: date-time
          type: string
        state:
          description: State
          enum:
          - FINISHED
          - ACTIVE
          - PENDING
          exampleSetFlag: true
          readOnly: true
          type: string
        uuid:
          description: Maintenance window UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
      required:
      - alertConfigurationFilter
      - createTime
      - customerUUID
      - description
      - endTime
      - name
      - startTime
      type: object
    MaintenanceWindowApiFilter:
      example:
        states:
        - FINISHED
        - FINISHED
        uuids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        states:
          exampleSetFlag: false
          items:
            enum:
            - FINISHED
            - ACTIVE
            - PENDING
            exampleSetFlag: true
            type: string
          type: array
          uniqueItems: true
        uuids:
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          type: array
          uniqueItems: true
      required:
      - states
      - uuids
      type: object
    MaintenanceWindowPagedApiQuery:
      example:
        filter:
          states:
          - FINISHED
          - FINISHED
          uuids:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        offset: 6
        needTotalCount: true
        limit: 0
        sortBy: uuid
        direction: ASC
      exampleSetFlag: true
      properties:
        direction:
          enum:
          - ASC
          - DESC
          exampleSetFlag: true
          type: string
        filter:
          $ref: '#/components/schemas/MaintenanceWindowApiFilter'
        limit:
          exampleSetFlag: true
          format: int32
          type: integer
        needTotalCount:
          exampleSetFlag: true
          type: boolean
        offset:
          exampleSetFlag: true
          format: int32
          type: integer
        sortBy:
          enum:
          - uuid
          - name
          - createTime
          - startTime
          - endTime
          - state
          exampleSetFlag: true
          type: string
      required:
      - direction
      - filter
      - limit
      - needTotalCount
      - offset
      - sortBy
      type: object
    MaintenanceWindowPagedResponse:
      example:
        entities:
        - alertConfigurationFilter:
            severity: SEVERE
            template: REPLICATION_LAG
            destinationUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            active: true
            destinationType: NO_DESTINATION
            targetType: PLATFORM
            target:
              all: true
              uuids:
              - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            uuids:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          state: FINISHED
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - alertConfigurationFilter:
            severity: SEVERE
            template: REPLICATION_LAG
            destinationUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            active: true
            destinationType: NO_DESTINATION
            targetType: PLATFORM
            target:
              all: true
              uuids:
              - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            uuids:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          state: FINISHED
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        hasPrev: true
        hasNext: true
        totalCount: 0
      exampleSetFlag: true
      properties:
        entities:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/MaintenanceWindow'
          type: array
        hasNext:
          exampleSetFlag: true
          type: boolean
        hasPrev:
          exampleSetFlag: true
          type: boolean
        totalCount:
          exampleSetFlag: true
          format: int32
          type: integer
      required:
      - entities
      - hasNext
      - hasPrev
      - totalCount
      type: object
    MasterNode:
      example:
        cloudInfo:
          mount_roots: mount_roots
          public_ip: public_ip
          secondary_subnet_id: secondary_subnet_id
          private_dns: private_dns
          useTimeSync: true
          secondary_private_ip: secondary_private_ip
          private_ip: private_ip
          cloud: cloud
          assignPublicIP: true
          az: az
          subnet_id: subnet_id
          public_dns: public_dns
          region: region
          instance_type: instance_type
        masterRpcPort: 0
      exampleSetFlag: true
      properties:
        cloudInfo:
          $ref: '#/components/schemas/CloudSpecificInfo'
        masterRpcPort:
          exampleSetFlag: true
          format: int32
          type: integer
      required:
      - cloudInfo
      - masterRpcPort
      type: object
    MastersList:
      example:
        masters:
        - cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          masterRpcPort: 0
        - cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          masterRpcPort: 0
      exampleSetFlag: true
      properties:
        masters:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/MasterNode'
          type: array
      required:
      - masters
      type: object
    MetricQueryParams:
      description: Metrics request data
      example:
        nodeName: nodeName
        isRecharts: true
        start: 6
        end: 0
        metrics:
        - metrics
        - metrics
        nodePrefix: nodePrefix
      exampleSetFlag: true
      properties:
        end:
          description: End time
          exampleSetFlag: true
          format: int64
          type: integer
        isRecharts:
          description: Is Recharts
          exampleSetFlag: true
          type: boolean
        metrics:
          description: Metrics
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            type: string
          type: array
        nodeName:
          description: Node name
          exampleSetFlag: true
          type: string
        nodePrefix:
          description: Node prefix
          exampleSetFlag: true
          type: string
        start:
          description: Start time
          exampleSetFlag: true
          format: int64
          type: integer
      required:
      - metrics
      - start
      type: object
    MultiTableBackupRequestParams:
      description: Multi-table backup parameters
      example:
        backupSizeInBytes: 0
        expectedUniverseVersion: 6
        minNumBackupsToRetain: 1
        sourceXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sse: true
        nodeExporterUser: nodeExporterUser
        parallelism: 5
        backupUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        encryptionAtRestConfig:
          encryptionAtRestEnabled: true
          opType: ENABLE
          kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: CMK
        storageLocation: storageLocation
        newOwner: newOwner
        backupList:
        - backupSizeInBytes: 0
          expectedUniverseVersion: 6
          minNumBackupsToRetain: 1
          sourceXClusterConfigs:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sse: true
          nodeExporterUser: nodeExporterUser
          parallelism: 5
          backupUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          encryptionAtRestConfig:
            encryptionAtRestEnabled: true
            opType: ENABLE
            kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: CMK
          storageLocation: storageLocation
          newOwner: newOwner
          backupList:
          - null
          - null
          backupType: YQL_TABLE_TYPE
          tableName: tableName
          storageConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          firstTry: true
          alterLoadBalancer: true
          customerUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          extraDependencies:
            installNodeExporter: true
          enableVerboseLogs: true
          scheduleUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          restoreTimeStamp: restoreTimeStamp
          timeBeforeDelete: 2
          tableUUIDList:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ignoreErrors: true
          targetXClusterConfigs:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ybPrevSoftwareVersion: ybPrevSoftwareVersion
          deviceInfo:
            diskIops: 7
            storageClass: storageClass
            numVolumes: 1
            mountPoints: mountPoints
            storageType: IO1
            throughput: 1
            volumeSize: 1
          cronExpression: cronExpression
          tableUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          actionType: CREATE
          keyspace: keyspace
          universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          errorString: errorString
          nodeDetailsSet:
          - nodeName: nodeName
            nodeExporterPort: 5
            placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            machineImage: machineImage
            nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            redisServerHttpPort: 9
            masterState: ToStart
            tserverRpcPort: 9
            ysqlServerHttpPort: 6
            yqlServerRpcPort: 3
            isMaster: true
            cloudInfo:
              mount_roots: mount_roots
              public_ip: public_ip
              secondary_subnet_id: secondary_subnet_id
              private_dns: private_dns
              useTimeSync: true
              secondary_private_ip: secondary_private_ip
              private_ip: private_ip
              cloud: cloud
              assignPublicIP: true
              az: az
              subnet_id: subnet_id
              public_dns: public_dns
              region: region
              instance_type: instance_type
            cronsActive: true
            state: Provisioned
            nodeIdx: 9
            masterRpcPort: 4
            redisServerRpcPort: 6
            tserverHttpPort: 8
            disksAreMountedByUUID: true
            isRedisServer: true
            isTserver: true
            nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isYsqlServer: true
            isYqlServer: true
            azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            masterHttpPort: 1
            ysqlServerRpcPort: 1
            yqlServerHttpPort: 6
          - nodeName: nodeName
            nodeExporterPort: 5
            placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            machineImage: machineImage
            nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            redisServerHttpPort: 9
            masterState: ToStart
            tserverRpcPort: 9
            ysqlServerHttpPort: 6
            yqlServerRpcPort: 3
            isMaster: true
            cloudInfo:
              mount_roots: mount_roots
              public_ip: public_ip
              secondary_subnet_id: secondary_subnet_id
              private_dns: private_dns
              useTimeSync: true
              secondary_private_ip: secondary_private_ip
              private_ip: private_ip
              cloud: cloud
              assignPublicIP: true
              az: az
              subnet_id: subnet_id
              public_dns: public_dns
              region: region
              instance_type: instance_type
            cronsActive: true
            state: Provisioned
            nodeIdx: 9
            masterRpcPort: 4
            redisServerRpcPort: 6
            tserverHttpPort: 8
            disksAreMountedByUUID: true
            isRedisServer: true
            isTserver: true
            nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isYsqlServer: true
            isYqlServer: true
            azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            masterHttpPort: 1
            ysqlServerRpcPort: 1
            yqlServerHttpPort: 6
          transactionalBackup: true
          oldOwner: oldOwner
          tableNameList:
          - tableNameList
          - tableNameList
          schedulingFrequency: 5
          communicationPorts:
            tserverRpcPort: 7
            nodeExporterPort: 1
            tserverHttpPort: 2
            ysqlServerHttpPort: 2
            yqlServerRpcPort: 3
            masterHttpPort: 0
            ysqlServerRpcPort: 4
            yqlServerHttpPort: 9
            masterRpcPort: 6
            redisServerHttpPort: 5
            redisServerRpcPort: 5
          cmkArn: cmkArn
          useTablespaces: true
          previousTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - backupSizeInBytes: 0
          expectedUniverseVersion: 6
          minNumBackupsToRetain: 1
          sourceXClusterConfigs:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sse: true
          nodeExporterUser: nodeExporterUser
          parallelism: 5
          backupUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          encryptionAtRestConfig:
            encryptionAtRestEnabled: true
            opType: ENABLE
            kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: CMK
          storageLocation: storageLocation
          newOwner: newOwner
          backupList:
          - null
          - null
          backupType: YQL_TABLE_TYPE
          tableName: tableName
          storageConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          firstTry: true
          alterLoadBalancer: true
          customerUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          extraDependencies:
            installNodeExporter: true
          enableVerboseLogs: true
          scheduleUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          restoreTimeStamp: restoreTimeStamp
          timeBeforeDelete: 2
          tableUUIDList:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ignoreErrors: true
          targetXClusterConfigs:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ybPrevSoftwareVersion: ybPrevSoftwareVersion
          deviceInfo:
            diskIops: 7
            storageClass: storageClass
            numVolumes: 1
            mountPoints: mountPoints
            storageType: IO1
            throughput: 1
            volumeSize: 1
          cronExpression: cronExpression
          tableUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          actionType: CREATE
          keyspace: keyspace
          universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          errorString: errorString
          nodeDetailsSet:
          - nodeName: nodeName
            nodeExporterPort: 5
            placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            machineImage: machineImage
            nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            redisServerHttpPort: 9
            masterState: ToStart
            tserverRpcPort: 9
            ysqlServerHttpPort: 6
            yqlServerRpcPort: 3
            isMaster: true
            cloudInfo:
              mount_roots: mount_roots
              public_ip: public_ip
              secondary_subnet_id: secondary_subnet_id
              private_dns: private_dns
              useTimeSync: true
              secondary_private_ip: secondary_private_ip
              private_ip: private_ip
              cloud: cloud
              assignPublicIP: true
              az: az
              subnet_id: subnet_id
              public_dns: public_dns
              region: region
              instance_type: instance_type
            cronsActive: true
            state: Provisioned
            nodeIdx: 9
            masterRpcPort: 4
            redisServerRpcPort: 6
            tserverHttpPort: 8
            disksAreMountedByUUID: true
            isRedisServer: true
            isTserver: true
            nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isYsqlServer: true
            isYqlServer: true
            azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            masterHttpPort: 1
            ysqlServerRpcPort: 1
            yqlServerHttpPort: 6
          - nodeName: nodeName
            nodeExporterPort: 5
            placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            machineImage: machineImage
            nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            redisServerHttpPort: 9
            masterState: ToStart
            tserverRpcPort: 9
            ysqlServerHttpPort: 6
            yqlServerRpcPort: 3
            isMaster: true
            cloudInfo:
              mount_roots: mount_roots
              public_ip: public_ip
              secondary_subnet_id: secondary_subnet_id
              private_dns: private_dns
              useTimeSync: true
              secondary_private_ip: secondary_private_ip
              private_ip: private_ip
              cloud: cloud
              assignPublicIP: true
              az: az
              subnet_id: subnet_id
              public_dns: public_dns
              region: region
              instance_type: instance_type
            cronsActive: true
            state: Provisioned
            nodeIdx: 9
            masterRpcPort: 4
            redisServerRpcPort: 6
            tserverHttpPort: 8
            disksAreMountedByUUID: true
            isRedisServer: true
            isTserver: true
            nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isYsqlServer: true
            isYqlServer: true
            azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            masterHttpPort: 1
            ysqlServerRpcPort: 1
            yqlServerHttpPort: 6
          transactionalBackup: true
          oldOwner: oldOwner
          tableNameList:
          - tableNameList
          - tableNameList
          schedulingFrequency: 5
          communicationPorts:
            tserverRpcPort: 7
            nodeExporterPort: 1
            tserverHttpPort: 2
            ysqlServerHttpPort: 2
            yqlServerRpcPort: 3
            masterHttpPort: 0
            ysqlServerRpcPort: 4
            yqlServerHttpPort: 9
            masterRpcPort: 6
            redisServerHttpPort: 5
            redisServerRpcPort: 5
          cmkArn: cmkArn
          useTablespaces: true
          previousTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        backupType: YQL_TABLE_TYPE
        tableName: tableName
        storageConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        firstTry: true
        alterLoadBalancer: true
        customerUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        extraDependencies:
          installNodeExporter: true
        enableVerboseLogs: true
        scheduleUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        restoreTimeStamp: restoreTimeStamp
        timeBeforeDelete: 2
        tableUUIDList:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ignoreErrors: true
        targetXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ybPrevSoftwareVersion: ybPrevSoftwareVersion
        deviceInfo:
          diskIops: 7
          storageClass: storageClass
          numVolumes: 1
          mountPoints: mountPoints
          storageType: IO1
          throughput: 1
          volumeSize: 1
        cronExpression: cronExpression
        tableUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        actionType: CREATE
        keyspace: keyspace
        universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        errorString: errorString
        customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodeDetailsSet:
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        transactionalBackup: true
        oldOwner: oldOwner
        tableNameList:
        - tableNameList
        - tableNameList
        schedulingFrequency: 5
        communicationPorts:
          tserverRpcPort: 7
          nodeExporterPort: 1
          tserverHttpPort: 2
          ysqlServerHttpPort: 2
          yqlServerRpcPort: 3
          masterHttpPort: 0
          ysqlServerRpcPort: 4
          yqlServerHttpPort: 9
          masterRpcPort: 6
          redisServerHttpPort: 5
          redisServerRpcPort: 5
        cmkArn: cmkArn
        useTablespaces: true
        previousTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        actionType:
          description: Action type
          enum:
          - CREATE
          - RESTORE
          - RESTORE_KEYS
          - DELETE
          exampleSetFlag: true
          type: string
        alterLoadBalancer:
          description: Alter load balancer state
          exampleSetFlag: true
          type: boolean
        backupList:
          description: Backups
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/BackupTableParams'
          type: array
        backupSizeInBytes:
          description: Backup size in bytes
          exampleSetFlag: true
          format: int64
          type: integer
        backupType:
          description: Backup type
          enum:
          - YQL_TABLE_TYPE
          - REDIS_TABLE_TYPE
          - PGSQL_TABLE_TYPE
          - TRANSACTION_STATUS_TABLE_TYPE
          exampleSetFlag: true
          type: string
        backupUuid:
          description: Backup UUID
          exampleSetFlag: true
          format: uuid
          type: string
        cmkArn:
          description: Amazon Resource Name (ARN) of the CMK
          exampleSetFlag: true
          type: string
        communicationPorts:
          $ref: '#/components/schemas/CommunicationPorts'
        cronExpression:
          description: Cron expression for a recurring backup
          exampleSetFlag: true
          type: string
        customerUUID:
          description: Customer UUID
          exampleSetFlag: true
          format: uuid
          type: string
        customerUuid:
          description: Customer UUID
          exampleSetFlag: true
          format: uuid
          type: string
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        enableVerboseLogs:
          description: Is verbose logging enabled
          exampleSetFlag: true
          type: boolean
        encryptionAtRestConfig:
          $ref: '#/components/schemas/EncryptionAtRestConfig'
        errorString:
          description: Error message
          exampleSetFlag: true
          type: string
        expectedUniverseVersion:
          description: Expected universe version
          exampleSetFlag: true
          format: int32
          type: integer
        extraDependencies:
          $ref: '#/components/schemas/ExtraDependencies'
        firstTry:
          description: Whether this task has been tried before
          exampleSetFlag: true
          type: boolean
        ignoreErrors:
          description: Should table backup errors be ignored
          exampleSetFlag: true
          type: boolean
        keyspace:
          description: Key space
          exampleSetFlag: true
          type: string
        kmsConfigUUID:
          description: KMS configuration UUID
          exampleSetFlag: true
          format: uuid
          type: string
        minNumBackupsToRetain:
          description: Minimum number of backups to retain for a particular backup
            schedule
          exampleSetFlag: true
          format: int32
          type: integer
        newOwner:
          description: User name of the new tables owner
          exampleSetFlag: true
          type: string
        nodeDetailsSet:
          description: Node details
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/NodeDetails'
          type: array
          uniqueItems: true
        nodeExporterUser:
          description: Node exporter user
          exampleSetFlag: true
          type: string
        oldOwner:
          description: User name of the current tables owner
          exampleSetFlag: true
          type: string
        parallelism:
          description: Number of concurrent commands to run on nodes over SSH
          exampleSetFlag: true
          format: int32
          type: integer
        previousTaskUUID:
          description: Previous task UUID only if this task is a retry
          exampleSetFlag: true
          format: uuid
          type: string
        restoreTimeStamp:
          description: Restore TimeStamp
          exampleSetFlag: true
          type: string
        scheduleUUID:
          description: Schedule UUID
          exampleSetFlag: true
          format: uuid
          type: string
        schedulingFrequency:
          description: "Frequency to run the backup, in milliseconds"
          exampleSetFlag: true
          format: int64
          type: integer
        sourceXClusterConfigs:
          description: The source universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        sse:
          description: Is SSE
          exampleSetFlag: true
          type: boolean
        storageConfigUUID:
          description: Storage configuration UUID
          exampleSetFlag: true
          format: uuid
          type: string
        storageLocation:
          description: Storage location
          exampleSetFlag: true
          type: string
        tableName:
          description: Table name
          exampleSetFlag: true
          type: string
        tableNameList:
          description: Tables
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            type: string
          type: array
        tableUUID:
          description: Table UUID
          exampleSetFlag: true
          format: uuid
          type: string
        tableUUIDList:
          description: Table UUIDs
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          type: array
        targetXClusterConfigs:
          description: The target universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        timeBeforeDelete:
          description: "Time before deleting the backup from storage, in milliseconds"
          exampleSetFlag: true
          format: int64
          type: integer
        transactionalBackup:
          description: Is backup transactional across tables
          exampleSetFlag: true
          type: boolean
        universeUUID:
          description: Associated universe UUID
          exampleSetFlag: true
          format: uuid
          type: string
        useTablespaces:
          description: Is tablespaces information included
          exampleSetFlag: true
          type: boolean
        ybPrevSoftwareVersion:
          description: Previous software version
          exampleSetFlag: true
          type: string
      required:
      - storageConfigUUID
      type: object
    NodeActionFormData:
      example:
        nodeAction: ADD
      exampleSetFlag: true
      properties:
        nodeAction:
          enum:
          - ADD
          - REMOVE
          - START
          - STOP
          - DELETE
          - QUERY
          - RELEASE
          - START_MASTER
          - PRECHECK_DETACHED
          exampleSetFlag: true
          type: string
      required:
      - nodeAction
      type: object
    NodeDetails:
      description: Details of a cloud node
      example:
        nodeName: nodeName
        nodeExporterPort: 5
        placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        machineImage: machineImage
        nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        redisServerHttpPort: 9
        masterState: ToStart
        tserverRpcPort: 9
        ysqlServerHttpPort: 6
        yqlServerRpcPort: 3
        isMaster: true
        cloudInfo:
          mount_roots: mount_roots
          public_ip: public_ip
          secondary_subnet_id: secondary_subnet_id
          private_dns: private_dns
          useTimeSync: true
          secondary_private_ip: secondary_private_ip
          private_ip: private_ip
          cloud: cloud
          assignPublicIP: true
          az: az
          subnet_id: subnet_id
          public_dns: public_dns
          region: region
          instance_type: instance_type
        cronsActive: true
        state: Provisioned
        nodeIdx: 9
        masterRpcPort: 4
        redisServerRpcPort: 6
        tserverHttpPort: 8
        disksAreMountedByUUID: true
        isRedisServer: true
        isTserver: true
        nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isYsqlServer: true
        isYqlServer: true
        azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        masterHttpPort: 1
        ysqlServerRpcPort: 1
        yqlServerHttpPort: 6
      exampleSetFlag: true
      properties:
        azUuid:
          description: The availability zone's UUID
          exampleSetFlag: true
          format: uuid
          type: string
        cloudInfo:
          $ref: '#/components/schemas/CloudSpecificInfo'
        cronsActive:
          description: True if cron jobs were properly configured for this node
          exampleSetFlag: true
          type: boolean
        disksAreMountedByUUID:
          description: Disks are mounted by uuid
          exampleSetFlag: true
          type: boolean
        isMaster:
          description: True if this node is a master
          exampleSetFlag: true
          type: boolean
        isRedisServer:
          description: True if this node is a REDIS server
          exampleSetFlag: true
          type: boolean
        isTserver:
          description: True if this node is a Tablet server
          exampleSetFlag: true
          type: boolean
        isYqlServer:
          description: True if this node is a YCQL server
          exampleSetFlag: true
          type: boolean
        isYsqlServer:
          description: True if this node is a YSQL server
          exampleSetFlag: true
          type: boolean
        machineImage:
          description: Machine image name
          exampleSetFlag: true
          type: string
        masterHttpPort:
          description: Master HTTP port
          exampleSetFlag: true
          format: int32
          type: integer
        masterRpcPort:
          description: Master RCP port
          exampleSetFlag: true
          format: int32
          type: integer
        masterState:
          description: Master state
          enum:
          - None
          - ToStart
          - Configured
          - ToStop
          example: ToStart
          exampleSetFlag: true
          type: string
        nodeExporterPort:
          description: Node exporter port
          exampleSetFlag: true
          format: int32
          type: integer
        nodeIdx:
          description: Node ID
          exampleSetFlag: true
          format: int32
          type: integer
        nodeName:
          description: Node name
          exampleSetFlag: true
          type: string
        nodeUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        nodeUuid:
          description: Node UUID
          exampleSetFlag: true
          format: uuid
          type: string
        placementUuid:
          description: UUID of the cluster to which this node belongs
          exampleSetFlag: true
          format: uuid
          type: string
        redisServerHttpPort:
          description: REDIS HTTP port
          exampleSetFlag: true
          format: int32
          type: integer
        redisServerRpcPort:
          description: REDIS RPC port
          exampleSetFlag: true
          format: int32
          type: integer
        state:
          description: Node state
          enum:
          - ToBeAdded
          - InstanceCreated
          - ServerSetup
          - ToJoinCluster
          - Provisioned
          - SoftwareInstalled
          - UpgradeSoftware
          - UpdateGFlags
          - Live
          - Stopping
          - Starting
          - Stopped
          - Unreachable
          - ToBeRemoved
          - Removing
          - Removed
          - Adding
          - BeingDecommissioned
          - Decommissioned
          - UpdateCert
          - ToggleTls
          - Resizing
          - SystemdUpgrade
          example: Provisioned
          exampleSetFlag: true
          type: string
        tserverHttpPort:
          description: Tablet server HTTP port
          exampleSetFlag: true
          format: int32
          type: integer
        tserverRpcPort:
          description: Tablet server RPC port
          exampleSetFlag: true
          format: int32
          type: integer
        yqlServerHttpPort:
          description: YCQL HTTP port
          exampleSetFlag: true
          format: int32
          type: integer
        yqlServerRpcPort:
          description: YCQL RPC port
          exampleSetFlag: true
          format: int32
          type: integer
        ysqlServerHttpPort:
          description: YSQL HTTP port
          exampleSetFlag: true
          format: int32
          type: integer
        ysqlServerRpcPort:
          description: YSQL RPC port
          exampleSetFlag: true
          format: int32
          type: integer
      required:
      - nodeUUID
      type: object
    NodeDetailsResp:
      example:
        nodeName: nodeName
        nodeExporterPort: 4
        allowedActions:
        - ADD
        - ADD
        placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        machineImage: machineImage
        nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        redisServerHttpPort: 1
        masterState: ToStart
        tserverRpcPort: 6
        ysqlServerHttpPort: 4
        yqlServerRpcPort: 1
        isMaster: true
        cloudInfo:
          mount_roots: mount_roots
          public_ip: public_ip
          secondary_subnet_id: secondary_subnet_id
          private_dns: private_dns
          useTimeSync: true
          secondary_private_ip: secondary_private_ip
          private_ip: private_ip
          cloud: cloud
          assignPublicIP: true
          az: az
          subnet_id: subnet_id
          public_dns: public_dns
          region: region
          instance_type: instance_type
        cronsActive: true
        state: Provisioned
        nodeIdx: 7
        masterRpcPort: 2
        redisServerRpcPort: 1
        tserverHttpPort: 1
        disksAreMountedByUUID: true
        isRedisServer: true
        isTserver: true
        nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isYsqlServer: true
        isYqlServer: true
        azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        masterHttpPort: 3
        ysqlServerRpcPort: 5
        yqlServerHttpPort: 7
      exampleSetFlag: true
      properties:
        allowedActions:
          exampleSetFlag: false
          items:
            enum:
            - ADD
            - REMOVE
            - START
            - STOP
            - DELETE
            - QUERY
            - RELEASE
            - START_MASTER
            - PRECHECK_DETACHED
            exampleSetFlag: true
            type: string
          readOnly: true
          type: array
          uniqueItems: true
        azUuid:
          description: The availability zone's UUID
          exampleSetFlag: true
          format: uuid
          type: string
        cloudInfo:
          $ref: '#/components/schemas/CloudSpecificInfo'
        cronsActive:
          description: True if cron jobs were properly configured for this node
          exampleSetFlag: true
          type: boolean
        disksAreMountedByUUID:
          description: Disks are mounted by uuid
          exampleSetFlag: true
          type: boolean
        isMaster:
          description: True if this node is a master
          exampleSetFlag: true
          type: boolean
        isRedisServer:
          description: True if this node is a REDIS server
          exampleSetFlag: true
          type: boolean
        isTserver:
          description: True if this node is a Tablet server
          exampleSetFlag: true
          type: boolean
        isYqlServer:
          description: True if this node is a YCQL server
          exampleSetFlag: true
          type: boolean
        isYsqlServer:
          description: True if this node is a YSQL server
          exampleSetFlag: true
          type: boolean
        machineImage:
          description: Machine image name
          exampleSetFlag: true
          type: string
        masterHttpPort:
          description: Master HTTP port
          exampleSetFlag: true
          format: int32
          type: integer
        masterRpcPort:
          description: Master RCP port
          exampleSetFlag: true
          format: int32
          type: integer
        masterState:
          description: Master state
          enum:
          - None
          - ToStart
          - Configured
          - ToStop
          example: ToStart
          exampleSetFlag: true
          type: string
        nodeExporterPort:
          description: Node exporter port
          exampleSetFlag: true
          format: int32
          type: integer
        nodeIdx:
          description: Node ID
          exampleSetFlag: true
          format: int32
          type: integer
        nodeName:
          description: Node name
          exampleSetFlag: true
          type: string
        nodeUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        nodeUuid:
          description: Node UUID
          exampleSetFlag: true
          format: uuid
          type: string
        placementUuid:
          description: UUID of the cluster to which this node belongs
          exampleSetFlag: true
          format: uuid
          type: string
        redisServerHttpPort:
          description: REDIS HTTP port
          exampleSetFlag: true
          format: int32
          type: integer
        redisServerRpcPort:
          description: REDIS RPC port
          exampleSetFlag: true
          format: int32
          type: integer
        state:
          description: Node state
          enum:
          - ToBeAdded
          - InstanceCreated
          - ServerSetup
          - ToJoinCluster
          - Provisioned
          - SoftwareInstalled
          - UpgradeSoftware
          - UpdateGFlags
          - Live
          - Stopping
          - Starting
          - Stopped
          - Unreachable
          - ToBeRemoved
          - Removing
          - Removed
          - Adding
          - BeingDecommissioned
          - Decommissioned
          - UpdateCert
          - ToggleTls
          - Resizing
          - SystemdUpgrade
          example: Provisioned
          exampleSetFlag: true
          type: string
        tserverHttpPort:
          description: Tablet server HTTP port
          exampleSetFlag: true
          format: int32
          type: integer
        tserverRpcPort:
          description: Tablet server RPC port
          exampleSetFlag: true
          format: int32
          type: integer
        yqlServerHttpPort:
          description: YCQL HTTP port
          exampleSetFlag: true
          format: int32
          type: integer
        yqlServerRpcPort:
          description: YCQL RPC port
          exampleSetFlag: true
          format: int32
          type: integer
        ysqlServerHttpPort:
          description: YSQL HTTP port
          exampleSetFlag: true
          format: int32
          type: integer
        ysqlServerRpcPort:
          description: YSQL RPC port
          exampleSetFlag: true
          format: int32
          type: integer
      required:
      - nodeUUID
      type: object
    NodeInstance:
      description: "A single node instance, attached to a provider and availability\
        \ zone"
      example:
        nodeName: India node
        instanceName: Mumbai instance
        instanceTypeCode: c5large
        inUse: true
        zoneUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        details:
          nodeName: India node
          instanceName: Mumbai instance
          zone: south-east
          instanceType: c5large
          ip: 1.1.1.1
          sshUser: centos
          region: south-east
        nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        detailsJson: "{\"ip\":\"1.1.1.1\",\"sshUser\":\"centos\"}"
      exampleSetFlag: true
      properties:
        details:
          $ref: '#/components/schemas/NodeInstanceData'
        detailsJson:
          description: Node details (as a JSON object)
          example: "{\"ip\":\"1.1.1.1\",\"sshUser\":\"centos\"}"
          exampleSetFlag: true
          type: string
        inUse:
          description: True if the node is in use
          exampleSetFlag: true
          type: boolean
        instanceName:
          description: The node instance's name
          example: Mumbai instance
          exampleSetFlag: true
          type: string
        instanceTypeCode:
          description: The node's type code
          example: c5large
          exampleSetFlag: true
          type: string
        nodeName:
          description: The node's name
          example: India node
          exampleSetFlag: true
          type: string
        nodeUuid:
          description: The node's UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
        zoneUuid:
          description: The availability zone's UUID
          exampleSetFlag: true
          format: uuid
          type: string
      required:
      - details
      type: object
    NodeInstanceData:
      description: Details of a node instance. Used by the API to validate data against
        input constraints.
      example:
        nodeName: India node
        instanceName: Mumbai instance
        zone: south-east
        instanceType: c5large
        ip: 1.1.1.1
        sshUser: centos
        region: south-east
      exampleSetFlag: true
      properties:
        instanceName:
          description: Node instance name
          example: Mumbai instance
          exampleSetFlag: true
          type: string
        instanceType:
          description: Node instance type
          example: c5large
          exampleSetFlag: true
          type: string
        ip:
          description: IP address
          example: 1.1.1.1
          exampleSetFlag: true
          type: string
        nodeName:
          description: Node name
          example: India node
          exampleSetFlag: true
          type: string
        region:
          description: Region
          example: south-east
          exampleSetFlag: true
          type: string
        sshUser:
          description: SSH user
          example: centos
          exampleSetFlag: true
          type: string
        zone:
          description: Zone
          example: south-east
          exampleSetFlag: true
          type: string
      required:
      - instanceName
      - instanceType
      - ip
      - region
      - sshUser
      - zone
      type: object
    NodeInstanceFormData:
      example:
        nodes:
        - nodeName: India node
          instanceName: Mumbai instance
          zone: south-east
          instanceType: c5large
          ip: 1.1.1.1
          sshUser: centos
          region: south-east
        - nodeName: India node
          instanceName: Mumbai instance
          zone: south-east
          instanceType: c5large
          ip: 1.1.1.1
          sshUser: centos
          region: south-east
        - nodeName: India node
          instanceName: Mumbai instance
          zone: south-east
          instanceType: c5large
          ip: 1.1.1.1
          sshUser: centos
          region: south-east
        - nodeName: India node
          instanceName: Mumbai instance
          zone: south-east
          instanceType: c5large
          ip: 1.1.1.1
          sshUser: centos
          region: south-east
        - nodeName: India node
          instanceName: Mumbai instance
          zone: south-east
          instanceType: c5large
          ip: 1.1.1.1
          sshUser: centos
          region: south-east
      exampleSetFlag: true
      properties:
        nodes:
          description: Node instances
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/NodeInstanceData'
          maxItems: 2147483647
          minItems: 1
          type: array
      required:
      - nodes
      type: object
    Package:
      example:
        path: path
        arch: x86_64
      exampleSetFlag: true
      properties:
        arch:
          enum:
          - x86_64
          - arm64
          exampleSetFlag: true
          type: string
        path:
          exampleSetFlag: true
          type: string
      type: object
    PackagePaths:
      example:
        x86_64: x86_64
        x86_64_checksum: x86_64_checksum
      exampleSetFlag: true
      properties:
        x86_64:
          description: Path to x86_64 package
          exampleSetFlag: true
          type: string
        x86_64_checksum:
          description: Checksum for x86_64 package
          exampleSetFlag: true
          type: string
      type: object
    PlacementAZ:
      example:
        replicationFactor: 5
        subnet: subnet
        numNodesInAZ: 1
        name: name
        isAffinitized: true
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        secondarySubnet: secondarySubnet
      exampleSetFlag: true
      properties:
        isAffinitized:
          exampleSetFlag: true
          type: boolean
        name:
          exampleSetFlag: true
          type: string
        numNodesInAZ:
          exampleSetFlag: true
          format: int32
          type: integer
        replicationFactor:
          exampleSetFlag: true
          format: int32
          type: integer
        secondarySubnet:
          exampleSetFlag: true
          type: string
        subnet:
          exampleSetFlag: true
          type: string
        uuid:
          exampleSetFlag: true
          format: uuid
          type: string
      type: object
    PlacementCloud:
      example:
        code: code
        regionList:
        - code: code
          azList:
          - replicationFactor: 5
            subnet: subnet
            numNodesInAZ: 1
            name: name
            isAffinitized: true
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            secondarySubnet: secondarySubnet
          - replicationFactor: 5
            subnet: subnet
            numNodesInAZ: 1
            name: name
            isAffinitized: true
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            secondarySubnet: secondarySubnet
          name: name
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - code: code
          azList:
          - replicationFactor: 5
            subnet: subnet
            numNodesInAZ: 1
            name: name
            isAffinitized: true
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            secondarySubnet: secondarySubnet
          - replicationFactor: 5
            subnet: subnet
            numNodesInAZ: 1
            name: name
            isAffinitized: true
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            secondarySubnet: secondarySubnet
          name: name
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        code:
          exampleSetFlag: true
          type: string
        defaultRegion:
          exampleSetFlag: true
          format: uuid
          type: string
        regionList:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/PlacementRegion'
          type: array
        uuid:
          exampleSetFlag: true
          format: uuid
          type: string
      type: object
    PlacementInfo:
      example:
        cloudList:
        - code: code
          regionList:
          - code: code
            azList:
            - replicationFactor: 5
              subnet: subnet
              numNodesInAZ: 1
              name: name
              isAffinitized: true
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondarySubnet
            - replicationFactor: 5
              subnet: subnet
              numNodesInAZ: 1
              name: name
              isAffinitized: true
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondarySubnet
            name: name
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - code: code
            azList:
            - replicationFactor: 5
              subnet: subnet
              numNodesInAZ: 1
              name: name
              isAffinitized: true
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondarySubnet
            - replicationFactor: 5
              subnet: subnet
              numNodesInAZ: 1
              name: name
              isAffinitized: true
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondarySubnet
            name: name
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - code: code
          regionList:
          - code: code
            azList:
            - replicationFactor: 5
              subnet: subnet
              numNodesInAZ: 1
              name: name
              isAffinitized: true
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondarySubnet
            - replicationFactor: 5
              subnet: subnet
              numNodesInAZ: 1
              name: name
              isAffinitized: true
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondarySubnet
            name: name
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - code: code
            azList:
            - replicationFactor: 5
              subnet: subnet
              numNodesInAZ: 1
              name: name
              isAffinitized: true
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondarySubnet
            - replicationFactor: 5
              subnet: subnet
              numNodesInAZ: 1
              name: name
              isAffinitized: true
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondarySubnet
            name: name
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        cloudList:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/PlacementCloud'
          type: array
      required:
      - cloudList
      type: object
    PlacementRegion:
      example:
        code: code
        azList:
        - replicationFactor: 5
          subnet: subnet
          numNodesInAZ: 1
          name: name
          isAffinitized: true
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          secondarySubnet: secondarySubnet
        - replicationFactor: 5
          subnet: subnet
          numNodesInAZ: 1
          name: name
          isAffinitized: true
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          secondarySubnet: secondarySubnet
        name: name
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        azList:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/PlacementAZ'
          type: array
        code:
          exampleSetFlag: true
          type: string
        name:
          exampleSetFlag: true
          type: string
        uuid:
          exampleSetFlag: true
          format: uuid
          type: string
      type: object
    PlatformLoggingConfig:
      example:
        level: ERROR
        maxHistory: 0
        rolloverPattern: rolloverPattern
      exampleSetFlag: true
      properties:
        level:
          enum:
          - ERROR
          - WARN
          - INFO
          - DEBUG
          - TRACE
          exampleSetFlag: true
          type: string
        maxHistory:
          exampleSetFlag: true
          format: int32
          minimum: 0
          type: integer
        rolloverPattern:
          exampleSetFlag: true
          type: string
      required:
      - level
      - maxHistory
      - rolloverPattern
      type: object
    Provider:
      example:
        sshPort: 0
        hostVpcId: hostVpcId
        code: code
        destVpcId: destVpcId
        regions:
        - code: us-west-2
          ybPrebuiltAmi: true
          latitude: 37.22
          active: true
          vnetName: vnetName
          zones:
          - subnet: subnet id
            code: AWS
            name: south-east-1
            active: true
            kubeconfigPath: kubeconfigPath
            config:
              key: config
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            secondarySubnet: secondary subnet id
          - subnet: subnet id
            code: AWS
            name: south-east-1
            active: true
            kubeconfigPath: kubeconfigPath
            config:
              key: config
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            secondarySubnet: secondary subnet id
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          securityGroupId: securityGroupId
          ybImage: TODO
          name: US West (Oregon)
          config:
            key: config
          architecture: x86_64
          longitude: -120.01
        - code: us-west-2
          ybPrebuiltAmi: true
          latitude: 37.22
          active: true
          vnetName: vnetName
          zones:
          - subnet: subnet id
            code: AWS
            name: south-east-1
            active: true
            kubeconfigPath: kubeconfigPath
            config:
              key: config
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            secondarySubnet: secondary subnet id
          - subnet: subnet id
            code: AWS
            name: south-east-1
            active: true
            kubeconfigPath: kubeconfigPath
            config:
              key: config
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            secondarySubnet: secondary subnet id
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          securityGroupId: securityGroupId
          ybImage: TODO
          name: US West (Oregon)
          config:
            key: config
          architecture: x86_64
          longitude: -120.01
        customHostCidrs:
        - customHostCidrs
        - customHostCidrs
        active: true
        hostedZoneName: hostedZoneName
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        hostVpcRegion: hostVpcRegion
        hostedZoneId: hostedZoneId
        sshPrivateKeyContent: sshPrivateKeyContent
        customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        overrideKeyValidate: true
        name: name
        sshUser: sshUser
        config:
          key: config
        airGapInstall: true
        keyPairName: keyPairName
      exampleSetFlag: true
      properties:
        active:
          description: Provider active status
          exampleSetFlag: true
          readOnly: true
          type: boolean
        airGapInstall:
          description: Transient property - only present in mutate API request
          exampleSetFlag: true
          type: boolean
        code:
          description: Provider cloud code
          exampleSetFlag: true
          type: string
        config:
          additionalProperties:
            exampleSetFlag: true
            type: string
          exampleSetFlag: true
          type: object
        customHostCidrs:
          description: Transient property - only present in mutate API request
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            type: string
          type: array
        customerUUID:
          description: Customer uuid
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
        destVpcId:
          description: Transient property - only present in mutate API request
          exampleSetFlag: true
          type: string
        hostVpcId:
          description: Transient property - only present in mutate API request
          exampleSetFlag: true
          type: string
        hostVpcRegion:
          description: Transient property - only present in mutate API request
          exampleSetFlag: true
          type: string
        hostedZoneId:
          exampleSetFlag: true
          type: string
        hostedZoneName:
          exampleSetFlag: true
          type: string
        keyPairName:
          description: Transient property - only present in mutate API request
          exampleSetFlag: true
          type: string
        name:
          description: Provider name
          exampleSetFlag: true
          type: string
        overrideKeyValidate:
          description: Transient property - only present in mutate API request
          exampleSetFlag: true
          type: boolean
        regions:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/Region'
          type: array
        sshPort:
          description: Transient property - only present in mutate API request
          exampleSetFlag: true
          format: int32
          type: integer
        sshPrivateKeyContent:
          description: Transient property - only present in mutate API request
          exampleSetFlag: true
          type: string
        sshUser:
          description: Transient property - only present in mutate API request
          exampleSetFlag: true
          type: string
        uuid:
          description: Provider uuid
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
      required:
      - regions
      type: object
    Region:
      description: "Region within a given provider. Typically, this maps to a single\
        \ cloud provider region."
      example:
        code: us-west-2
        ybPrebuiltAmi: true
        latitude: 37.22
        active: true
        vnetName: vnetName
        zones:
        - subnet: subnet id
          code: AWS
          name: south-east-1
          active: true
          kubeconfigPath: kubeconfigPath
          config:
            key: config
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          secondarySubnet: secondary subnet id
        - subnet: subnet id
          code: AWS
          name: south-east-1
          active: true
          kubeconfigPath: kubeconfigPath
          config:
            key: config
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          secondarySubnet: secondary subnet id
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        securityGroupId: securityGroupId
        ybImage: TODO
        name: US West (Oregon)
        config:
          key: config
        architecture: x86_64
        longitude: -120.01
      exampleSetFlag: true
      properties:
        active:
          exampleSetFlag: true
          readOnly: true
          type: boolean
        architecture:
          enum:
          - x86_64
          - arm64
          exampleSetFlag: true
          type: string
        code:
          description: Cloud provider region code
          example: us-west-2
          exampleSetFlag: true
          readOnly: true
          type: string
        config:
          additionalProperties:
            exampleSetFlag: true
            type: string
          exampleSetFlag: true
          type: object
        latitude:
          description: The region's latitude
          example: 37.22
          exampleSetFlag: true
          format: double
          readOnly: true
          type: number
        longitude:
          description: The region's longitude
          example: -120.01
          exampleSetFlag: true
          format: double
          readOnly: true
          type: number
        name:
          description: Cloud provider region name
          example: US West (Oregon)
          exampleSetFlag: true
          type: string
        securityGroupId:
          exampleSetFlag: true
          type: string
        uuid:
          description: Region UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
        vnetName:
          exampleSetFlag: true
          type: string
        ybImage:
          description: The AMI to be used in this region.
          example: TODO
          exampleSetFlag: true
          type: string
        ybPrebuiltAmi:
          description: Indicates whether to use YB Prebuilt AMI flow or not for the
            supplied AMI ID
          exampleSetFlag: true
          type: boolean
        zones:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/AvailabilityZone'
          type: array
      required:
      - zones
      type: object
    RegionFormData:
      example:
        hostVpcId: hostVpcId
        code: code
        destVpcId: destVpcId
        ybImage: ybImage
        latitude: 0.8008281904610115
        name: name
        hostVpcRegion: hostVpcRegion
        longitude: 6.027456183070403
      exampleSetFlag: true
      properties:
        code:
          exampleSetFlag: true
          type: string
        destVpcId:
          exampleSetFlag: true
          type: string
        hostVpcId:
          exampleSetFlag: true
          type: string
        hostVpcRegion:
          exampleSetFlag: true
          type: string
        latitude:
          exampleSetFlag: true
          format: double
          type: number
        longitude:
          exampleSetFlag: true
          format: double
          type: number
        name:
          exampleSetFlag: true
          type: string
        ybImage:
          exampleSetFlag: true
          type: string
      required:
      - code
      - destVpcId
      - hostVpcId
      - hostVpcRegion
      - latitude
      - longitude
      - name
      - ybImage
      type: object
    ReleaseFormData:
      description: Specification for release locations
      example:
        s3:
          paths:
            x86_64: x86_64
            x86_64_checksum: x86_64_checksum
        gcs:
          paths:
            x86_64: x86_64
            x86_64_checksum: x86_64_checksum
        http:
          paths:
            x86_64: x86_64
            x86_64_checksum: x86_64_checksum
        version: version
      exampleSetFlag: true
      properties:
        gcs:
          $ref: '#/components/schemas/GCSLocation'
        http:
          $ref: '#/components/schemas/HttpLocation'
        s3:
          $ref: '#/components/schemas/S3Location'
        version:
          exampleSetFlag: true
          type: string
      required:
      - gcs
      - http
      - s3
      - version
      type: object
    ReleaseMetadata:
      description: Yugabyte release metadata
      example:
        s3:
          paths:
            x86_64: x86_64
            x86_64_checksum: x86_64_checksum
        notes:
        - notes
        - notes
        gcs:
          paths:
            x86_64: x86_64
            x86_64_checksum: x86_64_checksum
        filePath: filePath
        http:
          paths:
            x86_64: x86_64
            x86_64_checksum: x86_64_checksum
        state: ACTIVE
        imageTag: imageTag
        packages:
        - path: path
          arch: x86_64
        - path: path
          arch: x86_64
        chartPath: chartPath
      exampleSetFlag: true
      properties:
        chartPath:
          description: Helm chart path
          exampleSetFlag: true
          type: string
        filePath:
          description: Release file path
          exampleSetFlag: true
          type: string
        gcs:
          $ref: '#/components/schemas/GCSLocation'
        http:
          $ref: '#/components/schemas/HttpLocation'
        imageTag:
          description: Release image tag
          exampleSetFlag: true
          type: string
        notes:
          description: Release notes
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            type: string
          type: array
        packages:
          description: Release packages
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/Package'
          type: array
        s3:
          $ref: '#/components/schemas/S3Location'
        state:
          description: Release state
          enum:
          - ACTIVE
          - DISABLED
          - DELETED
          example: ACTIVE
          exampleSetFlag: true
          type: string
      type: object
    ResizeNodeParams:
      example:
        expectedUniverseVersion: 0
        resetAZConfig: true
        sourceXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userAZSelected: true
        nodeExporterUser: nodeExporterUser
        encryptionAtRestConfig:
          encryptionAtRestEnabled: true
          opType: ENABLE
          kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: CMK
        upgradeOption: Rolling
        nodePrefix: nodePrefix
        itestS3PackagePath: itestS3PackagePath
        capability: READ_ONLY
        firstTry: true
        extraDependencies:
          installNodeExporter: true
        rootCA: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodesResizeAvailable: true
        updatingTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        allowInsecure: true
        backupInProgress: true
        clusters:
        - clusterType: PRIMARY
          placementInfo:
            cloudList:
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          regions:
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          userIntent:
            replicationFactor: 2
            useSystemd: true
            enableNodeToNodeEncrypt: true
            preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            enableYCQLAuth: true
            instanceTags:
              key: instanceTags
            providerType: unknown
            tserverGFlags:
              key: tserverGFlags
            ysqlPassword: ysqlPassword
            enableYEDIS: true
            enableVolumeEncryption: true
            provider: provider
            accessKeyCode: accessKeyCode
            enableIPV6: true
            enableYSQLAuth: true
            universeName: universeName
            assignStaticPublicIP: true
            enableYSQL: true
            useTimeSync: true
            regionList:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            useHostname: true
            instanceType: instanceType
            ybSoftwareVersion: ybSoftwareVersion
            deviceInfo:
              diskIops: 7
              storageClass: storageClass
              numVolumes: 1
              mountPoints: mountPoints
              storageType: IO1
              throughput: 1
              volumeSize: 1
            enableYCQL: true
            numNodes: 5
            assignPublicIP: true
            ycqlPassword: ycqlPassword
            enableClientToNodeEncrypt: true
            awsArnString: awsArnString
            enableExposingService: NONE
            masterGFlags:
              key: masterGFlags
          index: 6
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - clusterType: PRIMARY
          placementInfo:
            cloudList:
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          regions:
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          userIntent:
            replicationFactor: 2
            useSystemd: true
            enableNodeToNodeEncrypt: true
            preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            enableYCQLAuth: true
            instanceTags:
              key: instanceTags
            providerType: unknown
            tserverGFlags:
              key: tserverGFlags
            ysqlPassword: ysqlPassword
            enableYEDIS: true
            enableVolumeEncryption: true
            provider: provider
            accessKeyCode: accessKeyCode
            enableIPV6: true
            enableYSQLAuth: true
            universeName: universeName
            assignStaticPublicIP: true
            enableYSQL: true
            useTimeSync: true
            regionList:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            useHostname: true
            instanceType: instanceType
            ybSoftwareVersion: ybSoftwareVersion
            deviceInfo:
              diskIops: 7
              storageClass: storageClass
              numVolumes: 1
              mountPoints: mountPoints
              storageType: IO1
              throughput: 1
              volumeSize: 1
            enableYCQL: true
            numNodes: 5
            assignPublicIP: true
            ycqlPassword: ycqlPassword
            enableClientToNodeEncrypt: true
            awsArnString: awsArnString
            enableExposingService: NONE
            masterGFlags:
              key: masterGFlags
          index: 6
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sleepAfterTServerRestartMillis: 5
        universePaused: true
        updateSucceeded: true
        importedState: NONE
        updateInProgress: true
        targetXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        setTxnTableWaitCountFlag: true
        ybPrevSoftwareVersion: ybPrevSoftwareVersion
        deviceInfo:
          diskIops: 7
          storageClass: storageClass
          numVolumes: 1
          mountPoints: mountPoints
          storageType: IO1
          throughput: 1
          volumeSize: 1
        updatingTask: CloudBootstrap
        kubernetesUpgradeSupported: true
        nextClusterIndex: 6
        universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        errorString: errorString
        clientRootCA: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodeDetailsSet:
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        remotePackagePath: remotePackagePath
        currentClusterType: PRIMARY
        communicationPorts:
          tserverRpcPort: 7
          nodeExporterPort: 1
          tserverHttpPort: 2
          ysqlServerHttpPort: 2
          yqlServerRpcPort: 3
          masterHttpPort: 0
          ysqlServerRpcPort: 4
          yqlServerHttpPort: 9
          masterRpcPort: 6
          redisServerHttpPort: 5
          redisServerRpcPort: 5
        cmkArn: cmkArn
        forceResizeNode: true
        rootAndClientRootCASame: true
        sleepAfterMasterRestartMillis: 1
        previousTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        allowInsecure:
          exampleSetFlag: true
          type: boolean
        backupInProgress:
          exampleSetFlag: true
          type: boolean
        capability:
          enum:
          - READ_ONLY
          - EDITS_ALLOWED
          exampleSetFlag: true
          type: string
        clientRootCA:
          exampleSetFlag: true
          format: uuid
          type: string
        clusters:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/Cluster'
          type: array
        cmkArn:
          description: Amazon Resource Name (ARN) of the CMK
          exampleSetFlag: true
          type: string
        communicationPorts:
          $ref: '#/components/schemas/CommunicationPorts'
        currentClusterType:
          enum:
          - PRIMARY
          - ASYNC
          exampleSetFlag: true
          type: string
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        encryptionAtRestConfig:
          $ref: '#/components/schemas/EncryptionAtRestConfig'
        errorString:
          description: Error message
          exampleSetFlag: true
          type: string
        expectedUniverseVersion:
          description: Expected universe version
          exampleSetFlag: true
          format: int32
          type: integer
        extraDependencies:
          $ref: '#/components/schemas/ExtraDependencies'
        firstTry:
          description: Whether this task has been tried before
          exampleSetFlag: true
          type: boolean
        forceResizeNode:
          exampleSetFlag: true
          type: boolean
        importedState:
          enum:
          - NONE
          - STARTED
          - MASTERS_ADDED
          - TSERVERS_ADDED
          - IMPORTED
          exampleSetFlag: true
          type: string
        itestS3PackagePath:
          exampleSetFlag: true
          type: string
        kubernetesUpgradeSupported:
          exampleSetFlag: true
          type: boolean
        nextClusterIndex:
          exampleSetFlag: true
          format: int32
          type: integer
        nodeDetailsSet:
          description: Node details
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/NodeDetails'
          type: array
          uniqueItems: true
        nodeExporterUser:
          description: Node exporter user
          exampleSetFlag: true
          type: string
        nodePrefix:
          exampleSetFlag: true
          type: string
        nodesResizeAvailable:
          exampleSetFlag: true
          type: boolean
        previousTaskUUID:
          description: Previous task UUID only if this task is a retry
          exampleSetFlag: true
          format: uuid
          type: string
        remotePackagePath:
          exampleSetFlag: true
          type: string
        resetAZConfig:
          exampleSetFlag: true
          type: boolean
        rootAndClientRootCASame:
          exampleSetFlag: true
          type: boolean
        rootCA:
          exampleSetFlag: true
          format: uuid
          type: string
        setTxnTableWaitCountFlag:
          exampleSetFlag: true
          type: boolean
        sleepAfterMasterRestartMillis:
          exampleSetFlag: true
          format: int32
          type: integer
        sleepAfterTServerRestartMillis:
          exampleSetFlag: true
          format: int32
          type: integer
        sourceXClusterConfigs:
          description: The source universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        targetXClusterConfigs:
          description: The target universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        universePaused:
          exampleSetFlag: true
          type: boolean
        universeUUID:
          description: Associated universe UUID
          exampleSetFlag: true
          format: uuid
          type: string
        updateInProgress:
          exampleSetFlag: true
          type: boolean
        updateSucceeded:
          exampleSetFlag: true
          type: boolean
        updatingTask:
          enum:
          - CloudBootstrap
          - CloudCleanup
          - CreateCassandraTable
          - CreateUniverse
          - ReadOnlyClusterCreate
          - ReadOnlyClusterDelete
          - CreateKubernetesUniverse
          - DestroyUniverse
          - PauseUniverse
          - ResumeUniverse
          - DestroyKubernetesUniverse
          - DeleteTable
          - BackupUniverse
          - RestoreBackup
          - MultiTableBackup
          - CreateBackup
          - EditUniverse
          - EditKubernetesUniverse
          - ExternalScript
          - KubernetesProvision
          - ImportIntoTable
          - UpgradeUniverse
          - RestartUniverse
          - SoftwareUpgrade
          - SoftwareKubernetesUpgrade
          - GFlagsUpgrade
          - GFlagsKubernetesUpgrade
          - CertsRotate
          - TlsToggle
          - VMImageUpgrade
          - SystemdUpgrade
          - CreateRootVolumes
          - ReplaceRootVolume
          - ChangeInstanceType
          - PersistResizeNode
          - PersistSystemdUpgrade
          - UpdateNodeDetails
          - UpgradeKubernetesUniverse
          - DeleteNodeFromUniverse
          - StopNodeInUniverse
          - StartNodeInUniverse
          - AddNodeToUniverse
          - RemoveNodeFromUniverse
          - ReleaseInstanceFromUniverse
          - SetUniverseKey
          - SetKubernetesUniverseKey
          - CreateKMSConfig
          - EditKMSConfig
          - DeleteKMSConfig
          - UpdateDiskSize
          - StartMasterOnNode
          - CreateXClusterConfig
          - EditXClusterConfig
          - DeleteXClusterConfig
          - SyncXClusterConfig
          - CreateSupportBundle
          - AnsibleClusterServerCtl
          - AnsibleConfigureServers
          - AnsibleDestroyServer
          - PauseServer
          - ResumeServer
          - AnsibleSetupServer
          - AnsibleCreateServer
          - PrecheckNode
          - PrecheckNodeDetached
          - AnsibleUpdateNodeInfo
          - BulkImport
          - ChangeMasterConfig
          - ChangeAdminPassword
          - CreateTable
          - DeleteNode
          - DeleteBackup
          - DeleteBackupYb
          - DeleteCustomerConfig
          - DeleteCustomerStorageConfig
          - UpdateNodeProcess
          - DeleteTableFromUniverse
          - LoadBalancerStateChange
          - ModifyBlackList
          - ManipulateDnsRecordTask
          - RemoveUniverseEntry
          - SetFlagInMemory
          - SetNodeState
          - SwamperTargetsFileUpdate
          - UniverseUpdateSucceeded
          - UpdateAndPersistGFlags
          - UpdatePlacementInfo
          - UpdateSoftwareVersion
          - WaitForDataMove
          - WaitForLeaderBlacklistCompletion
          - WaitForFollowerLag
          - WaitForLoadBalance
          - WaitForMasterLeader
          - WaitForServer
          - WaitForTServerHeartBeats
          - DeleteClusterFromUniverse
          - InstanceActions
          - WaitForServerReady
          - RunExternalScript
          - XClusterConfigSetup
          - XClusterConfigSetStatus
          - XClusterConfigModifyTables
          - XClusterConfigRename
          - XClusterConfigDelete
          - XClusterConfigSync
          - CloudAccessKeyCleanup
          - CloudAccessKeySetup
          - CloudInitializer
          - CloudProviderCleanup
          - CloudRegionCleanup
          - CloudRegionSetup
          - CloudSetup
          - BackupTable
          - BackupTableYb
          - BackupUniverseKeys
          - RestoreBackupYb
          - RestoreUniverseKeys
          - RestoreUniverseKeysYb
          - WaitForLeadersOnPreferredOnly
          - EnableEncryptionAtRest
          - DisableEncryptionAtRest
          - DestroyEncryptionAtRest
          - KubernetesCommandExecutor
          - KubernetesWaitForPod
          - KubernetesCheckNumPod
          - SetActiveUniverseKeys
          - CopyEncryptionKeyFile
          - WaitForEncryptionKeyInMemory
          - UnivSetCertificate
          - CreateAlertDefinitions
          - UniverseSetTlsParams
          - UniverseUpdateRootCert
          - ResetUniverseVersion
          - DeleteCertificate
          - SetNodeStatus
          - CheckMasterLeader
          - CheckMasters
          - CheckTServers
          - WaitForTServerHBs
          - CreatePrometheusSwamperConfig
          - PreflightNodeCheck
          - RunYsqlUpgrade
          - ResizeNode
          - UpdateMountedDisks
          exampleSetFlag: true
          type: string
        updatingTaskUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        upgradeOption:
          enum:
          - Rolling
          - Non-Rolling
          - Non-Restart
          exampleSetFlag: true
          type: string
        userAZSelected:
          exampleSetFlag: true
          type: boolean
        ybPrevSoftwareVersion:
          description: Previous software version
          exampleSetFlag: true
          type: string
      required:
      - clusters
      - forceResizeNode
      - kubernetesUpgradeSupported
      - sleepAfterMasterRestartMillis
      - sleepAfterTServerRestartMillis
      - upgradeOption
      type: object
    RestoreBackupParams:
      example:
        backupStorageInfoList:
        - keyspace: keyspace
          sse: true
          tableNameList:
          - tableNameList
          - tableNameList
          storageLocation: storageLocation
          backupType: YQL_TABLE_TYPE
        - keyspace: keyspace
          sse: true
          tableNameList:
          - tableNameList
          - tableNameList
          storageLocation: storageLocation
          backupType: YQL_TABLE_TYPE
        expectedUniverseVersion: 0
        sourceXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodeExporterUser: nodeExporterUser
        parallelism: 6
        encryptionAtRestConfig:
          encryptionAtRestEnabled: true
          opType: ENABLE
          kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: CMK
        newOwner: newOwner
        storageConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        firstTry: true
        alterLoadBalancer: true
        extraDependencies:
          installNodeExporter: true
        enableVerboseLogs: true
        restoreTimeStamp: restoreTimeStamp
        kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        targetXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ybPrevSoftwareVersion: ybPrevSoftwareVersion
        deviceInfo:
          diskIops: 7
          storageClass: storageClass
          numVolumes: 1
          mountPoints: mountPoints
          storageType: IO1
          throughput: 1
          volumeSize: 1
        actionType: RESTORE
        universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        errorString: errorString
        customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodeDetailsSet:
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        oldOwner: oldOwner
        communicationPorts:
          tserverRpcPort: 7
          nodeExporterPort: 1
          tserverHttpPort: 2
          ysqlServerHttpPort: 2
          yqlServerRpcPort: 3
          masterHttpPort: 0
          ysqlServerRpcPort: 4
          yqlServerHttpPort: 9
          masterRpcPort: 6
          redisServerHttpPort: 5
          redisServerRpcPort: 5
        cmkArn: cmkArn
        previousTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        actionType:
          description: Action type
          enum:
          - RESTORE
          - RESTORE_KEYS
          exampleSetFlag: true
          type: string
        alterLoadBalancer:
          description: Alter load balancer state
          exampleSetFlag: true
          type: boolean
        backupStorageInfoList:
          description: Backup's storage info to restore
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/BackupStorageInfo'
          type: array
        cmkArn:
          description: Amazon Resource Name (ARN) of the CMK
          exampleSetFlag: true
          type: string
        communicationPorts:
          $ref: '#/components/schemas/CommunicationPorts'
        customerUUID:
          description: Customer UUID
          exampleSetFlag: true
          format: uuid
          type: string
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        enableVerboseLogs:
          description: Is verbose logging enabled
          exampleSetFlag: true
          type: boolean
        encryptionAtRestConfig:
          $ref: '#/components/schemas/EncryptionAtRestConfig'
        errorString:
          description: Error message
          exampleSetFlag: true
          type: string
        expectedUniverseVersion:
          description: Expected universe version
          exampleSetFlag: true
          format: int32
          type: integer
        extraDependencies:
          $ref: '#/components/schemas/ExtraDependencies'
        firstTry:
          description: Whether this task has been tried before
          exampleSetFlag: true
          type: boolean
        kmsConfigUUID:
          description: KMS configuration UUID
          exampleSetFlag: true
          format: uuid
          type: string
        newOwner:
          description: User name of the new tables owner
          exampleSetFlag: true
          type: string
        nodeDetailsSet:
          description: Node details
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/NodeDetails'
          type: array
          uniqueItems: true
        nodeExporterUser:
          description: Node exporter user
          exampleSetFlag: true
          type: string
        oldOwner:
          description: User name of the current tables owner
          exampleSetFlag: true
          type: string
        parallelism:
          description: Number of concurrent commands to run on nodes over SSH
          exampleSetFlag: true
          format: int32
          type: integer
        previousTaskUUID:
          description: Previous task UUID only if this task is a retry
          exampleSetFlag: true
          format: uuid
          type: string
        restoreTimeStamp:
          description: Restore TimeStamp
          exampleSetFlag: true
          type: string
        sourceXClusterConfigs:
          description: The source universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        storageConfigUUID:
          description: Storage config uuid
          exampleSetFlag: true
          format: uuid
          type: string
        targetXClusterConfigs:
          description: The target universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        universeUUID:
          description: Universe UUID
          exampleSetFlag: true
          format: uuid
          type: string
        ybPrevSoftwareVersion:
          description: Previous software version
          exampleSetFlag: true
          type: string
      required:
      - universeUUID
      type: object
    RunQueryFormData:
      example:
        tableType: YQL_TABLE_TYPE
        db_name: db_name
        query: query
      exampleSetFlag: true
      properties:
        db_name:
          exampleSetFlag: true
          type: string
        query:
          exampleSetFlag: true
          type: string
        tableType:
          enum:
          - YQL_TABLE_TYPE
          - REDIS_TABLE_TYPE
          - PGSQL_TABLE_TYPE
          - TRANSACTION_STATUS_TABLE_TYPE
          exampleSetFlag: true
          type: string
      required:
      - db_name
      - query
      - tableType
      type: object
    RuntimeConfigData:
      description: Runtime configuration data
      example:
        scopedConfigList:
        - configEntries:
          - inherited: true
            value: value
            key: key
          - inherited: true
            value: value
            key: key
          mutableScope: true
          type: GLOBAL
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - configEntries:
          - inherited: true
            value: value
            key: key
          - inherited: true
            value: value
            key: key
          mutableScope: true
          type: GLOBAL
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        scopedConfigList:
          description: List of scoped configurations
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/ScopedConfig'
          type: array
      type: object
    S3Location:
      example:
        paths:
          x86_64: x86_64
          x86_64_checksum: x86_64_checksum
      exampleSetFlag: true
      properties:
        paths:
          $ref: '#/components/schemas/PackagePaths'
      type: object
    Schedule:
      description: Backup schedule
      example:
        cronExpression: cronExpression
        taskType: CloudBootstrap
        customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        scheduleUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        runningState: true
        failureCount: 0
        frequency: 6
        status: Active
      exampleSetFlag: true
      properties:
        cronExpression:
          description: Cron expression for the schedule
          exampleSetFlag: true
          type: string
        customerUUID:
          description: Customer UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
        failureCount:
          description: Number of failed backup attempts
          exampleSetFlag: true
          format: int32
          readOnly: true
          type: integer
        frequency:
          description: "Frequency of the schedule, in minutes"
          exampleSetFlag: true
          format: int64
          type: integer
        runningState:
          description: Running state of the schedule
          exampleSetFlag: true
          type: boolean
        scheduleUUID:
          description: Schedule UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
        status:
          description: "Status of the task. Possible values are _Active_, _Paused_,\
            \ or _Stopped_."
          enum:
          - Active
          - Paused
          - Stopped
          exampleSetFlag: true
          readOnly: true
          type: string
        taskType:
          description: Type of task to be scheduled.
          enum:
          - CloudBootstrap
          - CloudCleanup
          - CreateCassandraTable
          - CreateUniverse
          - ReadOnlyClusterCreate
          - ReadOnlyClusterDelete
          - CreateKubernetesUniverse
          - DestroyUniverse
          - PauseUniverse
          - ResumeUniverse
          - DestroyKubernetesUniverse
          - DeleteTable
          - BackupUniverse
          - RestoreBackup
          - MultiTableBackup
          - CreateBackup
          - EditUniverse
          - EditKubernetesUniverse
          - ExternalScript
          - KubernetesProvision
          - ImportIntoTable
          - UpgradeUniverse
          - RestartUniverse
          - SoftwareUpgrade
          - SoftwareKubernetesUpgrade
          - GFlagsUpgrade
          - GFlagsKubernetesUpgrade
          - CertsRotate
          - TlsToggle
          - VMImageUpgrade
          - SystemdUpgrade
          - CreateRootVolumes
          - ReplaceRootVolume
          - ChangeInstanceType
          - PersistResizeNode
          - PersistSystemdUpgrade
          - UpdateNodeDetails
          - UpgradeKubernetesUniverse
          - DeleteNodeFromUniverse
          - StopNodeInUniverse
          - StartNodeInUniverse
          - AddNodeToUniverse
          - RemoveNodeFromUniverse
          - ReleaseInstanceFromUniverse
          - SetUniverseKey
          - SetKubernetesUniverseKey
          - CreateKMSConfig
          - EditKMSConfig
          - DeleteKMSConfig
          - UpdateDiskSize
          - StartMasterOnNode
          - CreateXClusterConfig
          - EditXClusterConfig
          - DeleteXClusterConfig
          - SyncXClusterConfig
          - CreateSupportBundle
          - AnsibleClusterServerCtl
          - AnsibleConfigureServers
          - AnsibleDestroyServer
          - PauseServer
          - ResumeServer
          - AnsibleSetupServer
          - AnsibleCreateServer
          - PrecheckNode
          - PrecheckNodeDetached
          - AnsibleUpdateNodeInfo
          - BulkImport
          - ChangeMasterConfig
          - ChangeAdminPassword
          - CreateTable
          - DeleteNode
          - DeleteBackup
          - DeleteBackupYb
          - DeleteCustomerConfig
          - DeleteCustomerStorageConfig
          - UpdateNodeProcess
          - DeleteTableFromUniverse
          - LoadBalancerStateChange
          - ModifyBlackList
          - ManipulateDnsRecordTask
          - RemoveUniverseEntry
          - SetFlagInMemory
          - SetNodeState
          - SwamperTargetsFileUpdate
          - UniverseUpdateSucceeded
          - UpdateAndPersistGFlags
          - UpdatePlacementInfo
          - UpdateSoftwareVersion
          - WaitForDataMove
          - WaitForLeaderBlacklistCompletion
          - WaitForFollowerLag
          - WaitForLoadBalance
          - WaitForMasterLeader
          - WaitForServer
          - WaitForTServerHeartBeats
          - DeleteClusterFromUniverse
          - InstanceActions
          - WaitForServerReady
          - RunExternalScript
          - XClusterConfigSetup
          - XClusterConfigSetStatus
          - XClusterConfigModifyTables
          - XClusterConfigRename
          - XClusterConfigDelete
          - XClusterConfigSync
          - CloudAccessKeyCleanup
          - CloudAccessKeySetup
          - CloudInitializer
          - CloudProviderCleanup
          - CloudRegionCleanup
          - CloudRegionSetup
          - CloudSetup
          - BackupTable
          - BackupTableYb
          - BackupUniverseKeys
          - RestoreBackupYb
          - RestoreUniverseKeys
          - RestoreUniverseKeysYb
          - WaitForLeadersOnPreferredOnly
          - EnableEncryptionAtRest
          - DisableEncryptionAtRest
          - DestroyEncryptionAtRest
          - KubernetesCommandExecutor
          - KubernetesWaitForPod
          - KubernetesCheckNumPod
          - SetActiveUniverseKeys
          - CopyEncryptionKeyFile
          - WaitForEncryptionKeyInMemory
          - UnivSetCertificate
          - CreateAlertDefinitions
          - UniverseSetTlsParams
          - UniverseUpdateRootCert
          - ResetUniverseVersion
          - DeleteCertificate
          - SetNodeStatus
          - CheckMasterLeader
          - CheckMasters
          - CheckTServers
          - WaitForTServerHBs
          - CreatePrometheusSwamperConfig
          - PreflightNodeCheck
          - RunYsqlUpgrade
          - ResizeNode
          - UpdateMountedDisks
          exampleSetFlag: true
          type: string
      type: object
    ScheduleApiFilter:
      example:
        taskTypes:
        - CloudBootstrap
        - CloudBootstrap
        status:
        - Active
        - Active
      exampleSetFlag: true
      properties:
        status:
          exampleSetFlag: false
          items:
            enum:
            - Active
            - Paused
            - Stopped
            exampleSetFlag: true
            type: string
          type: array
          uniqueItems: true
        taskTypes:
          exampleSetFlag: false
          items:
            enum:
            - CloudBootstrap
            - CloudCleanup
            - CreateCassandraTable
            - CreateUniverse
            - ReadOnlyClusterCreate
            - ReadOnlyClusterDelete
            - CreateKubernetesUniverse
            - DestroyUniverse
            - PauseUniverse
            - ResumeUniverse
            - DestroyKubernetesUniverse
            - DeleteTable
            - BackupUniverse
            - RestoreBackup
            - MultiTableBackup
            - CreateBackup
            - EditUniverse
            - EditKubernetesUniverse
            - ExternalScript
            - KubernetesProvision
            - ImportIntoTable
            - UpgradeUniverse
            - RestartUniverse
            - SoftwareUpgrade
            - SoftwareKubernetesUpgrade
            - GFlagsUpgrade
            - GFlagsKubernetesUpgrade
            - CertsRotate
            - TlsToggle
            - VMImageUpgrade
            - SystemdUpgrade
            - CreateRootVolumes
            - ReplaceRootVolume
            - ChangeInstanceType
            - PersistResizeNode
            - PersistSystemdUpgrade
            - UpdateNodeDetails
            - UpgradeKubernetesUniverse
            - DeleteNodeFromUniverse
            - StopNodeInUniverse
            - StartNodeInUniverse
            - AddNodeToUniverse
            - RemoveNodeFromUniverse
            - ReleaseInstanceFromUniverse
            - SetUniverseKey
            - SetKubernetesUniverseKey
            - CreateKMSConfig
            - EditKMSConfig
            - DeleteKMSConfig
            - UpdateDiskSize
            - StartMasterOnNode
            - CreateXClusterConfig
            - EditXClusterConfig
            - DeleteXClusterConfig
            - SyncXClusterConfig
            - CreateSupportBundle
            - AnsibleClusterServerCtl
            - AnsibleConfigureServers
            - AnsibleDestroyServer
            - PauseServer
            - ResumeServer
            - AnsibleSetupServer
            - AnsibleCreateServer
            - PrecheckNode
            - PrecheckNodeDetached
            - AnsibleUpdateNodeInfo
            - BulkImport
            - ChangeMasterConfig
            - ChangeAdminPassword
            - CreateTable
            - DeleteNode
            - DeleteBackup
            - DeleteBackupYb
            - DeleteCustomerConfig
            - DeleteCustomerStorageConfig
            - UpdateNodeProcess
            - DeleteTableFromUniverse
            - LoadBalancerStateChange
            - ModifyBlackList
            - ManipulateDnsRecordTask
            - RemoveUniverseEntry
            - SetFlagInMemory
            - SetNodeState
            - SwamperTargetsFileUpdate
            - UniverseUpdateSucceeded
            - UpdateAndPersistGFlags
            - UpdatePlacementInfo
            - UpdateSoftwareVersion
            - WaitForDataMove
            - WaitForLeaderBlacklistCompletion
            - WaitForFollowerLag
            - WaitForLoadBalance
            - WaitForMasterLeader
            - WaitForServer
            - WaitForTServerHeartBeats
            - DeleteClusterFromUniverse
            - InstanceActions
            - WaitForServerReady
            - RunExternalScript
            - XClusterConfigSetup
            - XClusterConfigSetStatus
            - XClusterConfigModifyTables
            - XClusterConfigRename
            - XClusterConfigDelete
            - XClusterConfigSync
            - CloudAccessKeyCleanup
            - CloudAccessKeySetup
            - CloudInitializer
            - CloudProviderCleanup
            - CloudRegionCleanup
            - CloudRegionSetup
            - CloudSetup
            - BackupTable
            - BackupTableYb
            - BackupUniverseKeys
            - RestoreBackupYb
            - RestoreUniverseKeys
            - RestoreUniverseKeysYb
            - WaitForLeadersOnPreferredOnly
            - EnableEncryptionAtRest
            - DisableEncryptionAtRest
            - DestroyEncryptionAtRest
            - KubernetesCommandExecutor
            - KubernetesWaitForPod
            - KubernetesCheckNumPod
            - SetActiveUniverseKeys
            - CopyEncryptionKeyFile
            - WaitForEncryptionKeyInMemory
            - UnivSetCertificate
            - CreateAlertDefinitions
            - UniverseSetTlsParams
            - UniverseUpdateRootCert
            - ResetUniverseVersion
            - DeleteCertificate
            - SetNodeStatus
            - CheckMasterLeader
            - CheckMasters
            - CheckTServers
            - WaitForTServerHBs
            - CreatePrometheusSwamperConfig
            - PreflightNodeCheck
            - RunYsqlUpgrade
            - ResizeNode
            - UpdateMountedDisks
            exampleSetFlag: true
            type: string
          type: array
          uniqueItems: true
      required:
      - status
      - taskTypes
      type: object
    SchedulePagedApiQuery:
      example:
        filter:
          taskTypes:
          - CloudBootstrap
          - CloudBootstrap
          status:
          - Active
          - Active
        offset: 6
        needTotalCount: true
        limit: 0
        sortBy: taskType
        direction: ASC
      exampleSetFlag: true
      properties:
        direction:
          enum:
          - ASC
          - DESC
          exampleSetFlag: true
          type: string
        filter:
          $ref: '#/components/schemas/ScheduleApiFilter'
        limit:
          exampleSetFlag: true
          format: int32
          type: integer
        needTotalCount:
          exampleSetFlag: true
          type: boolean
        offset:
          exampleSetFlag: true
          format: int32
          type: integer
        sortBy:
          enum:
          - taskType
          - scheduleUUID
          exampleSetFlag: true
          type: string
      required:
      - direction
      - filter
      - limit
      - needTotalCount
      - offset
      - sortBy
      type: object
    SchedulePagedResponse:
      example:
        entities:
        - cronExpression: cronExpression
          taskType: CloudBootstrap
          customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          scheduleUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          runningState: true
          failureCount: 0
          frequency: 6
          status: Active
        - cronExpression: cronExpression
          taskType: CloudBootstrap
          customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          scheduleUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          runningState: true
          failureCount: 0
          frequency: 6
          status: Active
        hasPrev: true
        hasNext: true
        totalCount: 0
      exampleSetFlag: true
      properties:
        entities:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/Schedule'
          type: array
        hasNext:
          exampleSetFlag: true
          type: boolean
        hasPrev:
          exampleSetFlag: true
          type: boolean
        totalCount:
          exampleSetFlag: true
          format: int32
          type: integer
      required:
      - entities
      - hasNext
      - hasPrev
      - totalCount
      type: object
    ScopedConfig:
      description: Scoped configuration
      example:
        configEntries:
        - inherited: true
          value: value
          key: key
        - inherited: true
          value: value
          key: key
        mutableScope: true
        type: GLOBAL
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        configEntries:
          description: List of configurations
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/ConfigEntry'
          type: array
        mutableScope:
          description: Mutability of the scope. Only super admin users can change
            global scope; other scopes are customer-mutable.
          exampleSetFlag: true
          type: boolean
        type:
          description: Scope type
          enum:
          - GLOBAL
          - CUSTOMER
          - UNIVERSE
          - PROVIDER
          exampleSetFlag: true
          type: string
        uuid:
          description: Scope UIID
          exampleSetFlag: true
          format: uuid
          type: string
      type: object
    SessionInfo:
      description: Session information
      example:
        apiToken: apiToken
        customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        authToken: authToken
        userUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        apiToken:
          description: API token
          exampleSetFlag: true
          type: string
        authToken:
          description: Auth token
          exampleSetFlag: true
          type: string
        customerUUID:
          description: Customer UUID
          exampleSetFlag: true
          format: uuid
          type: string
        userUUID:
          description: User UUID
          exampleSetFlag: true
          format: uuid
          type: string
      type: object
    SmtpData:
      description: SMTP configuration information
      example:
        smtpServer: smtp.example.com
        smtpUsername: testsmtp
        smtpPort: 465
        smtpPassword: XurenRknsc
        emailFrom: test@example.com
        useTLS: false
        useSSL: true
      exampleSetFlag: true
      properties:
        emailFrom:
          description: SMTP email 'from' address
          example: test@example.com
          exampleSetFlag: true
          type: string
        smtpPassword:
          description: SMTP password
          example: XurenRknsc
          exampleSetFlag: true
          type: string
        smtpPort:
          description: SMTP port number
          example: 465
          exampleSetFlag: true
          format: int32
          type: integer
        smtpServer:
          description: SMTP server
          example: smtp.example.com
          exampleSetFlag: true
          type: string
        smtpUsername:
          description: SMTP email username
          example: testsmtp
          exampleSetFlag: true
          type: string
        useSSL:
          description: Connect to SMTP server using SSL
          example: true
          exampleSetFlag: true
          type: boolean
        useTLS:
          description: Connect to SMTP server using TLS
          example: false
          exampleSetFlag: true
          type: boolean
      type: object
    SoftwareUpgradeParams:
      example:
        expectedUniverseVersion: 0
        resetAZConfig: true
        sourceXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userAZSelected: true
        nodeExporterUser: nodeExporterUser
        encryptionAtRestConfig:
          encryptionAtRestEnabled: true
          opType: ENABLE
          kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: CMK
        upgradeOption: Rolling
        nodePrefix: nodePrefix
        itestS3PackagePath: itestS3PackagePath
        capability: READ_ONLY
        firstTry: true
        extraDependencies:
          installNodeExporter: true
        rootCA: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodesResizeAvailable: true
        updatingTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        allowInsecure: true
        backupInProgress: true
        clusters:
        - clusterType: PRIMARY
          placementInfo:
            cloudList:
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          regions:
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          userIntent:
            replicationFactor: 2
            useSystemd: true
            enableNodeToNodeEncrypt: true
            preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            enableYCQLAuth: true
            instanceTags:
              key: instanceTags
            providerType: unknown
            tserverGFlags:
              key: tserverGFlags
            ysqlPassword: ysqlPassword
            enableYEDIS: true
            enableVolumeEncryption: true
            provider: provider
            accessKeyCode: accessKeyCode
            enableIPV6: true
            enableYSQLAuth: true
            universeName: universeName
            assignStaticPublicIP: true
            enableYSQL: true
            useTimeSync: true
            regionList:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            useHostname: true
            instanceType: instanceType
            ybSoftwareVersion: ybSoftwareVersion
            deviceInfo:
              diskIops: 7
              storageClass: storageClass
              numVolumes: 1
              mountPoints: mountPoints
              storageType: IO1
              throughput: 1
              volumeSize: 1
            enableYCQL: true
            numNodes: 5
            assignPublicIP: true
            ycqlPassword: ycqlPassword
            enableClientToNodeEncrypt: true
            awsArnString: awsArnString
            enableExposingService: NONE
            masterGFlags:
              key: masterGFlags
          index: 6
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - clusterType: PRIMARY
          placementInfo:
            cloudList:
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          regions:
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          userIntent:
            replicationFactor: 2
            useSystemd: true
            enableNodeToNodeEncrypt: true
            preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            enableYCQLAuth: true
            instanceTags:
              key: instanceTags
            providerType: unknown
            tserverGFlags:
              key: tserverGFlags
            ysqlPassword: ysqlPassword
            enableYEDIS: true
            enableVolumeEncryption: true
            provider: provider
            accessKeyCode: accessKeyCode
            enableIPV6: true
            enableYSQLAuth: true
            universeName: universeName
            assignStaticPublicIP: true
            enableYSQL: true
            useTimeSync: true
            regionList:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            useHostname: true
            instanceType: instanceType
            ybSoftwareVersion: ybSoftwareVersion
            deviceInfo:
              diskIops: 7
              storageClass: storageClass
              numVolumes: 1
              mountPoints: mountPoints
              storageType: IO1
              throughput: 1
              volumeSize: 1
            enableYCQL: true
            numNodes: 5
            assignPublicIP: true
            ycqlPassword: ycqlPassword
            enableClientToNodeEncrypt: true
            awsArnString: awsArnString
            enableExposingService: NONE
            masterGFlags:
              key: masterGFlags
          index: 6
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sleepAfterTServerRestartMillis: 5
        universePaused: true
        updateSucceeded: true
        importedState: NONE
        updateInProgress: true
        ybSoftwareVersion: ybSoftwareVersion
        targetXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        setTxnTableWaitCountFlag: true
        ybPrevSoftwareVersion: ybPrevSoftwareVersion
        deviceInfo:
          diskIops: 7
          storageClass: storageClass
          numVolumes: 1
          mountPoints: mountPoints
          storageType: IO1
          throughput: 1
          volumeSize: 1
        updatingTask: CloudBootstrap
        kubernetesUpgradeSupported: true
        nextClusterIndex: 6
        universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        errorString: errorString
        clientRootCA: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodeDetailsSet:
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        remotePackagePath: remotePackagePath
        currentClusterType: PRIMARY
        communicationPorts:
          tserverRpcPort: 7
          nodeExporterPort: 1
          tserverHttpPort: 2
          ysqlServerHttpPort: 2
          yqlServerRpcPort: 3
          masterHttpPort: 0
          ysqlServerRpcPort: 4
          yqlServerHttpPort: 9
          masterRpcPort: 6
          redisServerHttpPort: 5
          redisServerRpcPort: 5
        cmkArn: cmkArn
        rootAndClientRootCASame: true
        sleepAfterMasterRestartMillis: 1
        previousTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        allowInsecure:
          exampleSetFlag: true
          type: boolean
        backupInProgress:
          exampleSetFlag: true
          type: boolean
        capability:
          enum:
          - READ_ONLY
          - EDITS_ALLOWED
          exampleSetFlag: true
          type: string
        clientRootCA:
          exampleSetFlag: true
          format: uuid
          type: string
        clusters:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/Cluster'
          type: array
        cmkArn:
          description: Amazon Resource Name (ARN) of the CMK
          exampleSetFlag: true
          type: string
        communicationPorts:
          $ref: '#/components/schemas/CommunicationPorts'
        currentClusterType:
          enum:
          - PRIMARY
          - ASYNC
          exampleSetFlag: true
          type: string
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        encryptionAtRestConfig:
          $ref: '#/components/schemas/EncryptionAtRestConfig'
        errorString:
          description: Error message
          exampleSetFlag: true
          type: string
        expectedUniverseVersion:
          description: Expected universe version
          exampleSetFlag: true
          format: int32
          type: integer
        extraDependencies:
          $ref: '#/components/schemas/ExtraDependencies'
        firstTry:
          description: Whether this task has been tried before
          exampleSetFlag: true
          type: boolean
        importedState:
          enum:
          - NONE
          - STARTED
          - MASTERS_ADDED
          - TSERVERS_ADDED
          - IMPORTED
          exampleSetFlag: true
          type: string
        itestS3PackagePath:
          exampleSetFlag: true
          type: string
        kubernetesUpgradeSupported:
          exampleSetFlag: true
          type: boolean
        nextClusterIndex:
          exampleSetFlag: true
          format: int32
          type: integer
        nodeDetailsSet:
          description: Node details
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/NodeDetails'
          type: array
          uniqueItems: true
        nodeExporterUser:
          description: Node exporter user
          exampleSetFlag: true
          type: string
        nodePrefix:
          exampleSetFlag: true
          type: string
        nodesResizeAvailable:
          exampleSetFlag: true
          type: boolean
        previousTaskUUID:
          description: Previous task UUID only if this task is a retry
          exampleSetFlag: true
          format: uuid
          type: string
        remotePackagePath:
          exampleSetFlag: true
          type: string
        resetAZConfig:
          exampleSetFlag: true
          type: boolean
        rootAndClientRootCASame:
          exampleSetFlag: true
          type: boolean
        rootCA:
          exampleSetFlag: true
          format: uuid
          type: string
        setTxnTableWaitCountFlag:
          exampleSetFlag: true
          type: boolean
        sleepAfterMasterRestartMillis:
          exampleSetFlag: true
          format: int32
          type: integer
        sleepAfterTServerRestartMillis:
          exampleSetFlag: true
          format: int32
          type: integer
        sourceXClusterConfigs:
          description: The source universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        targetXClusterConfigs:
          description: The target universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        universePaused:
          exampleSetFlag: true
          type: boolean
        universeUUID:
          description: Associated universe UUID
          exampleSetFlag: true
          format: uuid
          type: string
        updateInProgress:
          exampleSetFlag: true
          type: boolean
        updateSucceeded:
          exampleSetFlag: true
          type: boolean
        updatingTask:
          enum:
          - CloudBootstrap
          - CloudCleanup
          - CreateCassandraTable
          - CreateUniverse
          - ReadOnlyClusterCreate
          - ReadOnlyClusterDelete
          - CreateKubernetesUniverse
          - DestroyUniverse
          - PauseUniverse
          - ResumeUniverse
          - DestroyKubernetesUniverse
          - DeleteTable
          - BackupUniverse
          - RestoreBackup
          - MultiTableBackup
          - CreateBackup
          - EditUniverse
          - EditKubernetesUniverse
          - ExternalScript
          - KubernetesProvision
          - ImportIntoTable
          - UpgradeUniverse
          - RestartUniverse
          - SoftwareUpgrade
          - SoftwareKubernetesUpgrade
          - GFlagsUpgrade
          - GFlagsKubernetesUpgrade
          - CertsRotate
          - TlsToggle
          - VMImageUpgrade
          - SystemdUpgrade
          - CreateRootVolumes
          - ReplaceRootVolume
          - ChangeInstanceType
          - PersistResizeNode
          - PersistSystemdUpgrade
          - UpdateNodeDetails
          - UpgradeKubernetesUniverse
          - DeleteNodeFromUniverse
          - StopNodeInUniverse
          - StartNodeInUniverse
          - AddNodeToUniverse
          - RemoveNodeFromUniverse
          - ReleaseInstanceFromUniverse
          - SetUniverseKey
          - SetKubernetesUniverseKey
          - CreateKMSConfig
          - EditKMSConfig
          - DeleteKMSConfig
          - UpdateDiskSize
          - StartMasterOnNode
          - CreateXClusterConfig
          - EditXClusterConfig
          - DeleteXClusterConfig
          - SyncXClusterConfig
          - CreateSupportBundle
          - AnsibleClusterServerCtl
          - AnsibleConfigureServers
          - AnsibleDestroyServer
          - PauseServer
          - ResumeServer
          - AnsibleSetupServer
          - AnsibleCreateServer
          - PrecheckNode
          - PrecheckNodeDetached
          - AnsibleUpdateNodeInfo
          - BulkImport
          - ChangeMasterConfig
          - ChangeAdminPassword
          - CreateTable
          - DeleteNode
          - DeleteBackup
          - DeleteBackupYb
          - DeleteCustomerConfig
          - DeleteCustomerStorageConfig
          - UpdateNodeProcess
          - DeleteTableFromUniverse
          - LoadBalancerStateChange
          - ModifyBlackList
          - ManipulateDnsRecordTask
          - RemoveUniverseEntry
          - SetFlagInMemory
          - SetNodeState
          - SwamperTargetsFileUpdate
          - UniverseUpdateSucceeded
          - UpdateAndPersistGFlags
          - UpdatePlacementInfo
          - UpdateSoftwareVersion
          - WaitForDataMove
          - WaitForLeaderBlacklistCompletion
          - WaitForFollowerLag
          - WaitForLoadBalance
          - WaitForMasterLeader
          - WaitForServer
          - WaitForTServerHeartBeats
          - DeleteClusterFromUniverse
          - InstanceActions
          - WaitForServerReady
          - RunExternalScript
          - XClusterConfigSetup
          - XClusterConfigSetStatus
          - XClusterConfigModifyTables
          - XClusterConfigRename
          - XClusterConfigDelete
          - XClusterConfigSync
          - CloudAccessKeyCleanup
          - CloudAccessKeySetup
          - CloudInitializer
          - CloudProviderCleanup
          - CloudRegionCleanup
          - CloudRegionSetup
          - CloudSetup
          - BackupTable
          - BackupTableYb
          - BackupUniverseKeys
          - RestoreBackupYb
          - RestoreUniverseKeys
          - RestoreUniverseKeysYb
          - WaitForLeadersOnPreferredOnly
          - EnableEncryptionAtRest
          - DisableEncryptionAtRest
          - DestroyEncryptionAtRest
          - KubernetesCommandExecutor
          - KubernetesWaitForPod
          - KubernetesCheckNumPod
          - SetActiveUniverseKeys
          - CopyEncryptionKeyFile
          - WaitForEncryptionKeyInMemory
          - UnivSetCertificate
          - CreateAlertDefinitions
          - UniverseSetTlsParams
          - UniverseUpdateRootCert
          - ResetUniverseVersion
          - DeleteCertificate
          - SetNodeStatus
          - CheckMasterLeader
          - CheckMasters
          - CheckTServers
          - WaitForTServerHBs
          - CreatePrometheusSwamperConfig
          - PreflightNodeCheck
          - RunYsqlUpgrade
          - ResizeNode
          - UpdateMountedDisks
          exampleSetFlag: true
          type: string
        updatingTaskUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        upgradeOption:
          enum:
          - Rolling
          - Non-Rolling
          - Non-Restart
          exampleSetFlag: true
          type: string
        userAZSelected:
          exampleSetFlag: true
          type: boolean
        ybPrevSoftwareVersion:
          description: Previous software version
          exampleSetFlag: true
          type: string
        ybSoftwareVersion:
          exampleSetFlag: true
          type: string
      required:
      - clusters
      - kubernetesUpgradeSupported
      - sleepAfterMasterRestartMillis
      - sleepAfterTServerRestartMillis
      - upgradeOption
      - ybSoftwareVersion
      type: object
    SupportBundle:
      example:
        path: path
        scopeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        bundleDetails:
          components:
          - UniverseLogs
          - UniverseLogs
        endDate: 2000-01-23T04:56:07.000+00:00
        bundleUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        startDate: 2000-01-23T04:56:07.000+00:00
        status: Running
      exampleSetFlag: true
      properties:
        bundleDetails:
          $ref: '#/components/schemas/BundleDetails'
        bundleUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        endDate:
          exampleSetFlag: true
          format: date-time
          type: string
        path:
          exampleSetFlag: true
          type: string
        scopeUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        startDate:
          exampleSetFlag: true
          format: date-time
          type: string
        status:
          enum:
          - Running
          - Success
          - Failed
          exampleSetFlag: true
          type: string
      required:
      - bundleDetails
      - bundleUUID
      - endDate
      - path
      - scopeUUID
      - startDate
      - status
      type: object
    SystemdUpgradeParams:
      example:
        expectedUniverseVersion: 0
        resetAZConfig: true
        sourceXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userAZSelected: true
        nodeExporterUser: nodeExporterUser
        encryptionAtRestConfig:
          encryptionAtRestEnabled: true
          opType: ENABLE
          kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: CMK
        upgradeOption: Rolling
        nodePrefix: nodePrefix
        itestS3PackagePath: itestS3PackagePath
        capability: READ_ONLY
        firstTry: true
        extraDependencies:
          installNodeExporter: true
        rootCA: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodesResizeAvailable: true
        updatingTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        allowInsecure: true
        backupInProgress: true
        clusters:
        - clusterType: PRIMARY
          placementInfo:
            cloudList:
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          regions:
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          userIntent:
            replicationFactor: 2
            useSystemd: true
            enableNodeToNodeEncrypt: true
            preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            enableYCQLAuth: true
            instanceTags:
              key: instanceTags
            providerType: unknown
            tserverGFlags:
              key: tserverGFlags
            ysqlPassword: ysqlPassword
            enableYEDIS: true
            enableVolumeEncryption: true
            provider: provider
            accessKeyCode: accessKeyCode
            enableIPV6: true
            enableYSQLAuth: true
            universeName: universeName
            assignStaticPublicIP: true
            enableYSQL: true
            useTimeSync: true
            regionList:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            useHostname: true
            instanceType: instanceType
            ybSoftwareVersion: ybSoftwareVersion
            deviceInfo:
              diskIops: 7
              storageClass: storageClass
              numVolumes: 1
              mountPoints: mountPoints
              storageType: IO1
              throughput: 1
              volumeSize: 1
            enableYCQL: true
            numNodes: 5
            assignPublicIP: true
            ycqlPassword: ycqlPassword
            enableClientToNodeEncrypt: true
            awsArnString: awsArnString
            enableExposingService: NONE
            masterGFlags:
              key: masterGFlags
          index: 6
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - clusterType: PRIMARY
          placementInfo:
            cloudList:
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          regions:
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          userIntent:
            replicationFactor: 2
            useSystemd: true
            enableNodeToNodeEncrypt: true
            preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            enableYCQLAuth: true
            instanceTags:
              key: instanceTags
            providerType: unknown
            tserverGFlags:
              key: tserverGFlags
            ysqlPassword: ysqlPassword
            enableYEDIS: true
            enableVolumeEncryption: true
            provider: provider
            accessKeyCode: accessKeyCode
            enableIPV6: true
            enableYSQLAuth: true
            universeName: universeName
            assignStaticPublicIP: true
            enableYSQL: true
            useTimeSync: true
            regionList:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            useHostname: true
            instanceType: instanceType
            ybSoftwareVersion: ybSoftwareVersion
            deviceInfo:
              diskIops: 7
              storageClass: storageClass
              numVolumes: 1
              mountPoints: mountPoints
              storageType: IO1
              throughput: 1
              volumeSize: 1
            enableYCQL: true
            numNodes: 5
            assignPublicIP: true
            ycqlPassword: ycqlPassword
            enableClientToNodeEncrypt: true
            awsArnString: awsArnString
            enableExposingService: NONE
            masterGFlags:
              key: masterGFlags
          index: 6
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sleepAfterTServerRestartMillis: 5
        universePaused: true
        updateSucceeded: true
        importedState: NONE
        updateInProgress: true
        targetXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        setTxnTableWaitCountFlag: true
        ybPrevSoftwareVersion: ybPrevSoftwareVersion
        deviceInfo:
          diskIops: 7
          storageClass: storageClass
          numVolumes: 1
          mountPoints: mountPoints
          storageType: IO1
          throughput: 1
          volumeSize: 1
        updatingTask: CloudBootstrap
        kubernetesUpgradeSupported: true
        nextClusterIndex: 6
        universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        errorString: errorString
        clientRootCA: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodeDetailsSet:
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        remotePackagePath: remotePackagePath
        currentClusterType: PRIMARY
        communicationPorts:
          tserverRpcPort: 7
          nodeExporterPort: 1
          tserverHttpPort: 2
          ysqlServerHttpPort: 2
          yqlServerRpcPort: 3
          masterHttpPort: 0
          ysqlServerRpcPort: 4
          yqlServerHttpPort: 9
          masterRpcPort: 6
          redisServerHttpPort: 5
          redisServerRpcPort: 5
        cmkArn: cmkArn
        rootAndClientRootCASame: true
        sleepAfterMasterRestartMillis: 1
        previousTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        allowInsecure:
          exampleSetFlag: true
          type: boolean
        backupInProgress:
          exampleSetFlag: true
          type: boolean
        capability:
          enum:
          - READ_ONLY
          - EDITS_ALLOWED
          exampleSetFlag: true
          type: string
        clientRootCA:
          exampleSetFlag: true
          format: uuid
          type: string
        clusters:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/Cluster'
          type: array
        cmkArn:
          description: Amazon Resource Name (ARN) of the CMK
          exampleSetFlag: true
          type: string
        communicationPorts:
          $ref: '#/components/schemas/CommunicationPorts'
        currentClusterType:
          enum:
          - PRIMARY
          - ASYNC
          exampleSetFlag: true
          type: string
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        encryptionAtRestConfig:
          $ref: '#/components/schemas/EncryptionAtRestConfig'
        errorString:
          description: Error message
          exampleSetFlag: true
          type: string
        expectedUniverseVersion:
          description: Expected universe version
          exampleSetFlag: true
          format: int32
          type: integer
        extraDependencies:
          $ref: '#/components/schemas/ExtraDependencies'
        firstTry:
          description: Whether this task has been tried before
          exampleSetFlag: true
          type: boolean
        importedState:
          enum:
          - NONE
          - STARTED
          - MASTERS_ADDED
          - TSERVERS_ADDED
          - IMPORTED
          exampleSetFlag: true
          type: string
        itestS3PackagePath:
          exampleSetFlag: true
          type: string
        kubernetesUpgradeSupported:
          exampleSetFlag: true
          type: boolean
        nextClusterIndex:
          exampleSetFlag: true
          format: int32
          type: integer
        nodeDetailsSet:
          description: Node details
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/NodeDetails'
          type: array
          uniqueItems: true
        nodeExporterUser:
          description: Node exporter user
          exampleSetFlag: true
          type: string
        nodePrefix:
          exampleSetFlag: true
          type: string
        nodesResizeAvailable:
          exampleSetFlag: true
          type: boolean
        previousTaskUUID:
          description: Previous task UUID only if this task is a retry
          exampleSetFlag: true
          format: uuid
          type: string
        remotePackagePath:
          exampleSetFlag: true
          type: string
        resetAZConfig:
          exampleSetFlag: true
          type: boolean
        rootAndClientRootCASame:
          exampleSetFlag: true
          type: boolean
        rootCA:
          exampleSetFlag: true
          format: uuid
          type: string
        setTxnTableWaitCountFlag:
          exampleSetFlag: true
          type: boolean
        sleepAfterMasterRestartMillis:
          exampleSetFlag: true
          format: int32
          type: integer
        sleepAfterTServerRestartMillis:
          exampleSetFlag: true
          format: int32
          type: integer
        sourceXClusterConfigs:
          description: The source universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        targetXClusterConfigs:
          description: The target universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        universePaused:
          exampleSetFlag: true
          type: boolean
        universeUUID:
          description: Associated universe UUID
          exampleSetFlag: true
          format: uuid
          type: string
        updateInProgress:
          exampleSetFlag: true
          type: boolean
        updateSucceeded:
          exampleSetFlag: true
          type: boolean
        updatingTask:
          enum:
          - CloudBootstrap
          - CloudCleanup
          - CreateCassandraTable
          - CreateUniverse
          - ReadOnlyClusterCreate
          - ReadOnlyClusterDelete
          - CreateKubernetesUniverse
          - DestroyUniverse
          - PauseUniverse
          - ResumeUniverse
          - DestroyKubernetesUniverse
          - DeleteTable
          - BackupUniverse
          - RestoreBackup
          - MultiTableBackup
          - CreateBackup
          - EditUniverse
          - EditKubernetesUniverse
          - ExternalScript
          - KubernetesProvision
          - ImportIntoTable
          - UpgradeUniverse
          - RestartUniverse
          - SoftwareUpgrade
          - SoftwareKubernetesUpgrade
          - GFlagsUpgrade
          - GFlagsKubernetesUpgrade
          - CertsRotate
          - TlsToggle
          - VMImageUpgrade
          - SystemdUpgrade
          - CreateRootVolumes
          - ReplaceRootVolume
          - ChangeInstanceType
          - PersistResizeNode
          - PersistSystemdUpgrade
          - UpdateNodeDetails
          - UpgradeKubernetesUniverse
          - DeleteNodeFromUniverse
          - StopNodeInUniverse
          - StartNodeInUniverse
          - AddNodeToUniverse
          - RemoveNodeFromUniverse
          - ReleaseInstanceFromUniverse
          - SetUniverseKey
          - SetKubernetesUniverseKey
          - CreateKMSConfig
          - EditKMSConfig
          - DeleteKMSConfig
          - UpdateDiskSize
          - StartMasterOnNode
          - CreateXClusterConfig
          - EditXClusterConfig
          - DeleteXClusterConfig
          - SyncXClusterConfig
          - CreateSupportBundle
          - AnsibleClusterServerCtl
          - AnsibleConfigureServers
          - AnsibleDestroyServer
          - PauseServer
          - ResumeServer
          - AnsibleSetupServer
          - AnsibleCreateServer
          - PrecheckNode
          - PrecheckNodeDetached
          - AnsibleUpdateNodeInfo
          - BulkImport
          - ChangeMasterConfig
          - ChangeAdminPassword
          - CreateTable
          - DeleteNode
          - DeleteBackup
          - DeleteBackupYb
          - DeleteCustomerConfig
          - DeleteCustomerStorageConfig
          - UpdateNodeProcess
          - DeleteTableFromUniverse
          - LoadBalancerStateChange
          - ModifyBlackList
          - ManipulateDnsRecordTask
          - RemoveUniverseEntry
          - SetFlagInMemory
          - SetNodeState
          - SwamperTargetsFileUpdate
          - UniverseUpdateSucceeded
          - UpdateAndPersistGFlags
          - UpdatePlacementInfo
          - UpdateSoftwareVersion
          - WaitForDataMove
          - WaitForLeaderBlacklistCompletion
          - WaitForFollowerLag
          - WaitForLoadBalance
          - WaitForMasterLeader
          - WaitForServer
          - WaitForTServerHeartBeats
          - DeleteClusterFromUniverse
          - InstanceActions
          - WaitForServerReady
          - RunExternalScript
          - XClusterConfigSetup
          - XClusterConfigSetStatus
          - XClusterConfigModifyTables
          - XClusterConfigRename
          - XClusterConfigDelete
          - XClusterConfigSync
          - CloudAccessKeyCleanup
          - CloudAccessKeySetup
          - CloudInitializer
          - CloudProviderCleanup
          - CloudRegionCleanup
          - CloudRegionSetup
          - CloudSetup
          - BackupTable
          - BackupTableYb
          - BackupUniverseKeys
          - RestoreBackupYb
          - RestoreUniverseKeys
          - RestoreUniverseKeysYb
          - WaitForLeadersOnPreferredOnly
          - EnableEncryptionAtRest
          - DisableEncryptionAtRest
          - DestroyEncryptionAtRest
          - KubernetesCommandExecutor
          - KubernetesWaitForPod
          - KubernetesCheckNumPod
          - SetActiveUniverseKeys
          - CopyEncryptionKeyFile
          - WaitForEncryptionKeyInMemory
          - UnivSetCertificate
          - CreateAlertDefinitions
          - UniverseSetTlsParams
          - UniverseUpdateRootCert
          - ResetUniverseVersion
          - DeleteCertificate
          - SetNodeStatus
          - CheckMasterLeader
          - CheckMasters
          - CheckTServers
          - WaitForTServerHBs
          - CreatePrometheusSwamperConfig
          - PreflightNodeCheck
          - RunYsqlUpgrade
          - ResizeNode
          - UpdateMountedDisks
          exampleSetFlag: true
          type: string
        updatingTaskUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        upgradeOption:
          enum:
          - Rolling
          - Non-Rolling
          - Non-Restart
          exampleSetFlag: true
          type: string
        userAZSelected:
          exampleSetFlag: true
          type: boolean
        ybPrevSoftwareVersion:
          description: Previous software version
          exampleSetFlag: true
          type: string
      required:
      - clusters
      - kubernetesUpgradeSupported
      - sleepAfterMasterRestartMillis
      - sleepAfterTServerRestartMillis
      - upgradeOption
      type: object
    TableDefinitionTaskParams:
      example:
        expectedUniverseVersion: 0
        sourceXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodeExporterUser: nodeExporterUser
        encryptionAtRestConfig:
          encryptionAtRestEnabled: true
          opType: ENABLE
          kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: CMK
        targetXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ybPrevSoftwareVersion: ybPrevSoftwareVersion
        deviceInfo:
          diskIops: 7
          storageClass: storageClass
          numVolumes: 1
          mountPoints: mountPoints
          storageType: IO1
          throughput: 1
          volumeSize: 1
        tableUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tableType: YQL_TABLE_TYPE
        universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        errorString: errorString
        firstTry: true
        nodeDetailsSet:
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        extraDependencies:
          installNodeExporter: true
        communicationPorts:
          tserverRpcPort: 7
          nodeExporterPort: 1
          tserverHttpPort: 2
          ysqlServerHttpPort: 2
          yqlServerRpcPort: 3
          masterHttpPort: 0
          ysqlServerRpcPort: 4
          yqlServerHttpPort: 9
          masterRpcPort: 6
          redisServerHttpPort: 5
          redisServerRpcPort: 5
        cmkArn: cmkArn
        previousTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tableDetails:
          keyspace: keyspace
          columns:
          - columnOrder: 6
            isClusteringKey: true
            sortOrder: NONE
            valueType: TINYINT
            name: name
            keyType: TINYINT
            type: TINYINT
            isPartitionKey: true
          - columnOrder: 6
            isClusteringKey: true
            sortOrder: NONE
            valueType: TINYINT
            name: name
            keyType: TINYINT
            type: TINYINT
            isPartitionKey: true
          ttlInSeconds: 1
          splitValues:
          - splitValues
          - splitValues
          tableName: tableName
      exampleSetFlag: true
      properties:
        cmkArn:
          description: Amazon Resource Name (ARN) of the CMK
          exampleSetFlag: true
          type: string
        communicationPorts:
          $ref: '#/components/schemas/CommunicationPorts'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        encryptionAtRestConfig:
          $ref: '#/components/schemas/EncryptionAtRestConfig'
        errorString:
          description: Error message
          exampleSetFlag: true
          type: string
        expectedUniverseVersion:
          description: Expected universe version
          exampleSetFlag: true
          format: int32
          type: integer
        extraDependencies:
          $ref: '#/components/schemas/ExtraDependencies'
        firstTry:
          description: Whether this task has been tried before
          exampleSetFlag: true
          type: boolean
        nodeDetailsSet:
          description: Node details
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/NodeDetails'
          type: array
          uniqueItems: true
        nodeExporterUser:
          description: Node exporter user
          exampleSetFlag: true
          type: string
        previousTaskUUID:
          description: Previous task UUID only if this task is a retry
          exampleSetFlag: true
          format: uuid
          type: string
        sourceXClusterConfigs:
          description: The source universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        tableDetails:
          $ref: '#/components/schemas/TableDetails'
        tableType:
          enum:
          - YQL_TABLE_TYPE
          - REDIS_TABLE_TYPE
          - PGSQL_TABLE_TYPE
          - TRANSACTION_STATUS_TABLE_TYPE
          exampleSetFlag: true
          type: string
        tableUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        targetXClusterConfigs:
          description: The target universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        universeUUID:
          description: Associated universe UUID
          exampleSetFlag: true
          format: uuid
          type: string
        ybPrevSoftwareVersion:
          description: Previous software version
          exampleSetFlag: true
          type: string
      required:
      - tableDetails
      - tableType
      - tableUUID
      type: object
    TableDetails:
      description: Table details
      example:
        keyspace: keyspace
        columns:
        - columnOrder: 6
          isClusteringKey: true
          sortOrder: NONE
          valueType: TINYINT
          name: name
          keyType: TINYINT
          type: TINYINT
          isPartitionKey: true
        - columnOrder: 6
          isClusteringKey: true
          sortOrder: NONE
          valueType: TINYINT
          name: name
          keyType: TINYINT
          type: TINYINT
          isPartitionKey: true
        ttlInSeconds: 1
        splitValues:
        - splitValues
        - splitValues
        tableName: tableName
      exampleSetFlag: true
      properties:
        columns:
          description: Details of all columns in the table
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/ColumnDetails'
          type: array
        keyspace:
          description: Keyspace to which this table belongs
          exampleSetFlag: true
          type: string
        splitValues:
          description: Primary key values used to split table into tablets
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            type: string
          type: array
        tableName:
          description: Table name
          exampleSetFlag: true
          type: string
        ttlInSeconds:
          description: "The default table-level time to live, in seconds. A value\
            \ of `-1` represents an infinite TTL."
          exampleSetFlag: true
          format: int64
          type: integer
      type: object
    TableInfoResp:
      description: Table information response
      example:
        relationType: SYSTEM_TABLE_RELATION
        tableUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tableType: YQL_TABLE_TYPE
        keySpace: keySpace
        sizeBytes: 0.8008281904610115
        tableName: tableName
      exampleSetFlag: true
      properties:
        keySpace:
          description: Keyspace
          exampleSetFlag: true
          type: string
        relationType:
          description: Relation type
          enum:
          - SYSTEM_TABLE_RELATION
          - USER_TABLE_RELATION
          - INDEX_TABLE_RELATION
          exampleSetFlag: true
          type: string
        sizeBytes:
          description: Size in bytes
          exampleSetFlag: true
          format: double
          readOnly: true
          type: number
        tableName:
          description: Table name
          exampleSetFlag: true
          type: string
        tableType:
          description: Table type
          enum:
          - YQL_TABLE_TYPE
          - REDIS_TABLE_TYPE
          - PGSQL_TABLE_TYPE
          - TRANSACTION_STATUS_TABLE_TYPE
          exampleSetFlag: true
          type: string
        tableUUID:
          description: Table UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
      type: object
    TlsToggleParams:
      example:
        expectedUniverseVersion: 0
        enableNodeToNodeEncrypt: true
        resetAZConfig: true
        sourceXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userAZSelected: true
        nodeExporterUser: nodeExporterUser
        encryptionAtRestConfig:
          encryptionAtRestEnabled: true
          opType: ENABLE
          kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: CMK
        upgradeOption: Rolling
        nodePrefix: nodePrefix
        itestS3PackagePath: itestS3PackagePath
        capability: READ_ONLY
        firstTry: true
        extraDependencies:
          installNodeExporter: true
        rootCA: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodesResizeAvailable: true
        updatingTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        allowInsecure: true
        backupInProgress: true
        clusters:
        - clusterType: PRIMARY
          placementInfo:
            cloudList:
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          regions:
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          userIntent:
            replicationFactor: 2
            useSystemd: true
            enableNodeToNodeEncrypt: true
            preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            enableYCQLAuth: true
            instanceTags:
              key: instanceTags
            providerType: unknown
            tserverGFlags:
              key: tserverGFlags
            ysqlPassword: ysqlPassword
            enableYEDIS: true
            enableVolumeEncryption: true
            provider: provider
            accessKeyCode: accessKeyCode
            enableIPV6: true
            enableYSQLAuth: true
            universeName: universeName
            assignStaticPublicIP: true
            enableYSQL: true
            useTimeSync: true
            regionList:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            useHostname: true
            instanceType: instanceType
            ybSoftwareVersion: ybSoftwareVersion
            deviceInfo:
              diskIops: 7
              storageClass: storageClass
              numVolumes: 1
              mountPoints: mountPoints
              storageType: IO1
              throughput: 1
              volumeSize: 1
            enableYCQL: true
            numNodes: 5
            assignPublicIP: true
            ycqlPassword: ycqlPassword
            enableClientToNodeEncrypt: true
            awsArnString: awsArnString
            enableExposingService: NONE
            masterGFlags:
              key: masterGFlags
          index: 6
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - clusterType: PRIMARY
          placementInfo:
            cloudList:
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          regions:
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          userIntent:
            replicationFactor: 2
            useSystemd: true
            enableNodeToNodeEncrypt: true
            preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            enableYCQLAuth: true
            instanceTags:
              key: instanceTags
            providerType: unknown
            tserverGFlags:
              key: tserverGFlags
            ysqlPassword: ysqlPassword
            enableYEDIS: true
            enableVolumeEncryption: true
            provider: provider
            accessKeyCode: accessKeyCode
            enableIPV6: true
            enableYSQLAuth: true
            universeName: universeName
            assignStaticPublicIP: true
            enableYSQL: true
            useTimeSync: true
            regionList:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            useHostname: true
            instanceType: instanceType
            ybSoftwareVersion: ybSoftwareVersion
            deviceInfo:
              diskIops: 7
              storageClass: storageClass
              numVolumes: 1
              mountPoints: mountPoints
              storageType: IO1
              throughput: 1
              volumeSize: 1
            enableYCQL: true
            numNodes: 5
            assignPublicIP: true
            ycqlPassword: ycqlPassword
            enableClientToNodeEncrypt: true
            awsArnString: awsArnString
            enableExposingService: NONE
            masterGFlags:
              key: masterGFlags
          index: 6
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sleepAfterTServerRestartMillis: 5
        universePaused: true
        updateSucceeded: true
        importedState: NONE
        updateInProgress: true
        targetXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        setTxnTableWaitCountFlag: true
        ybPrevSoftwareVersion: ybPrevSoftwareVersion
        deviceInfo:
          diskIops: 7
          storageClass: storageClass
          numVolumes: 1
          mountPoints: mountPoints
          storageType: IO1
          throughput: 1
          volumeSize: 1
        updatingTask: CloudBootstrap
        kubernetesUpgradeSupported: true
        nextClusterIndex: 6
        universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        errorString: errorString
        clientRootCA: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodeDetailsSet:
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        remotePackagePath: remotePackagePath
        currentClusterType: PRIMARY
        enableClientToNodeEncrypt: true
        communicationPorts:
          tserverRpcPort: 7
          nodeExporterPort: 1
          tserverHttpPort: 2
          ysqlServerHttpPort: 2
          yqlServerRpcPort: 3
          masterHttpPort: 0
          ysqlServerRpcPort: 4
          yqlServerHttpPort: 9
          masterRpcPort: 6
          redisServerHttpPort: 5
          redisServerRpcPort: 5
        cmkArn: cmkArn
        rootAndClientRootCASame: true
        sleepAfterMasterRestartMillis: 1
        previousTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        allowInsecure:
          exampleSetFlag: true
          type: boolean
        backupInProgress:
          exampleSetFlag: true
          type: boolean
        capability:
          enum:
          - READ_ONLY
          - EDITS_ALLOWED
          exampleSetFlag: true
          type: string
        clientRootCA:
          exampleSetFlag: true
          format: uuid
          type: string
        clusters:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/Cluster'
          type: array
        cmkArn:
          description: Amazon Resource Name (ARN) of the CMK
          exampleSetFlag: true
          type: string
        communicationPorts:
          $ref: '#/components/schemas/CommunicationPorts'
        currentClusterType:
          enum:
          - PRIMARY
          - ASYNC
          exampleSetFlag: true
          type: string
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        enableClientToNodeEncrypt:
          exampleSetFlag: true
          type: boolean
        enableNodeToNodeEncrypt:
          exampleSetFlag: true
          type: boolean
        encryptionAtRestConfig:
          $ref: '#/components/schemas/EncryptionAtRestConfig'
        errorString:
          description: Error message
          exampleSetFlag: true
          type: string
        expectedUniverseVersion:
          description: Expected universe version
          exampleSetFlag: true
          format: int32
          type: integer
        extraDependencies:
          $ref: '#/components/schemas/ExtraDependencies'
        firstTry:
          description: Whether this task has been tried before
          exampleSetFlag: true
          type: boolean
        importedState:
          enum:
          - NONE
          - STARTED
          - MASTERS_ADDED
          - TSERVERS_ADDED
          - IMPORTED
          exampleSetFlag: true
          type: string
        itestS3PackagePath:
          exampleSetFlag: true
          type: string
        kubernetesUpgradeSupported:
          exampleSetFlag: true
          type: boolean
        nextClusterIndex:
          exampleSetFlag: true
          format: int32
          type: integer
        nodeDetailsSet:
          description: Node details
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/NodeDetails'
          type: array
          uniqueItems: true
        nodeExporterUser:
          description: Node exporter user
          exampleSetFlag: true
          type: string
        nodePrefix:
          exampleSetFlag: true
          type: string
        nodesResizeAvailable:
          exampleSetFlag: true
          type: boolean
        previousTaskUUID:
          description: Previous task UUID only if this task is a retry
          exampleSetFlag: true
          format: uuid
          type: string
        remotePackagePath:
          exampleSetFlag: true
          type: string
        resetAZConfig:
          exampleSetFlag: true
          type: boolean
        rootAndClientRootCASame:
          exampleSetFlag: true
          type: boolean
        rootCA:
          exampleSetFlag: true
          format: uuid
          type: string
        setTxnTableWaitCountFlag:
          exampleSetFlag: true
          type: boolean
        sleepAfterMasterRestartMillis:
          exampleSetFlag: true
          format: int32
          type: integer
        sleepAfterTServerRestartMillis:
          exampleSetFlag: true
          format: int32
          type: integer
        sourceXClusterConfigs:
          description: The source universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        targetXClusterConfigs:
          description: The target universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        universePaused:
          exampleSetFlag: true
          type: boolean
        universeUUID:
          description: Associated universe UUID
          exampleSetFlag: true
          format: uuid
          type: string
        updateInProgress:
          exampleSetFlag: true
          type: boolean
        updateSucceeded:
          exampleSetFlag: true
          type: boolean
        updatingTask:
          enum:
          - CloudBootstrap
          - CloudCleanup
          - CreateCassandraTable
          - CreateUniverse
          - ReadOnlyClusterCreate
          - ReadOnlyClusterDelete
          - CreateKubernetesUniverse
          - DestroyUniverse
          - PauseUniverse
          - ResumeUniverse
          - DestroyKubernetesUniverse
          - DeleteTable
          - BackupUniverse
          - RestoreBackup
          - MultiTableBackup
          - CreateBackup
          - EditUniverse
          - EditKubernetesUniverse
          - ExternalScript
          - KubernetesProvision
          - ImportIntoTable
          - UpgradeUniverse
          - RestartUniverse
          - SoftwareUpgrade
          - SoftwareKubernetesUpgrade
          - GFlagsUpgrade
          - GFlagsKubernetesUpgrade
          - CertsRotate
          - TlsToggle
          - VMImageUpgrade
          - SystemdUpgrade
          - CreateRootVolumes
          - ReplaceRootVolume
          - ChangeInstanceType
          - PersistResizeNode
          - PersistSystemdUpgrade
          - UpdateNodeDetails
          - UpgradeKubernetesUniverse
          - DeleteNodeFromUniverse
          - StopNodeInUniverse
          - StartNodeInUniverse
          - AddNodeToUniverse
          - RemoveNodeFromUniverse
          - ReleaseInstanceFromUniverse
          - SetUniverseKey
          - SetKubernetesUniverseKey
          - CreateKMSConfig
          - EditKMSConfig
          - DeleteKMSConfig
          - UpdateDiskSize
          - StartMasterOnNode
          - CreateXClusterConfig
          - EditXClusterConfig
          - DeleteXClusterConfig
          - SyncXClusterConfig
          - CreateSupportBundle
          - AnsibleClusterServerCtl
          - AnsibleConfigureServers
          - AnsibleDestroyServer
          - PauseServer
          - ResumeServer
          - AnsibleSetupServer
          - AnsibleCreateServer
          - PrecheckNode
          - PrecheckNodeDetached
          - AnsibleUpdateNodeInfo
          - BulkImport
          - ChangeMasterConfig
          - ChangeAdminPassword
          - CreateTable
          - DeleteNode
          - DeleteBackup
          - DeleteBackupYb
          - DeleteCustomerConfig
          - DeleteCustomerStorageConfig
          - UpdateNodeProcess
          - DeleteTableFromUniverse
          - LoadBalancerStateChange
          - ModifyBlackList
          - ManipulateDnsRecordTask
          - RemoveUniverseEntry
          - SetFlagInMemory
          - SetNodeState
          - SwamperTargetsFileUpdate
          - UniverseUpdateSucceeded
          - UpdateAndPersistGFlags
          - UpdatePlacementInfo
          - UpdateSoftwareVersion
          - WaitForDataMove
          - WaitForLeaderBlacklistCompletion
          - WaitForFollowerLag
          - WaitForLoadBalance
          - WaitForMasterLeader
          - WaitForServer
          - WaitForTServerHeartBeats
          - DeleteClusterFromUniverse
          - InstanceActions
          - WaitForServerReady
          - RunExternalScript
          - XClusterConfigSetup
          - XClusterConfigSetStatus
          - XClusterConfigModifyTables
          - XClusterConfigRename
          - XClusterConfigDelete
          - XClusterConfigSync
          - CloudAccessKeyCleanup
          - CloudAccessKeySetup
          - CloudInitializer
          - CloudProviderCleanup
          - CloudRegionCleanup
          - CloudRegionSetup
          - CloudSetup
          - BackupTable
          - BackupTableYb
          - BackupUniverseKeys
          - RestoreBackupYb
          - RestoreUniverseKeys
          - RestoreUniverseKeysYb
          - WaitForLeadersOnPreferredOnly
          - EnableEncryptionAtRest
          - DisableEncryptionAtRest
          - DestroyEncryptionAtRest
          - KubernetesCommandExecutor
          - KubernetesWaitForPod
          - KubernetesCheckNumPod
          - SetActiveUniverseKeys
          - CopyEncryptionKeyFile
          - WaitForEncryptionKeyInMemory
          - UnivSetCertificate
          - CreateAlertDefinitions
          - UniverseSetTlsParams
          - UniverseUpdateRootCert
          - ResetUniverseVersion
          - DeleteCertificate
          - SetNodeStatus
          - CheckMasterLeader
          - CheckMasters
          - CheckTServers
          - WaitForTServerHBs
          - CreatePrometheusSwamperConfig
          - PreflightNodeCheck
          - RunYsqlUpgrade
          - ResizeNode
          - UpdateMountedDisks
          exampleSetFlag: true
          type: string
        updatingTaskUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        upgradeOption:
          enum:
          - Rolling
          - Non-Rolling
          - Non-Restart
          exampleSetFlag: true
          type: string
        userAZSelected:
          exampleSetFlag: true
          type: boolean
        ybPrevSoftwareVersion:
          description: Previous software version
          exampleSetFlag: true
          type: string
      required:
      - allowInsecure
      - clientRootCA
      - clusters
      - enableClientToNodeEncrypt
      - enableNodeToNodeEncrypt
      - kubernetesUpgradeSupported
      - rootAndClientRootCASame
      - rootCA
      - sleepAfterMasterRestartMillis
      - sleepAfterTServerRestartMillis
      - upgradeOption
      type: object
    UniverseConfigureTaskParams:
      example:
        expectedUniverseVersion: 0
        resetAZConfig: true
        sourceXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userAZSelected: true
        nodeExporterUser: nodeExporterUser
        encryptionAtRestConfig:
          encryptionAtRestEnabled: true
          opType: ENABLE
          kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: CMK
        nodePrefix: nodePrefix
        allowGeoPartitioning: true
        itestS3PackagePath: itestS3PackagePath
        capability: READ_ONLY
        firstTry: true
        extraDependencies:
          installNodeExporter: true
        rootCA: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodesResizeAvailable: true
        updatingTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        allowInsecure: true
        backupInProgress: true
        clusters:
        - clusterType: PRIMARY
          placementInfo:
            cloudList:
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          regions:
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          userIntent:
            replicationFactor: 2
            useSystemd: true
            enableNodeToNodeEncrypt: true
            preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            enableYCQLAuth: true
            instanceTags:
              key: instanceTags
            providerType: unknown
            tserverGFlags:
              key: tserverGFlags
            ysqlPassword: ysqlPassword
            enableYEDIS: true
            enableVolumeEncryption: true
            provider: provider
            accessKeyCode: accessKeyCode
            enableIPV6: true
            enableYSQLAuth: true
            universeName: universeName
            assignStaticPublicIP: true
            enableYSQL: true
            useTimeSync: true
            regionList:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            useHostname: true
            instanceType: instanceType
            ybSoftwareVersion: ybSoftwareVersion
            deviceInfo:
              diskIops: 7
              storageClass: storageClass
              numVolumes: 1
              mountPoints: mountPoints
              storageType: IO1
              throughput: 1
              volumeSize: 1
            enableYCQL: true
            numNodes: 5
            assignPublicIP: true
            ycqlPassword: ycqlPassword
            enableClientToNodeEncrypt: true
            awsArnString: awsArnString
            enableExposingService: NONE
            masterGFlags:
              key: masterGFlags
          index: 6
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - clusterType: PRIMARY
          placementInfo:
            cloudList:
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          regions:
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          userIntent:
            replicationFactor: 2
            useSystemd: true
            enableNodeToNodeEncrypt: true
            preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            enableYCQLAuth: true
            instanceTags:
              key: instanceTags
            providerType: unknown
            tserverGFlags:
              key: tserverGFlags
            ysqlPassword: ysqlPassword
            enableYEDIS: true
            enableVolumeEncryption: true
            provider: provider
            accessKeyCode: accessKeyCode
            enableIPV6: true
            enableYSQLAuth: true
            universeName: universeName
            assignStaticPublicIP: true
            enableYSQL: true
            useTimeSync: true
            regionList:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            useHostname: true
            instanceType: instanceType
            ybSoftwareVersion: ybSoftwareVersion
            deviceInfo:
              diskIops: 7
              storageClass: storageClass
              numVolumes: 1
              mountPoints: mountPoints
              storageType: IO1
              throughput: 1
              volumeSize: 1
            enableYCQL: true
            numNodes: 5
            assignPublicIP: true
            ycqlPassword: ycqlPassword
            enableClientToNodeEncrypt: true
            awsArnString: awsArnString
            enableExposingService: NONE
            masterGFlags:
              key: masterGFlags
          index: 6
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        clusterOperation: CREATE
        universePaused: true
        updateSucceeded: true
        importedState: NONE
        updateInProgress: true
        targetXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        setTxnTableWaitCountFlag: true
        ybPrevSoftwareVersion: ybPrevSoftwareVersion
        deviceInfo:
          diskIops: 7
          storageClass: storageClass
          numVolumes: 1
          mountPoints: mountPoints
          storageType: IO1
          throughput: 1
          volumeSize: 1
        updatingTask: CloudBootstrap
        nextClusterIndex: 6
        universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        errorString: errorString
        clientRootCA: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodeDetailsSet:
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        remotePackagePath: remotePackagePath
        currentClusterType: PRIMARY
        communicationPorts:
          tserverRpcPort: 7
          nodeExporterPort: 1
          tserverHttpPort: 2
          ysqlServerHttpPort: 2
          yqlServerRpcPort: 3
          masterHttpPort: 0
          ysqlServerRpcPort: 4
          yqlServerHttpPort: 9
          masterRpcPort: 6
          redisServerHttpPort: 5
          redisServerRpcPort: 5
        cmkArn: cmkArn
        rootAndClientRootCASame: true
        previousTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        allowGeoPartitioning:
          exampleSetFlag: true
          type: boolean
        allowInsecure:
          exampleSetFlag: true
          type: boolean
        backupInProgress:
          exampleSetFlag: true
          type: boolean
        capability:
          enum:
          - READ_ONLY
          - EDITS_ALLOWED
          exampleSetFlag: true
          type: string
        clientRootCA:
          exampleSetFlag: true
          format: uuid
          type: string
        clusterOperation:
          enum:
          - CREATE
          - EDIT
          - DELETE
          exampleSetFlag: true
          type: string
        clusters:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/Cluster'
          type: array
        cmkArn:
          description: Amazon Resource Name (ARN) of the CMK
          exampleSetFlag: true
          type: string
        communicationPorts:
          $ref: '#/components/schemas/CommunicationPorts'
        currentClusterType:
          enum:
          - PRIMARY
          - ASYNC
          exampleSetFlag: true
          type: string
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        encryptionAtRestConfig:
          $ref: '#/components/schemas/EncryptionAtRestConfig'
        errorString:
          description: Error message
          exampleSetFlag: true
          type: string
        expectedUniverseVersion:
          description: Expected universe version
          exampleSetFlag: true
          format: int32
          type: integer
        extraDependencies:
          $ref: '#/components/schemas/ExtraDependencies'
        firstTry:
          description: Whether this task has been tried before
          exampleSetFlag: true
          type: boolean
        importedState:
          enum:
          - NONE
          - STARTED
          - MASTERS_ADDED
          - TSERVERS_ADDED
          - IMPORTED
          exampleSetFlag: true
          type: string
        itestS3PackagePath:
          exampleSetFlag: true
          type: string
        nextClusterIndex:
          exampleSetFlag: true
          format: int32
          type: integer
        nodeDetailsSet:
          description: Node details
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/NodeDetails'
          type: array
          uniqueItems: true
        nodeExporterUser:
          description: Node exporter user
          exampleSetFlag: true
          type: string
        nodePrefix:
          exampleSetFlag: true
          type: string
        nodesResizeAvailable:
          exampleSetFlag: true
          type: boolean
        previousTaskUUID:
          description: Previous task UUID only if this task is a retry
          exampleSetFlag: true
          format: uuid
          type: string
        remotePackagePath:
          exampleSetFlag: true
          type: string
        resetAZConfig:
          exampleSetFlag: true
          type: boolean
        rootAndClientRootCASame:
          exampleSetFlag: true
          type: boolean
        rootCA:
          exampleSetFlag: true
          format: uuid
          type: string
        setTxnTableWaitCountFlag:
          exampleSetFlag: true
          type: boolean
        sourceXClusterConfigs:
          description: The source universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        targetXClusterConfigs:
          description: The target universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        universePaused:
          exampleSetFlag: true
          type: boolean
        universeUUID:
          description: Associated universe UUID
          exampleSetFlag: true
          format: uuid
          type: string
        updateInProgress:
          exampleSetFlag: true
          type: boolean
        updateSucceeded:
          exampleSetFlag: true
          type: boolean
        updatingTask:
          enum:
          - CloudBootstrap
          - CloudCleanup
          - CreateCassandraTable
          - CreateUniverse
          - ReadOnlyClusterCreate
          - ReadOnlyClusterDelete
          - CreateKubernetesUniverse
          - DestroyUniverse
          - PauseUniverse
          - ResumeUniverse
          - DestroyKubernetesUniverse
          - DeleteTable
          - BackupUniverse
          - RestoreBackup
          - MultiTableBackup
          - CreateBackup
          - EditUniverse
          - EditKubernetesUniverse
          - ExternalScript
          - KubernetesProvision
          - ImportIntoTable
          - UpgradeUniverse
          - RestartUniverse
          - SoftwareUpgrade
          - SoftwareKubernetesUpgrade
          - GFlagsUpgrade
          - GFlagsKubernetesUpgrade
          - CertsRotate
          - TlsToggle
          - VMImageUpgrade
          - SystemdUpgrade
          - CreateRootVolumes
          - ReplaceRootVolume
          - ChangeInstanceType
          - PersistResizeNode
          - PersistSystemdUpgrade
          - UpdateNodeDetails
          - UpgradeKubernetesUniverse
          - DeleteNodeFromUniverse
          - StopNodeInUniverse
          - StartNodeInUniverse
          - AddNodeToUniverse
          - RemoveNodeFromUniverse
          - ReleaseInstanceFromUniverse
          - SetUniverseKey
          - SetKubernetesUniverseKey
          - CreateKMSConfig
          - EditKMSConfig
          - DeleteKMSConfig
          - UpdateDiskSize
          - StartMasterOnNode
          - CreateXClusterConfig
          - EditXClusterConfig
          - DeleteXClusterConfig
          - SyncXClusterConfig
          - CreateSupportBundle
          - AnsibleClusterServerCtl
          - AnsibleConfigureServers
          - AnsibleDestroyServer
          - PauseServer
          - ResumeServer
          - AnsibleSetupServer
          - AnsibleCreateServer
          - PrecheckNode
          - PrecheckNodeDetached
          - AnsibleUpdateNodeInfo
          - BulkImport
          - ChangeMasterConfig
          - ChangeAdminPassword
          - CreateTable
          - DeleteNode
          - DeleteBackup
          - DeleteBackupYb
          - DeleteCustomerConfig
          - DeleteCustomerStorageConfig
          - UpdateNodeProcess
          - DeleteTableFromUniverse
          - LoadBalancerStateChange
          - ModifyBlackList
          - ManipulateDnsRecordTask
          - RemoveUniverseEntry
          - SetFlagInMemory
          - SetNodeState
          - SwamperTargetsFileUpdate
          - UniverseUpdateSucceeded
          - UpdateAndPersistGFlags
          - UpdatePlacementInfo
          - UpdateSoftwareVersion
          - WaitForDataMove
          - WaitForLeaderBlacklistCompletion
          - WaitForFollowerLag
          - WaitForLoadBalance
          - WaitForMasterLeader
          - WaitForServer
          - WaitForTServerHeartBeats
          - DeleteClusterFromUniverse
          - InstanceActions
          - WaitForServerReady
          - RunExternalScript
          - XClusterConfigSetup
          - XClusterConfigSetStatus
          - XClusterConfigModifyTables
          - XClusterConfigRename
          - XClusterConfigDelete
          - XClusterConfigSync
          - CloudAccessKeyCleanup
          - CloudAccessKeySetup
          - CloudInitializer
          - CloudProviderCleanup
          - CloudRegionCleanup
          - CloudRegionSetup
          - CloudSetup
          - BackupTable
          - BackupTableYb
          - BackupUniverseKeys
          - RestoreBackupYb
          - RestoreUniverseKeys
          - RestoreUniverseKeysYb
          - WaitForLeadersOnPreferredOnly
          - EnableEncryptionAtRest
          - DisableEncryptionAtRest
          - DestroyEncryptionAtRest
          - KubernetesCommandExecutor
          - KubernetesWaitForPod
          - KubernetesCheckNumPod
          - SetActiveUniverseKeys
          - CopyEncryptionKeyFile
          - WaitForEncryptionKeyInMemory
          - UnivSetCertificate
          - CreateAlertDefinitions
          - UniverseSetTlsParams
          - UniverseUpdateRootCert
          - ResetUniverseVersion
          - DeleteCertificate
          - SetNodeStatus
          - CheckMasterLeader
          - CheckMasters
          - CheckTServers
          - WaitForTServerHBs
          - CreatePrometheusSwamperConfig
          - PreflightNodeCheck
          - RunYsqlUpgrade
          - ResizeNode
          - UpdateMountedDisks
          exampleSetFlag: true
          type: string
        updatingTaskUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        userAZSelected:
          exampleSetFlag: true
          type: boolean
        ybPrevSoftwareVersion:
          description: Previous software version
          exampleSetFlag: true
          type: string
      required:
      - clusters
      type: object
    UniverseDefinitionTaskParams:
      example:
        expectedUniverseVersion: 0
        resetAZConfig: true
        sourceXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userAZSelected: true
        nodeExporterUser: nodeExporterUser
        encryptionAtRestConfig:
          encryptionAtRestEnabled: true
          opType: ENABLE
          kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: CMK
        nodePrefix: nodePrefix
        itestS3PackagePath: itestS3PackagePath
        capability: READ_ONLY
        firstTry: true
        extraDependencies:
          installNodeExporter: true
        rootCA: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodesResizeAvailable: true
        updatingTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        allowInsecure: true
        backupInProgress: true
        clusters:
        - clusterType: PRIMARY
          placementInfo:
            cloudList:
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          regions:
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          userIntent:
            replicationFactor: 2
            useSystemd: true
            enableNodeToNodeEncrypt: true
            preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            enableYCQLAuth: true
            instanceTags:
              key: instanceTags
            providerType: unknown
            tserverGFlags:
              key: tserverGFlags
            ysqlPassword: ysqlPassword
            enableYEDIS: true
            enableVolumeEncryption: true
            provider: provider
            accessKeyCode: accessKeyCode
            enableIPV6: true
            enableYSQLAuth: true
            universeName: universeName
            assignStaticPublicIP: true
            enableYSQL: true
            useTimeSync: true
            regionList:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            useHostname: true
            instanceType: instanceType
            ybSoftwareVersion: ybSoftwareVersion
            deviceInfo:
              diskIops: 7
              storageClass: storageClass
              numVolumes: 1
              mountPoints: mountPoints
              storageType: IO1
              throughput: 1
              volumeSize: 1
            enableYCQL: true
            numNodes: 5
            assignPublicIP: true
            ycqlPassword: ycqlPassword
            enableClientToNodeEncrypt: true
            awsArnString: awsArnString
            enableExposingService: NONE
            masterGFlags:
              key: masterGFlags
          index: 6
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - clusterType: PRIMARY
          placementInfo:
            cloudList:
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          regions:
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          userIntent:
            replicationFactor: 2
            useSystemd: true
            enableNodeToNodeEncrypt: true
            preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            enableYCQLAuth: true
            instanceTags:
              key: instanceTags
            providerType: unknown
            tserverGFlags:
              key: tserverGFlags
            ysqlPassword: ysqlPassword
            enableYEDIS: true
            enableVolumeEncryption: true
            provider: provider
            accessKeyCode: accessKeyCode
            enableIPV6: true
            enableYSQLAuth: true
            universeName: universeName
            assignStaticPublicIP: true
            enableYSQL: true
            useTimeSync: true
            regionList:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            useHostname: true
            instanceType: instanceType
            ybSoftwareVersion: ybSoftwareVersion
            deviceInfo:
              diskIops: 7
              storageClass: storageClass
              numVolumes: 1
              mountPoints: mountPoints
              storageType: IO1
              throughput: 1
              volumeSize: 1
            enableYCQL: true
            numNodes: 5
            assignPublicIP: true
            ycqlPassword: ycqlPassword
            enableClientToNodeEncrypt: true
            awsArnString: awsArnString
            enableExposingService: NONE
            masterGFlags:
              key: masterGFlags
          index: 6
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        universePaused: true
        updateSucceeded: true
        importedState: NONE
        updateInProgress: true
        targetXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        setTxnTableWaitCountFlag: true
        ybPrevSoftwareVersion: ybPrevSoftwareVersion
        deviceInfo:
          diskIops: 7
          storageClass: storageClass
          numVolumes: 1
          mountPoints: mountPoints
          storageType: IO1
          throughput: 1
          volumeSize: 1
        updatingTask: CloudBootstrap
        nextClusterIndex: 6
        universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        errorString: errorString
        clientRootCA: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodeDetailsSet:
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        remotePackagePath: remotePackagePath
        currentClusterType: PRIMARY
        communicationPorts:
          tserverRpcPort: 7
          nodeExporterPort: 1
          tserverHttpPort: 2
          ysqlServerHttpPort: 2
          yqlServerRpcPort: 3
          masterHttpPort: 0
          ysqlServerRpcPort: 4
          yqlServerHttpPort: 9
          masterRpcPort: 6
          redisServerHttpPort: 5
          redisServerRpcPort: 5
        cmkArn: cmkArn
        rootAndClientRootCASame: true
        previousTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        allowInsecure:
          exampleSetFlag: true
          type: boolean
        backupInProgress:
          exampleSetFlag: true
          type: boolean
        capability:
          enum:
          - READ_ONLY
          - EDITS_ALLOWED
          exampleSetFlag: true
          type: string
        clientRootCA:
          exampleSetFlag: true
          format: uuid
          type: string
        clusters:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/Cluster'
          type: array
        cmkArn:
          description: Amazon Resource Name (ARN) of the CMK
          exampleSetFlag: true
          type: string
        communicationPorts:
          $ref: '#/components/schemas/CommunicationPorts'
        currentClusterType:
          enum:
          - PRIMARY
          - ASYNC
          exampleSetFlag: true
          type: string
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        encryptionAtRestConfig:
          $ref: '#/components/schemas/EncryptionAtRestConfig'
        errorString:
          description: Error message
          exampleSetFlag: true
          type: string
        expectedUniverseVersion:
          description: Expected universe version
          exampleSetFlag: true
          format: int32
          type: integer
        extraDependencies:
          $ref: '#/components/schemas/ExtraDependencies'
        firstTry:
          description: Whether this task has been tried before
          exampleSetFlag: true
          type: boolean
        importedState:
          enum:
          - NONE
          - STARTED
          - MASTERS_ADDED
          - TSERVERS_ADDED
          - IMPORTED
          exampleSetFlag: true
          type: string
        itestS3PackagePath:
          exampleSetFlag: true
          type: string
        nextClusterIndex:
          exampleSetFlag: true
          format: int32
          type: integer
        nodeDetailsSet:
          description: Node details
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/NodeDetails'
          type: array
          uniqueItems: true
        nodeExporterUser:
          description: Node exporter user
          exampleSetFlag: true
          type: string
        nodePrefix:
          exampleSetFlag: true
          type: string
        nodesResizeAvailable:
          exampleSetFlag: true
          type: boolean
        previousTaskUUID:
          description: Previous task UUID only if this task is a retry
          exampleSetFlag: true
          format: uuid
          type: string
        remotePackagePath:
          exampleSetFlag: true
          type: string
        resetAZConfig:
          exampleSetFlag: true
          type: boolean
        rootAndClientRootCASame:
          exampleSetFlag: true
          type: boolean
        rootCA:
          exampleSetFlag: true
          format: uuid
          type: string
        setTxnTableWaitCountFlag:
          exampleSetFlag: true
          type: boolean
        sourceXClusterConfigs:
          description: The source universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        targetXClusterConfigs:
          description: The target universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        universePaused:
          exampleSetFlag: true
          type: boolean
        universeUUID:
          description: Associated universe UUID
          exampleSetFlag: true
          format: uuid
          type: string
        updateInProgress:
          exampleSetFlag: true
          type: boolean
        updateSucceeded:
          exampleSetFlag: true
          type: boolean
        updatingTask:
          enum:
          - CloudBootstrap
          - CloudCleanup
          - CreateCassandraTable
          - CreateUniverse
          - ReadOnlyClusterCreate
          - ReadOnlyClusterDelete
          - CreateKubernetesUniverse
          - DestroyUniverse
          - PauseUniverse
          - ResumeUniverse
          - DestroyKubernetesUniverse
          - DeleteTable
          - BackupUniverse
          - RestoreBackup
          - MultiTableBackup
          - CreateBackup
          - EditUniverse
          - EditKubernetesUniverse
          - ExternalScript
          - KubernetesProvision
          - ImportIntoTable
          - UpgradeUniverse
          - RestartUniverse
          - SoftwareUpgrade
          - SoftwareKubernetesUpgrade
          - GFlagsUpgrade
          - GFlagsKubernetesUpgrade
          - CertsRotate
          - TlsToggle
          - VMImageUpgrade
          - SystemdUpgrade
          - CreateRootVolumes
          - ReplaceRootVolume
          - ChangeInstanceType
          - PersistResizeNode
          - PersistSystemdUpgrade
          - UpdateNodeDetails
          - UpgradeKubernetesUniverse
          - DeleteNodeFromUniverse
          - StopNodeInUniverse
          - StartNodeInUniverse
          - AddNodeToUniverse
          - RemoveNodeFromUniverse
          - ReleaseInstanceFromUniverse
          - SetUniverseKey
          - SetKubernetesUniverseKey
          - CreateKMSConfig
          - EditKMSConfig
          - DeleteKMSConfig
          - UpdateDiskSize
          - StartMasterOnNode
          - CreateXClusterConfig
          - EditXClusterConfig
          - DeleteXClusterConfig
          - SyncXClusterConfig
          - CreateSupportBundle
          - AnsibleClusterServerCtl
          - AnsibleConfigureServers
          - AnsibleDestroyServer
          - PauseServer
          - ResumeServer
          - AnsibleSetupServer
          - AnsibleCreateServer
          - PrecheckNode
          - PrecheckNodeDetached
          - AnsibleUpdateNodeInfo
          - BulkImport
          - ChangeMasterConfig
          - ChangeAdminPassword
          - CreateTable
          - DeleteNode
          - DeleteBackup
          - DeleteBackupYb
          - DeleteCustomerConfig
          - DeleteCustomerStorageConfig
          - UpdateNodeProcess
          - DeleteTableFromUniverse
          - LoadBalancerStateChange
          - ModifyBlackList
          - ManipulateDnsRecordTask
          - RemoveUniverseEntry
          - SetFlagInMemory
          - SetNodeState
          - SwamperTargetsFileUpdate
          - UniverseUpdateSucceeded
          - UpdateAndPersistGFlags
          - UpdatePlacementInfo
          - UpdateSoftwareVersion
          - WaitForDataMove
          - WaitForLeaderBlacklistCompletion
          - WaitForFollowerLag
          - WaitForLoadBalance
          - WaitForMasterLeader
          - WaitForServer
          - WaitForTServerHeartBeats
          - DeleteClusterFromUniverse
          - InstanceActions
          - WaitForServerReady
          - RunExternalScript
          - XClusterConfigSetup
          - XClusterConfigSetStatus
          - XClusterConfigModifyTables
          - XClusterConfigRename
          - XClusterConfigDelete
          - XClusterConfigSync
          - CloudAccessKeyCleanup
          - CloudAccessKeySetup
          - CloudInitializer
          - CloudProviderCleanup
          - CloudRegionCleanup
          - CloudRegionSetup
          - CloudSetup
          - BackupTable
          - BackupTableYb
          - BackupUniverseKeys
          - RestoreBackupYb
          - RestoreUniverseKeys
          - RestoreUniverseKeysYb
          - WaitForLeadersOnPreferredOnly
          - EnableEncryptionAtRest
          - DisableEncryptionAtRest
          - DestroyEncryptionAtRest
          - KubernetesCommandExecutor
          - KubernetesWaitForPod
          - KubernetesCheckNumPod
          - SetActiveUniverseKeys
          - CopyEncryptionKeyFile
          - WaitForEncryptionKeyInMemory
          - UnivSetCertificate
          - CreateAlertDefinitions
          - UniverseSetTlsParams
          - UniverseUpdateRootCert
          - ResetUniverseVersion
          - DeleteCertificate
          - SetNodeStatus
          - CheckMasterLeader
          - CheckMasters
          - CheckTServers
          - WaitForTServerHBs
          - CreatePrometheusSwamperConfig
          - PreflightNodeCheck
          - RunYsqlUpgrade
          - ResizeNode
          - UpdateMountedDisks
          exampleSetFlag: true
          type: string
        updatingTaskUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        userAZSelected:
          exampleSetFlag: true
          type: boolean
        ybPrevSoftwareVersion:
          description: Previous software version
          exampleSetFlag: true
          type: string
      required:
      - clusters
      type: object
    UniverseDefinitionTaskParamsResp:
      example:
        expectedUniverseVersion: 7
        resetAZConfig: true
        sourceXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userAZSelected: true
        nodeExporterUser: nodeExporterUser
        encryptionAtRestConfig:
          encryptionAtRestEnabled: true
          opType: ENABLE
          kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: CMK
        nodePrefix: nodePrefix
        itestS3PackagePath: itestS3PackagePath
        capability: READ_ONLY
        firstTry: true
        extraDependencies:
          installNodeExporter: true
        rootCA: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodesResizeAvailable: true
        updatingTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        allowInsecure: true
        backupInProgress: true
        clusters:
        - clusterType: PRIMARY
          placementInfo:
            cloudList:
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          regions:
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          userIntent:
            replicationFactor: 2
            useSystemd: true
            enableNodeToNodeEncrypt: true
            preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            enableYCQLAuth: true
            instanceTags:
              key: instanceTags
            providerType: unknown
            tserverGFlags:
              key: tserverGFlags
            ysqlPassword: ysqlPassword
            enableYEDIS: true
            enableVolumeEncryption: true
            provider: provider
            accessKeyCode: accessKeyCode
            enableIPV6: true
            enableYSQLAuth: true
            universeName: universeName
            assignStaticPublicIP: true
            enableYSQL: true
            useTimeSync: true
            regionList:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            useHostname: true
            instanceType: instanceType
            ybSoftwareVersion: ybSoftwareVersion
            deviceInfo:
              diskIops: 7
              storageClass: storageClass
              numVolumes: 1
              mountPoints: mountPoints
              storageType: IO1
              throughput: 1
              volumeSize: 1
            enableYCQL: true
            numNodes: 5
            assignPublicIP: true
            ycqlPassword: ycqlPassword
            enableClientToNodeEncrypt: true
            awsArnString: awsArnString
            enableExposingService: NONE
            masterGFlags:
              key: masterGFlags
          index: 6
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - clusterType: PRIMARY
          placementInfo:
            cloudList:
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          regions:
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          userIntent:
            replicationFactor: 2
            useSystemd: true
            enableNodeToNodeEncrypt: true
            preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            enableYCQLAuth: true
            instanceTags:
              key: instanceTags
            providerType: unknown
            tserverGFlags:
              key: tserverGFlags
            ysqlPassword: ysqlPassword
            enableYEDIS: true
            enableVolumeEncryption: true
            provider: provider
            accessKeyCode: accessKeyCode
            enableIPV6: true
            enableYSQLAuth: true
            universeName: universeName
            assignStaticPublicIP: true
            enableYSQL: true
            useTimeSync: true
            regionList:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            useHostname: true
            instanceType: instanceType
            ybSoftwareVersion: ybSoftwareVersion
            deviceInfo:
              diskIops: 7
              storageClass: storageClass
              numVolumes: 1
              mountPoints: mountPoints
              storageType: IO1
              throughput: 1
              volumeSize: 1
            enableYCQL: true
            numNodes: 5
            assignPublicIP: true
            ycqlPassword: ycqlPassword
            enableClientToNodeEncrypt: true
            awsArnString: awsArnString
            enableExposingService: NONE
            masterGFlags:
              key: masterGFlags
          index: 6
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        universePaused: true
        updateSucceeded: true
        importedState: NONE
        updateInProgress: true
        targetXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        setTxnTableWaitCountFlag: true
        ybPrevSoftwareVersion: ybPrevSoftwareVersion
        deviceInfo:
          diskIops: 7
          storageClass: storageClass
          numVolumes: 1
          mountPoints: mountPoints
          storageType: IO1
          throughput: 1
          volumeSize: 1
        updatingTask: CloudBootstrap
        nextClusterIndex: 9
        universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        errorString: errorString
        clientRootCA: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodeDetailsSet:
        - nodeName: nodeName
          nodeExporterPort: 4
          allowedActions:
          - ADD
          - ADD
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 1
          masterState: ToStart
          tserverRpcPort: 6
          ysqlServerHttpPort: 4
          yqlServerRpcPort: 1
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 7
          masterRpcPort: 2
          redisServerRpcPort: 1
          tserverHttpPort: 1
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 3
          ysqlServerRpcPort: 5
          yqlServerHttpPort: 7
        - nodeName: nodeName
          nodeExporterPort: 4
          allowedActions:
          - ADD
          - ADD
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 1
          masterState: ToStart
          tserverRpcPort: 6
          ysqlServerHttpPort: 4
          yqlServerRpcPort: 1
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 7
          masterRpcPort: 2
          redisServerRpcPort: 1
          tserverHttpPort: 1
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 3
          ysqlServerRpcPort: 5
          yqlServerHttpPort: 7
        remotePackagePath: remotePackagePath
        currentClusterType: PRIMARY
        communicationPorts:
          tserverRpcPort: 7
          nodeExporterPort: 1
          tserverHttpPort: 2
          ysqlServerHttpPort: 2
          yqlServerRpcPort: 3
          masterHttpPort: 0
          ysqlServerRpcPort: 4
          yqlServerHttpPort: 9
          masterRpcPort: 6
          redisServerHttpPort: 5
          redisServerRpcPort: 5
        cmkArn: cmkArn
        rootAndClientRootCASame: true
        previousTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        allowInsecure:
          exampleSetFlag: true
          type: boolean
        backupInProgress:
          exampleSetFlag: true
          type: boolean
        capability:
          enum:
          - READ_ONLY
          - EDITS_ALLOWED
          exampleSetFlag: true
          type: string
        clientRootCA:
          exampleSetFlag: true
          format: uuid
          type: string
        clusters:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/Cluster'
          type: array
        cmkArn:
          description: Amazon Resource Name (ARN) of the CMK
          exampleSetFlag: true
          type: string
        communicationPorts:
          $ref: '#/components/schemas/CommunicationPorts'
        currentClusterType:
          enum:
          - PRIMARY
          - ASYNC
          exampleSetFlag: true
          type: string
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        encryptionAtRestConfig:
          $ref: '#/components/schemas/EncryptionAtRestConfig'
        errorString:
          description: Error message
          exampleSetFlag: true
          type: string
        expectedUniverseVersion:
          description: Expected universe version
          exampleSetFlag: true
          format: int32
          type: integer
        extraDependencies:
          $ref: '#/components/schemas/ExtraDependencies'
        firstTry:
          description: Whether this task has been tried before
          exampleSetFlag: true
          type: boolean
        importedState:
          enum:
          - NONE
          - STARTED
          - MASTERS_ADDED
          - TSERVERS_ADDED
          - IMPORTED
          exampleSetFlag: true
          type: string
        itestS3PackagePath:
          exampleSetFlag: true
          type: string
        nextClusterIndex:
          exampleSetFlag: true
          format: int32
          type: integer
        nodeDetailsSet:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/NodeDetailsResp'
          readOnly: true
          type: array
          uniqueItems: true
        nodeExporterUser:
          description: Node exporter user
          exampleSetFlag: true
          type: string
        nodePrefix:
          exampleSetFlag: true
          type: string
        nodesResizeAvailable:
          exampleSetFlag: true
          type: boolean
        previousTaskUUID:
          description: Previous task UUID only if this task is a retry
          exampleSetFlag: true
          format: uuid
          type: string
        remotePackagePath:
          exampleSetFlag: true
          type: string
        resetAZConfig:
          exampleSetFlag: true
          type: boolean
        rootAndClientRootCASame:
          exampleSetFlag: true
          type: boolean
        rootCA:
          exampleSetFlag: true
          format: uuid
          type: string
        setTxnTableWaitCountFlag:
          exampleSetFlag: true
          type: boolean
        sourceXClusterConfigs:
          description: The source universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        targetXClusterConfigs:
          description: The target universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        universePaused:
          exampleSetFlag: true
          type: boolean
        universeUUID:
          description: Associated universe UUID
          exampleSetFlag: true
          format: uuid
          type: string
        updateInProgress:
          exampleSetFlag: true
          type: boolean
        updateSucceeded:
          exampleSetFlag: true
          type: boolean
        updatingTask:
          enum:
          - CloudBootstrap
          - CloudCleanup
          - CreateCassandraTable
          - CreateUniverse
          - ReadOnlyClusterCreate
          - ReadOnlyClusterDelete
          - CreateKubernetesUniverse
          - DestroyUniverse
          - PauseUniverse
          - ResumeUniverse
          - DestroyKubernetesUniverse
          - DeleteTable
          - BackupUniverse
          - RestoreBackup
          - MultiTableBackup
          - CreateBackup
          - EditUniverse
          - EditKubernetesUniverse
          - ExternalScript
          - KubernetesProvision
          - ImportIntoTable
          - UpgradeUniverse
          - RestartUniverse
          - SoftwareUpgrade
          - SoftwareKubernetesUpgrade
          - GFlagsUpgrade
          - GFlagsKubernetesUpgrade
          - CertsRotate
          - TlsToggle
          - VMImageUpgrade
          - SystemdUpgrade
          - CreateRootVolumes
          - ReplaceRootVolume
          - ChangeInstanceType
          - PersistResizeNode
          - PersistSystemdUpgrade
          - UpdateNodeDetails
          - UpgradeKubernetesUniverse
          - DeleteNodeFromUniverse
          - StopNodeInUniverse
          - StartNodeInUniverse
          - AddNodeToUniverse
          - RemoveNodeFromUniverse
          - ReleaseInstanceFromUniverse
          - SetUniverseKey
          - SetKubernetesUniverseKey
          - CreateKMSConfig
          - EditKMSConfig
          - DeleteKMSConfig
          - UpdateDiskSize
          - StartMasterOnNode
          - CreateXClusterConfig
          - EditXClusterConfig
          - DeleteXClusterConfig
          - SyncXClusterConfig
          - CreateSupportBundle
          - AnsibleClusterServerCtl
          - AnsibleConfigureServers
          - AnsibleDestroyServer
          - PauseServer
          - ResumeServer
          - AnsibleSetupServer
          - AnsibleCreateServer
          - PrecheckNode
          - PrecheckNodeDetached
          - AnsibleUpdateNodeInfo
          - BulkImport
          - ChangeMasterConfig
          - ChangeAdminPassword
          - CreateTable
          - DeleteNode
          - DeleteBackup
          - DeleteBackupYb
          - DeleteCustomerConfig
          - DeleteCustomerStorageConfig
          - UpdateNodeProcess
          - DeleteTableFromUniverse
          - LoadBalancerStateChange
          - ModifyBlackList
          - ManipulateDnsRecordTask
          - RemoveUniverseEntry
          - SetFlagInMemory
          - SetNodeState
          - SwamperTargetsFileUpdate
          - UniverseUpdateSucceeded
          - UpdateAndPersistGFlags
          - UpdatePlacementInfo
          - UpdateSoftwareVersion
          - WaitForDataMove
          - WaitForLeaderBlacklistCompletion
          - WaitForFollowerLag
          - WaitForLoadBalance
          - WaitForMasterLeader
          - WaitForServer
          - WaitForTServerHeartBeats
          - DeleteClusterFromUniverse
          - InstanceActions
          - WaitForServerReady
          - RunExternalScript
          - XClusterConfigSetup
          - XClusterConfigSetStatus
          - XClusterConfigModifyTables
          - XClusterConfigRename
          - XClusterConfigDelete
          - XClusterConfigSync
          - CloudAccessKeyCleanup
          - CloudAccessKeySetup
          - CloudInitializer
          - CloudProviderCleanup
          - CloudRegionCleanup
          - CloudRegionSetup
          - CloudSetup
          - BackupTable
          - BackupTableYb
          - BackupUniverseKeys
          - RestoreBackupYb
          - RestoreUniverseKeys
          - RestoreUniverseKeysYb
          - WaitForLeadersOnPreferredOnly
          - EnableEncryptionAtRest
          - DisableEncryptionAtRest
          - DestroyEncryptionAtRest
          - KubernetesCommandExecutor
          - KubernetesWaitForPod
          - KubernetesCheckNumPod
          - SetActiveUniverseKeys
          - CopyEncryptionKeyFile
          - WaitForEncryptionKeyInMemory
          - UnivSetCertificate
          - CreateAlertDefinitions
          - UniverseSetTlsParams
          - UniverseUpdateRootCert
          - ResetUniverseVersion
          - DeleteCertificate
          - SetNodeStatus
          - CheckMasterLeader
          - CheckMasters
          - CheckTServers
          - WaitForTServerHBs
          - CreatePrometheusSwamperConfig
          - PreflightNodeCheck
          - RunYsqlUpgrade
          - ResizeNode
          - UpdateMountedDisks
          exampleSetFlag: true
          type: string
        updatingTaskUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        userAZSelected:
          exampleSetFlag: true
          type: boolean
        ybPrevSoftwareVersion:
          description: Previous software version
          exampleSetFlag: true
          type: string
      required:
      - clusters
      type: object
    UniverseDetailSubset:
      description: A small subset of universe information
      example:
        universePaused: true
        updateSucceeded: true
        name: name
        updateInProgress: true
        creationDate: 1
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        creationDate:
          exampleSetFlag: true
          format: int64
          type: integer
        name:
          exampleSetFlag: true
          type: string
        universePaused:
          exampleSetFlag: true
          type: boolean
        updateInProgress:
          exampleSetFlag: true
          type: boolean
        updateSucceeded:
          exampleSetFlag: true
          type: boolean
        uuid:
          exampleSetFlag: true
          format: uuid
          type: string
      required:
      - creationDate
      - name
      - universePaused
      - updateInProgress
      - updateSucceeded
      - uuid
      type: object
    UniverseResourceDetails:
      example:
        numCores: 5.637376656633329
        volumeSizeGB: 3
        gp3FreeThroughput: 1
        numNodes: 2
        memSizeGB: 5.962133916683182
        azList:
        - azList
        - azList
        pricePerHour: 7.061401241503109
        volumeCount: 9
        gp3FreePiops: 6
        ebsPricePerHour: 0.8008281904610115
      exampleSetFlag: true
      properties:
        azList:
          description: Azs
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            type: string
          type: array
          uniqueItems: true
        ebsPricePerHour:
          description: EBS price per hour
          exampleSetFlag: true
          format: double
          type: number
        gp3FreePiops:
          description: gp3 free piops
          exampleSetFlag: true
          format: int32
          type: integer
        gp3FreeThroughput:
          description: gp3 free throughput
          exampleSetFlag: true
          format: int32
          type: integer
        memSizeGB:
          description: Memory GB
          exampleSetFlag: true
          format: double
          type: number
        numCores:
          description: Numbers of cores
          exampleSetFlag: true
          format: double
          type: number
        numNodes:
          description: Numbers of node
          exampleSetFlag: true
          format: int32
          type: integer
        pricePerHour:
          description: Price per hour
          exampleSetFlag: true
          format: double
          type: number
        volumeCount:
          description: Volume count
          exampleSetFlag: true
          format: int32
          type: integer
        volumeSizeGB:
          description: Volume in GB
          exampleSetFlag: true
          format: int32
          type: integer
      type: object
    UniverseResp:
      description: Universe-creation response
      example:
        universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        universeConfig:
          key: universeConfig
        universeDetails:
          expectedUniverseVersion: 7
          resetAZConfig: true
          sourceXClusterConfigs:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          userAZSelected: true
          nodeExporterUser: nodeExporterUser
          encryptionAtRestConfig:
            encryptionAtRestEnabled: true
            opType: ENABLE
            kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: CMK
          nodePrefix: nodePrefix
          itestS3PackagePath: itestS3PackagePath
          capability: READ_ONLY
          firstTry: true
          extraDependencies:
            installNodeExporter: true
          rootCA: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          nodesResizeAvailable: true
          updatingTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          allowInsecure: true
          backupInProgress: true
          clusters:
          - clusterType: PRIMARY
            placementInfo:
              cloudList:
              - code: code
                regionList:
                - code: code
                  azList:
                  - replicationFactor: 5
                    subnet: subnet
                    numNodesInAZ: 1
                    name: name
                    isAffinitized: true
                    uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                    secondarySubnet: secondarySubnet
                  - replicationFactor: 5
                    subnet: subnet
                    numNodesInAZ: 1
                    name: name
                    isAffinitized: true
                    uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                    secondarySubnet: secondarySubnet
                  name: name
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                - code: code
                  azList:
                  - replicationFactor: 5
                    subnet: subnet
                    numNodesInAZ: 1
                    name: name
                    isAffinitized: true
                    uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                    secondarySubnet: secondarySubnet
                  - replicationFactor: 5
                    subnet: subnet
                    numNodesInAZ: 1
                    name: name
                    isAffinitized: true
                    uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                    secondarySubnet: secondarySubnet
                  name: name
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                regionList:
                - code: code
                  azList:
                  - replicationFactor: 5
                    subnet: subnet
                    numNodesInAZ: 1
                    name: name
                    isAffinitized: true
                    uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                    secondarySubnet: secondarySubnet
                  - replicationFactor: 5
                    subnet: subnet
                    numNodesInAZ: 1
                    name: name
                    isAffinitized: true
                    uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                    secondarySubnet: secondarySubnet
                  name: name
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                - code: code
                  azList:
                  - replicationFactor: 5
                    subnet: subnet
                    numNodesInAZ: 1
                    name: name
                    isAffinitized: true
                    uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                    secondarySubnet: secondarySubnet
                  - replicationFactor: 5
                    subnet: subnet
                    numNodesInAZ: 1
                    name: name
                    isAffinitized: true
                    uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                    secondarySubnet: secondarySubnet
                  name: name
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            regions:
            - code: us-west-2
              ybPrebuiltAmi: true
              latitude: 37.22
              active: true
              vnetName: vnetName
              zones:
              - subnet: subnet id
                code: AWS
                name: south-east-1
                active: true
                kubeconfigPath: kubeconfigPath
                config:
                  key: config
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                secondarySubnet: secondary subnet id
              - subnet: subnet id
                code: AWS
                name: south-east-1
                active: true
                kubeconfigPath: kubeconfigPath
                config:
                  key: config
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                secondarySubnet: secondary subnet id
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              securityGroupId: securityGroupId
              ybImage: TODO
              name: US West (Oregon)
              config:
                key: config
              architecture: x86_64
              longitude: -120.01
            - code: us-west-2
              ybPrebuiltAmi: true
              latitude: 37.22
              active: true
              vnetName: vnetName
              zones:
              - subnet: subnet id
                code: AWS
                name: south-east-1
                active: true
                kubeconfigPath: kubeconfigPath
                config:
                  key: config
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                secondarySubnet: secondary subnet id
              - subnet: subnet id
                code: AWS
                name: south-east-1
                active: true
                kubeconfigPath: kubeconfigPath
                config:
                  key: config
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                secondarySubnet: secondary subnet id
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              securityGroupId: securityGroupId
              ybImage: TODO
              name: US West (Oregon)
              config:
                key: config
              architecture: x86_64
              longitude: -120.01
            userIntent:
              replicationFactor: 2
              useSystemd: true
              enableNodeToNodeEncrypt: true
              preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              enableYCQLAuth: true
              instanceTags:
                key: instanceTags
              providerType: unknown
              tserverGFlags:
                key: tserverGFlags
              ysqlPassword: ysqlPassword
              enableYEDIS: true
              enableVolumeEncryption: true
              provider: provider
              accessKeyCode: accessKeyCode
              enableIPV6: true
              enableYSQLAuth: true
              universeName: universeName
              assignStaticPublicIP: true
              enableYSQL: true
              useTimeSync: true
              regionList:
              - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              useHostname: true
              instanceType: instanceType
              ybSoftwareVersion: ybSoftwareVersion
              deviceInfo:
                diskIops: 7
                storageClass: storageClass
                numVolumes: 1
                mountPoints: mountPoints
                storageType: IO1
                throughput: 1
                volumeSize: 1
              enableYCQL: true
              numNodes: 5
              assignPublicIP: true
              ycqlPassword: ycqlPassword
              enableClientToNodeEncrypt: true
              awsArnString: awsArnString
              enableExposingService: NONE
              masterGFlags:
                key: masterGFlags
            index: 6
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - clusterType: PRIMARY
            placementInfo:
              cloudList:
              - code: code
                regionList:
                - code: code
                  azList:
                  - replicationFactor: 5
                    subnet: subnet
                    numNodesInAZ: 1
                    name: name
                    isAffinitized: true
                    uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                    secondarySubnet: secondarySubnet
                  - replicationFactor: 5
                    subnet: subnet
                    numNodesInAZ: 1
                    name: name
                    isAffinitized: true
                    uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                    secondarySubnet: secondarySubnet
                  name: name
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                - code: code
                  azList:
                  - replicationFactor: 5
                    subnet: subnet
                    numNodesInAZ: 1
                    name: name
                    isAffinitized: true
                    uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                    secondarySubnet: secondarySubnet
                  - replicationFactor: 5
                    subnet: subnet
                    numNodesInAZ: 1
                    name: name
                    isAffinitized: true
                    uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                    secondarySubnet: secondarySubnet
                  name: name
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                regionList:
                - code: code
                  azList:
                  - replicationFactor: 5
                    subnet: subnet
                    numNodesInAZ: 1
                    name: name
                    isAffinitized: true
                    uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                    secondarySubnet: secondarySubnet
                  - replicationFactor: 5
                    subnet: subnet
                    numNodesInAZ: 1
                    name: name
                    isAffinitized: true
                    uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                    secondarySubnet: secondarySubnet
                  name: name
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                - code: code
                  azList:
                  - replicationFactor: 5
                    subnet: subnet
                    numNodesInAZ: 1
                    name: name
                    isAffinitized: true
                    uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                    secondarySubnet: secondarySubnet
                  - replicationFactor: 5
                    subnet: subnet
                    numNodesInAZ: 1
                    name: name
                    isAffinitized: true
                    uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                    secondarySubnet: secondarySubnet
                  name: name
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            regions:
            - code: us-west-2
              ybPrebuiltAmi: true
              latitude: 37.22
              active: true
              vnetName: vnetName
              zones:
              - subnet: subnet id
                code: AWS
                name: south-east-1
                active: true
                kubeconfigPath: kubeconfigPath
                config:
                  key: config
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                secondarySubnet: secondary subnet id
              - subnet: subnet id
                code: AWS
                name: south-east-1
                active: true
                kubeconfigPath: kubeconfigPath
                config:
                  key: config
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                secondarySubnet: secondary subnet id
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              securityGroupId: securityGroupId
              ybImage: TODO
              name: US West (Oregon)
              config:
                key: config
              architecture: x86_64
              longitude: -120.01
            - code: us-west-2
              ybPrebuiltAmi: true
              latitude: 37.22
              active: true
              vnetName: vnetName
              zones:
              - subnet: subnet id
                code: AWS
                name: south-east-1
                active: true
                kubeconfigPath: kubeconfigPath
                config:
                  key: config
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                secondarySubnet: secondary subnet id
              - subnet: subnet id
                code: AWS
                name: south-east-1
                active: true
                kubeconfigPath: kubeconfigPath
                config:
                  key: config
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                secondarySubnet: secondary subnet id
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              securityGroupId: securityGroupId
              ybImage: TODO
              name: US West (Oregon)
              config:
                key: config
              architecture: x86_64
              longitude: -120.01
            userIntent:
              replicationFactor: 2
              useSystemd: true
              enableNodeToNodeEncrypt: true
              preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              enableYCQLAuth: true
              instanceTags:
                key: instanceTags
              providerType: unknown
              tserverGFlags:
                key: tserverGFlags
              ysqlPassword: ysqlPassword
              enableYEDIS: true
              enableVolumeEncryption: true
              provider: provider
              accessKeyCode: accessKeyCode
              enableIPV6: true
              enableYSQLAuth: true
              universeName: universeName
              assignStaticPublicIP: true
              enableYSQL: true
              useTimeSync: true
              regionList:
              - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              useHostname: true
              instanceType: instanceType
              ybSoftwareVersion: ybSoftwareVersion
              deviceInfo:
                diskIops: 7
                storageClass: storageClass
                numVolumes: 1
                mountPoints: mountPoints
                storageType: IO1
                throughput: 1
                volumeSize: 1
              enableYCQL: true
              numNodes: 5
              assignPublicIP: true
              ycqlPassword: ycqlPassword
              enableClientToNodeEncrypt: true
              awsArnString: awsArnString
              enableExposingService: NONE
              masterGFlags:
                key: masterGFlags
            index: 6
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          universePaused: true
          updateSucceeded: true
          importedState: NONE
          updateInProgress: true
          targetXClusterConfigs:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          setTxnTableWaitCountFlag: true
          ybPrevSoftwareVersion: ybPrevSoftwareVersion
          deviceInfo:
            diskIops: 7
            storageClass: storageClass
            numVolumes: 1
            mountPoints: mountPoints
            storageType: IO1
            throughput: 1
            volumeSize: 1
          updatingTask: CloudBootstrap
          nextClusterIndex: 9
          universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          errorString: errorString
          clientRootCA: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          nodeDetailsSet:
          - nodeName: nodeName
            nodeExporterPort: 4
            allowedActions:
            - ADD
            - ADD
            placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            machineImage: machineImage
            nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            redisServerHttpPort: 1
            masterState: ToStart
            tserverRpcPort: 6
            ysqlServerHttpPort: 4
            yqlServerRpcPort: 1
            isMaster: true
            cloudInfo:
              mount_roots: mount_roots
              public_ip: public_ip
              secondary_subnet_id: secondary_subnet_id
              private_dns: private_dns
              useTimeSync: true
              secondary_private_ip: secondary_private_ip
              private_ip: private_ip
              cloud: cloud
              assignPublicIP: true
              az: az
              subnet_id: subnet_id
              public_dns: public_dns
              region: region
              instance_type: instance_type
            cronsActive: true
            state: Provisioned
            nodeIdx: 7
            masterRpcPort: 2
            redisServerRpcPort: 1
            tserverHttpPort: 1
            disksAreMountedByUUID: true
            isRedisServer: true
            isTserver: true
            nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isYsqlServer: true
            isYqlServer: true
            azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            masterHttpPort: 3
            ysqlServerRpcPort: 5
            yqlServerHttpPort: 7
          - nodeName: nodeName
            nodeExporterPort: 4
            allowedActions:
            - ADD
            - ADD
            placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            machineImage: machineImage
            nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            redisServerHttpPort: 1
            masterState: ToStart
            tserverRpcPort: 6
            ysqlServerHttpPort: 4
            yqlServerRpcPort: 1
            isMaster: true
            cloudInfo:
              mount_roots: mount_roots
              public_ip: public_ip
              secondary_subnet_id: secondary_subnet_id
              private_dns: private_dns
              useTimeSync: true
              secondary_private_ip: secondary_private_ip
              private_ip: private_ip
              cloud: cloud
              assignPublicIP: true
              az: az
              subnet_id: subnet_id
              public_dns: public_dns
              region: region
              instance_type: instance_type
            cronsActive: true
            state: Provisioned
            nodeIdx: 7
            masterRpcPort: 2
            redisServerRpcPort: 1
            tserverHttpPort: 1
            disksAreMountedByUUID: true
            isRedisServer: true
            isTserver: true
            nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isYsqlServer: true
            isYqlServer: true
            azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            masterHttpPort: 3
            ysqlServerRpcPort: 5
            yqlServerHttpPort: 7
          remotePackagePath: remotePackagePath
          currentClusterType: PRIMARY
          communicationPorts:
            tserverRpcPort: 7
            nodeExporterPort: 1
            tserverHttpPort: 2
            ysqlServerHttpPort: 2
            yqlServerRpcPort: 3
            masterHttpPort: 0
            ysqlServerRpcPort: 4
            yqlServerHttpPort: 9
            masterRpcPort: 6
            redisServerHttpPort: 5
            redisServerRpcPort: 5
          cmkArn: cmkArn
          rootAndClientRootCASame: true
          previousTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        dnsName: dnsName
        pricePerHour: 0.8008281904610115
        resources:
          numCores: 5.637376656633329
          volumeSizeGB: 3
          gp3FreeThroughput: 1
          numNodes: 2
          memSizeGB: 5.962133916683182
          azList:
          - azList
          - azList
          pricePerHour: 7.061401241503109
          volumeCount: 9
          gp3FreePiops: 6
          ebsPricePerHour: 0.8008281904610115
        creationDate: creationDate
        sampleAppCommandTxt: sampleAppCommandTxt
        taskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        version: 9
      exampleSetFlag: true
      properties:
        creationDate:
          description: Universe creation date
          exampleSetFlag: true
          type: string
        dnsName:
          description: DNS name
          exampleSetFlag: true
          type: string
        name:
          description: Universe name
          exampleSetFlag: true
          type: string
        pricePerHour:
          description: Price
          exampleSetFlag: true
          format: double
          type: number
        resources:
          $ref: '#/components/schemas/UniverseResourceDetails'
        sampleAppCommandTxt:
          description: Sample command
          exampleSetFlag: true
          type: string
        taskUUID:
          description: Task UUID
          exampleSetFlag: true
          format: uuid
          type: string
        universeConfig:
          additionalProperties:
            exampleSetFlag: true
            type: string
          description: Universe configuration
          exampleSetFlag: true
          type: object
        universeDetails:
          $ref: '#/components/schemas/UniverseDefinitionTaskParamsResp'
        universeUUID:
          description: Universe UUID
          exampleSetFlag: true
          format: uuid
          type: string
        version:
          description: Universe version
          exampleSetFlag: true
          format: int32
          type: integer
      type: object
    UpgradeTaskParams:
      example:
        expectedUniverseVersion: 0
        resetAZConfig: true
        sourceXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userAZSelected: true
        nodeExporterUser: nodeExporterUser
        encryptionAtRestConfig:
          encryptionAtRestEnabled: true
          opType: ENABLE
          kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: CMK
        upgradeOption: Rolling
        nodePrefix: nodePrefix
        itestS3PackagePath: itestS3PackagePath
        capability: READ_ONLY
        firstTry: true
        extraDependencies:
          installNodeExporter: true
        rootCA: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodesResizeAvailable: true
        updatingTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        allowInsecure: true
        backupInProgress: true
        clusters:
        - clusterType: PRIMARY
          placementInfo:
            cloudList:
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          regions:
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          userIntent:
            replicationFactor: 2
            useSystemd: true
            enableNodeToNodeEncrypt: true
            preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            enableYCQLAuth: true
            instanceTags:
              key: instanceTags
            providerType: unknown
            tserverGFlags:
              key: tserverGFlags
            ysqlPassword: ysqlPassword
            enableYEDIS: true
            enableVolumeEncryption: true
            provider: provider
            accessKeyCode: accessKeyCode
            enableIPV6: true
            enableYSQLAuth: true
            universeName: universeName
            assignStaticPublicIP: true
            enableYSQL: true
            useTimeSync: true
            regionList:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            useHostname: true
            instanceType: instanceType
            ybSoftwareVersion: ybSoftwareVersion
            deviceInfo:
              diskIops: 7
              storageClass: storageClass
              numVolumes: 1
              mountPoints: mountPoints
              storageType: IO1
              throughput: 1
              volumeSize: 1
            enableYCQL: true
            numNodes: 5
            assignPublicIP: true
            ycqlPassword: ycqlPassword
            enableClientToNodeEncrypt: true
            awsArnString: awsArnString
            enableExposingService: NONE
            masterGFlags:
              key: masterGFlags
          index: 6
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - clusterType: PRIMARY
          placementInfo:
            cloudList:
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          regions:
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          userIntent:
            replicationFactor: 2
            useSystemd: true
            enableNodeToNodeEncrypt: true
            preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            enableYCQLAuth: true
            instanceTags:
              key: instanceTags
            providerType: unknown
            tserverGFlags:
              key: tserverGFlags
            ysqlPassword: ysqlPassword
            enableYEDIS: true
            enableVolumeEncryption: true
            provider: provider
            accessKeyCode: accessKeyCode
            enableIPV6: true
            enableYSQLAuth: true
            universeName: universeName
            assignStaticPublicIP: true
            enableYSQL: true
            useTimeSync: true
            regionList:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            useHostname: true
            instanceType: instanceType
            ybSoftwareVersion: ybSoftwareVersion
            deviceInfo:
              diskIops: 7
              storageClass: storageClass
              numVolumes: 1
              mountPoints: mountPoints
              storageType: IO1
              throughput: 1
              volumeSize: 1
            enableYCQL: true
            numNodes: 5
            assignPublicIP: true
            ycqlPassword: ycqlPassword
            enableClientToNodeEncrypt: true
            awsArnString: awsArnString
            enableExposingService: NONE
            masterGFlags:
              key: masterGFlags
          index: 6
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sleepAfterTServerRestartMillis: 5
        universePaused: true
        updateSucceeded: true
        importedState: NONE
        updateInProgress: true
        targetXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        setTxnTableWaitCountFlag: true
        ybPrevSoftwareVersion: ybPrevSoftwareVersion
        deviceInfo:
          diskIops: 7
          storageClass: storageClass
          numVolumes: 1
          mountPoints: mountPoints
          storageType: IO1
          throughput: 1
          volumeSize: 1
        updatingTask: CloudBootstrap
        kubernetesUpgradeSupported: true
        nextClusterIndex: 6
        universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        errorString: errorString
        clientRootCA: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodeDetailsSet:
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        remotePackagePath: remotePackagePath
        currentClusterType: PRIMARY
        communicationPorts:
          tserverRpcPort: 7
          nodeExporterPort: 1
          tserverHttpPort: 2
          ysqlServerHttpPort: 2
          yqlServerRpcPort: 3
          masterHttpPort: 0
          ysqlServerRpcPort: 4
          yqlServerHttpPort: 9
          masterRpcPort: 6
          redisServerHttpPort: 5
          redisServerRpcPort: 5
        cmkArn: cmkArn
        rootAndClientRootCASame: true
        sleepAfterMasterRestartMillis: 1
        previousTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        allowInsecure:
          exampleSetFlag: true
          type: boolean
        backupInProgress:
          exampleSetFlag: true
          type: boolean
        capability:
          enum:
          - READ_ONLY
          - EDITS_ALLOWED
          exampleSetFlag: true
          type: string
        clientRootCA:
          exampleSetFlag: true
          format: uuid
          type: string
        clusters:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/Cluster'
          type: array
        cmkArn:
          description: Amazon Resource Name (ARN) of the CMK
          exampleSetFlag: true
          type: string
        communicationPorts:
          $ref: '#/components/schemas/CommunicationPorts'
        currentClusterType:
          enum:
          - PRIMARY
          - ASYNC
          exampleSetFlag: true
          type: string
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        encryptionAtRestConfig:
          $ref: '#/components/schemas/EncryptionAtRestConfig'
        errorString:
          description: Error message
          exampleSetFlag: true
          type: string
        expectedUniverseVersion:
          description: Expected universe version
          exampleSetFlag: true
          format: int32
          type: integer
        extraDependencies:
          $ref: '#/components/schemas/ExtraDependencies'
        firstTry:
          description: Whether this task has been tried before
          exampleSetFlag: true
          type: boolean
        importedState:
          enum:
          - NONE
          - STARTED
          - MASTERS_ADDED
          - TSERVERS_ADDED
          - IMPORTED
          exampleSetFlag: true
          type: string
        itestS3PackagePath:
          exampleSetFlag: true
          type: string
        kubernetesUpgradeSupported:
          exampleSetFlag: true
          type: boolean
        nextClusterIndex:
          exampleSetFlag: true
          format: int32
          type: integer
        nodeDetailsSet:
          description: Node details
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/NodeDetails'
          type: array
          uniqueItems: true
        nodeExporterUser:
          description: Node exporter user
          exampleSetFlag: true
          type: string
        nodePrefix:
          exampleSetFlag: true
          type: string
        nodesResizeAvailable:
          exampleSetFlag: true
          type: boolean
        previousTaskUUID:
          description: Previous task UUID only if this task is a retry
          exampleSetFlag: true
          format: uuid
          type: string
        remotePackagePath:
          exampleSetFlag: true
          type: string
        resetAZConfig:
          exampleSetFlag: true
          type: boolean
        rootAndClientRootCASame:
          exampleSetFlag: true
          type: boolean
        rootCA:
          exampleSetFlag: true
          format: uuid
          type: string
        setTxnTableWaitCountFlag:
          exampleSetFlag: true
          type: boolean
        sleepAfterMasterRestartMillis:
          exampleSetFlag: true
          format: int32
          type: integer
        sleepAfterTServerRestartMillis:
          exampleSetFlag: true
          format: int32
          type: integer
        sourceXClusterConfigs:
          description: The source universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        targetXClusterConfigs:
          description: The target universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        universePaused:
          exampleSetFlag: true
          type: boolean
        universeUUID:
          description: Associated universe UUID
          exampleSetFlag: true
          format: uuid
          type: string
        updateInProgress:
          exampleSetFlag: true
          type: boolean
        updateSucceeded:
          exampleSetFlag: true
          type: boolean
        updatingTask:
          enum:
          - CloudBootstrap
          - CloudCleanup
          - CreateCassandraTable
          - CreateUniverse
          - ReadOnlyClusterCreate
          - ReadOnlyClusterDelete
          - CreateKubernetesUniverse
          - DestroyUniverse
          - PauseUniverse
          - ResumeUniverse
          - DestroyKubernetesUniverse
          - DeleteTable
          - BackupUniverse
          - RestoreBackup
          - MultiTableBackup
          - CreateBackup
          - EditUniverse
          - EditKubernetesUniverse
          - ExternalScript
          - KubernetesProvision
          - ImportIntoTable
          - UpgradeUniverse
          - RestartUniverse
          - SoftwareUpgrade
          - SoftwareKubernetesUpgrade
          - GFlagsUpgrade
          - GFlagsKubernetesUpgrade
          - CertsRotate
          - TlsToggle
          - VMImageUpgrade
          - SystemdUpgrade
          - CreateRootVolumes
          - ReplaceRootVolume
          - ChangeInstanceType
          - PersistResizeNode
          - PersistSystemdUpgrade
          - UpdateNodeDetails
          - UpgradeKubernetesUniverse
          - DeleteNodeFromUniverse
          - StopNodeInUniverse
          - StartNodeInUniverse
          - AddNodeToUniverse
          - RemoveNodeFromUniverse
          - ReleaseInstanceFromUniverse
          - SetUniverseKey
          - SetKubernetesUniverseKey
          - CreateKMSConfig
          - EditKMSConfig
          - DeleteKMSConfig
          - UpdateDiskSize
          - StartMasterOnNode
          - CreateXClusterConfig
          - EditXClusterConfig
          - DeleteXClusterConfig
          - SyncXClusterConfig
          - CreateSupportBundle
          - AnsibleClusterServerCtl
          - AnsibleConfigureServers
          - AnsibleDestroyServer
          - PauseServer
          - ResumeServer
          - AnsibleSetupServer
          - AnsibleCreateServer
          - PrecheckNode
          - PrecheckNodeDetached
          - AnsibleUpdateNodeInfo
          - BulkImport
          - ChangeMasterConfig
          - ChangeAdminPassword
          - CreateTable
          - DeleteNode
          - DeleteBackup
          - DeleteBackupYb
          - DeleteCustomerConfig
          - DeleteCustomerStorageConfig
          - UpdateNodeProcess
          - DeleteTableFromUniverse
          - LoadBalancerStateChange
          - ModifyBlackList
          - ManipulateDnsRecordTask
          - RemoveUniverseEntry
          - SetFlagInMemory
          - SetNodeState
          - SwamperTargetsFileUpdate
          - UniverseUpdateSucceeded
          - UpdateAndPersistGFlags
          - UpdatePlacementInfo
          - UpdateSoftwareVersion
          - WaitForDataMove
          - WaitForLeaderBlacklistCompletion
          - WaitForFollowerLag
          - WaitForLoadBalance
          - WaitForMasterLeader
          - WaitForServer
          - WaitForTServerHeartBeats
          - DeleteClusterFromUniverse
          - InstanceActions
          - WaitForServerReady
          - RunExternalScript
          - XClusterConfigSetup
          - XClusterConfigSetStatus
          - XClusterConfigModifyTables
          - XClusterConfigRename
          - XClusterConfigDelete
          - XClusterConfigSync
          - CloudAccessKeyCleanup
          - CloudAccessKeySetup
          - CloudInitializer
          - CloudProviderCleanup
          - CloudRegionCleanup
          - CloudRegionSetup
          - CloudSetup
          - BackupTable
          - BackupTableYb
          - BackupUniverseKeys
          - RestoreBackupYb
          - RestoreUniverseKeys
          - RestoreUniverseKeysYb
          - WaitForLeadersOnPreferredOnly
          - EnableEncryptionAtRest
          - DisableEncryptionAtRest
          - DestroyEncryptionAtRest
          - KubernetesCommandExecutor
          - KubernetesWaitForPod
          - KubernetesCheckNumPod
          - SetActiveUniverseKeys
          - CopyEncryptionKeyFile
          - WaitForEncryptionKeyInMemory
          - UnivSetCertificate
          - CreateAlertDefinitions
          - UniverseSetTlsParams
          - UniverseUpdateRootCert
          - ResetUniverseVersion
          - DeleteCertificate
          - SetNodeStatus
          - CheckMasterLeader
          - CheckMasters
          - CheckTServers
          - WaitForTServerHBs
          - CreatePrometheusSwamperConfig
          - PreflightNodeCheck
          - RunYsqlUpgrade
          - ResizeNode
          - UpdateMountedDisks
          exampleSetFlag: true
          type: string
        updatingTaskUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        upgradeOption:
          enum:
          - Rolling
          - Non-Rolling
          - Non-Restart
          exampleSetFlag: true
          type: string
        userAZSelected:
          exampleSetFlag: true
          type: boolean
        ybPrevSoftwareVersion:
          description: Previous software version
          exampleSetFlag: true
          type: string
      required:
      - clusters
      - kubernetesUpgradeSupported
      - sleepAfterMasterRestartMillis
      - sleepAfterTServerRestartMillis
      - upgradeOption
      type: object
    UserIntent:
      example:
        replicationFactor: 2
        useSystemd: true
        enableNodeToNodeEncrypt: true
        preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        enableYCQLAuth: true
        instanceTags:
          key: instanceTags
        providerType: unknown
        tserverGFlags:
          key: tserverGFlags
        ysqlPassword: ysqlPassword
        enableYEDIS: true
        enableVolumeEncryption: true
        provider: provider
        accessKeyCode: accessKeyCode
        enableIPV6: true
        enableYSQLAuth: true
        universeName: universeName
        assignStaticPublicIP: true
        enableYSQL: true
        useTimeSync: true
        regionList:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        useHostname: true
        instanceType: instanceType
        ybSoftwareVersion: ybSoftwareVersion
        deviceInfo:
          diskIops: 7
          storageClass: storageClass
          numVolumes: 1
          mountPoints: mountPoints
          storageType: IO1
          throughput: 1
          volumeSize: 1
        enableYCQL: true
        numNodes: 5
        assignPublicIP: true
        ycqlPassword: ycqlPassword
        enableClientToNodeEncrypt: true
        awsArnString: awsArnString
        enableExposingService: NONE
        masterGFlags:
          key: masterGFlags
      exampleSetFlag: true
      properties:
        accessKeyCode:
          exampleSetFlag: true
          type: string
        assignPublicIP:
          exampleSetFlag: true
          type: boolean
        assignStaticPublicIP:
          description: Whether to assign static public IP
          exampleSetFlag: true
          type: boolean
        awsArnString:
          exampleSetFlag: true
          type: string
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        enableClientToNodeEncrypt:
          exampleSetFlag: true
          type: boolean
        enableExposingService:
          enum:
          - NONE
          - EXPOSED
          - UNEXPOSED
          exampleSetFlag: true
          type: string
        enableIPV6:
          exampleSetFlag: true
          type: boolean
        enableNodeToNodeEncrypt:
          exampleSetFlag: true
          type: boolean
        enableVolumeEncryption:
          exampleSetFlag: true
          type: boolean
        enableYCQL:
          exampleSetFlag: true
          type: boolean
        enableYCQLAuth:
          exampleSetFlag: true
          type: boolean
        enableYEDIS:
          exampleSetFlag: true
          type: boolean
        enableYSQL:
          exampleSetFlag: true
          type: boolean
        enableYSQLAuth:
          exampleSetFlag: true
          type: boolean
        instanceTags:
          additionalProperties:
            exampleSetFlag: true
            type: string
          exampleSetFlag: true
          type: object
        instanceType:
          exampleSetFlag: true
          type: string
        masterGFlags:
          additionalProperties:
            exampleSetFlag: true
            type: string
          exampleSetFlag: true
          type: object
        numNodes:
          exampleSetFlag: true
          format: int32
          type: integer
        preferredRegion:
          exampleSetFlag: true
          format: uuid
          type: string
        provider:
          exampleSetFlag: true
          type: string
        providerType:
          enum:
          - unknown
          - aws
          - gcp
          - azu
          - docker
          - onprem
          - kubernetes
          - local
          - other
          exampleSetFlag: true
          type: string
        regionList:
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          type: array
        replicationFactor:
          exampleSetFlag: true
          format: int32
          type: integer
        tserverGFlags:
          additionalProperties:
            exampleSetFlag: true
            type: string
          exampleSetFlag: true
          type: object
        universeName:
          exampleSetFlag: true
          type: string
        useHostname:
          exampleSetFlag: true
          type: boolean
        useSystemd:
          exampleSetFlag: true
          type: boolean
        useTimeSync:
          exampleSetFlag: true
          type: boolean
        ybSoftwareVersion:
          exampleSetFlag: true
          type: string
        ycqlPassword:
          exampleSetFlag: true
          type: string
        ysqlPassword:
          exampleSetFlag: true
          type: string
      type: object
    UserProfileData:
      description: User profile data. The API and UI use this to validate form data.
      example:
        password: Test@1234
        role: Admin
        timezone: America/Toronto
        confirmPassword: Test@1234
      exampleSetFlag: true
      properties:
        confirmPassword:
          description: Password confirmation
          example: Test@1234
          exampleSetFlag: true
          type: string
        password:
          description: Password
          example: Test@1234
          exampleSetFlag: true
          type: string
        role:
          description: User role
          enum:
          - Admin
          - ReadOnly
          - SuperAdmin
          - BackupAdmin
          example: Admin
          exampleSetFlag: true
          type: string
        timezone:
          description: User timezone
          example: America/Toronto
          exampleSetFlag: true
          type: string
      required:
      - role
      type: object
    UserRegistrationData:
      description: User registration data. The API and UI use this to validate form
        data.
      example:
        features:
          key: "{}"
        password: Test@1234
        role: Admin
        timezone: America/Toronto
        confirmPassword: Test@1234
        email: test@example.com
      exampleSetFlag: true
      properties:
        confirmPassword:
          description: Password confirmation
          example: Test@1234
          exampleSetFlag: true
          type: string
        email:
          description: Email address
          example: test@example.com
          exampleSetFlag: true
          type: string
        features:
          additionalProperties:
            exampleSetFlag: true
            properties: {}
            type: object
          description: User features
          exampleSetFlag: true
          type: object
        password:
          description: Password
          example: Test@1234
          exampleSetFlag: true
          type: string
        role:
          description: User role
          enum:
          - Admin
          - ReadOnly
          - SuperAdmin
          - BackupAdmin
          example: Admin
          exampleSetFlag: true
          type: string
        timezone:
          description: User timezone
          example: America/Toronto
          exampleSetFlag: true
          type: string
      required:
      - email
      - role
      type: object
    UserWithFeatures:
      description: "A user with set of features, associated with a customer"
      example:
        ldapSpecifiedRole: true
        customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        role: Admin
        authTokenIssueDate: 2000-01-23T04:56:07.000+00:00
        isPrimary: true
        timezone: timezone
        userType: local
        creationDate: 2000-01-23T04:56:07.000+00:00
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        email: username1@example.com
      exampleSetFlag: true
      properties:
        authTokenIssueDate:
          description: API token creation date
          exampleSetFlag: false
          format: date-time
          readOnly: true
          type: string
        creationDate:
          description: User creation date
          exampleSetFlag: false
          format: date-time
          readOnly: true
          type: string
        customerUUID:
          description: Customer UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
        email:
          description: User email address
          example: username1@example.com
          exampleSetFlag: true
          type: string
        isPrimary:
          description: True if the user is the primary user
          exampleSetFlag: true
          type: boolean
        ldapSpecifiedRole:
          description: LDAP Specified Role
          exampleSetFlag: true
          type: boolean
        role:
          description: User role
          enum:
          - Admin
          - ReadOnly
          - SuperAdmin
          - BackupAdmin
          exampleSetFlag: true
          type: string
        timezone:
          description: User timezone
          exampleSetFlag: true
          type: string
        userType:
          description: User Type
          enum:
          - local
          - ldap
          exampleSetFlag: true
          type: string
        uuid:
          description: User UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
      required:
      - email
      type: object
    Users:
      description: A user associated with a customer
      example:
        ldapSpecifiedRole: true
        customerUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        role: Admin
        authTokenIssueDate: 2000-01-23T04:56:07.000+00:00
        isPrimary: true
        timezone: timezone
        userType: local
        creationDate: 2000-01-23T04:56:07.000+00:00
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        email: username1@example.com
      exampleSetFlag: true
      properties:
        authTokenIssueDate:
          description: API token creation date
          exampleSetFlag: false
          format: date-time
          readOnly: true
          type: string
        creationDate:
          description: User creation date
          exampleSetFlag: false
          format: date-time
          readOnly: true
          type: string
        customerUUID:
          description: Customer UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
        email:
          description: User email address
          example: username1@example.com
          exampleSetFlag: true
          type: string
        isPrimary:
          description: True if the user is the primary user
          exampleSetFlag: true
          type: boolean
        ldapSpecifiedRole:
          description: LDAP Specified Role
          exampleSetFlag: true
          type: boolean
        role:
          description: User role
          enum:
          - Admin
          - ReadOnly
          - SuperAdmin
          - BackupAdmin
          exampleSetFlag: true
          type: string
        timezone:
          description: User timezone
          exampleSetFlag: true
          type: string
        userType:
          description: User Type
          enum:
          - local
          - ldap
          exampleSetFlag: true
          type: string
        uuid:
          description: User UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
      required:
      - email
      type: object
    VMImageUpgradeParams:
      example:
        expectedUniverseVersion: 0
        resetAZConfig: true
        sourceXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userAZSelected: true
        nodeExporterUser: nodeExporterUser
        encryptionAtRestConfig:
          encryptionAtRestEnabled: true
          opType: ENABLE
          kmsConfigUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: CMK
        upgradeOption: Rolling
        nodePrefix: nodePrefix
        itestS3PackagePath: itestS3PackagePath
        capability: READ_ONLY
        firstTry: true
        extraDependencies:
          installNodeExporter: true
        machineImages:
          key: machineImages
        rootCA: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodesResizeAvailable: true
        forceVMImageUpgrade: true
        updatingTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        allowInsecure: true
        backupInProgress: true
        clusters:
        - clusterType: PRIMARY
          placementInfo:
            cloudList:
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          regions:
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          userIntent:
            replicationFactor: 2
            useSystemd: true
            enableNodeToNodeEncrypt: true
            preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            enableYCQLAuth: true
            instanceTags:
              key: instanceTags
            providerType: unknown
            tserverGFlags:
              key: tserverGFlags
            ysqlPassword: ysqlPassword
            enableYEDIS: true
            enableVolumeEncryption: true
            provider: provider
            accessKeyCode: accessKeyCode
            enableIPV6: true
            enableYSQLAuth: true
            universeName: universeName
            assignStaticPublicIP: true
            enableYSQL: true
            useTimeSync: true
            regionList:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            useHostname: true
            instanceType: instanceType
            ybSoftwareVersion: ybSoftwareVersion
            deviceInfo:
              diskIops: 7
              storageClass: storageClass
              numVolumes: 1
              mountPoints: mountPoints
              storageType: IO1
              throughput: 1
              volumeSize: 1
            enableYCQL: true
            numNodes: 5
            assignPublicIP: true
            ycqlPassword: ycqlPassword
            enableClientToNodeEncrypt: true
            awsArnString: awsArnString
            enableExposingService: NONE
            masterGFlags:
              key: masterGFlags
          index: 6
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - clusterType: PRIMARY
          placementInfo:
            cloudList:
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - code: code
              regionList:
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              - code: code
                azList:
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                - replicationFactor: 5
                  subnet: subnet
                  numNodesInAZ: 1
                  name: name
                  isAffinitized: true
                  uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                  secondarySubnet: secondarySubnet
                name: name
                uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              defaultRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          regions:
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          - code: us-west-2
            ybPrebuiltAmi: true
            latitude: 37.22
            active: true
            vnetName: vnetName
            zones:
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            - subnet: subnet id
              code: AWS
              name: south-east-1
              active: true
              kubeconfigPath: kubeconfigPath
              config:
                key: config
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              secondarySubnet: secondary subnet id
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            securityGroupId: securityGroupId
            ybImage: TODO
            name: US West (Oregon)
            config:
              key: config
            architecture: x86_64
            longitude: -120.01
          userIntent:
            replicationFactor: 2
            useSystemd: true
            enableNodeToNodeEncrypt: true
            preferredRegion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            enableYCQLAuth: true
            instanceTags:
              key: instanceTags
            providerType: unknown
            tserverGFlags:
              key: tserverGFlags
            ysqlPassword: ysqlPassword
            enableYEDIS: true
            enableVolumeEncryption: true
            provider: provider
            accessKeyCode: accessKeyCode
            enableIPV6: true
            enableYSQLAuth: true
            universeName: universeName
            assignStaticPublicIP: true
            enableYSQL: true
            useTimeSync: true
            regionList:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            useHostname: true
            instanceType: instanceType
            ybSoftwareVersion: ybSoftwareVersion
            deviceInfo:
              diskIops: 7
              storageClass: storageClass
              numVolumes: 1
              mountPoints: mountPoints
              storageType: IO1
              throughput: 1
              volumeSize: 1
            enableYCQL: true
            numNodes: 5
            assignPublicIP: true
            ycqlPassword: ycqlPassword
            enableClientToNodeEncrypt: true
            awsArnString: awsArnString
            enableExposingService: NONE
            masterGFlags:
              key: masterGFlags
          index: 6
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sleepAfterTServerRestartMillis: 5
        universePaused: true
        updateSucceeded: true
        importedState: NONE
        updateInProgress: true
        targetXClusterConfigs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        setTxnTableWaitCountFlag: true
        ybPrevSoftwareVersion: ybPrevSoftwareVersion
        deviceInfo:
          diskIops: 7
          storageClass: storageClass
          numVolumes: 1
          mountPoints: mountPoints
          storageType: IO1
          throughput: 1
          volumeSize: 1
        updatingTask: CloudBootstrap
        kubernetesUpgradeSupported: true
        nextClusterIndex: 6
        universeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        errorString: errorString
        clientRootCA: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nodeDetailsSet:
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        - nodeName: nodeName
          nodeExporterPort: 5
          placementUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          machineImage: machineImage
          nodeUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          redisServerHttpPort: 9
          masterState: ToStart
          tserverRpcPort: 9
          ysqlServerHttpPort: 6
          yqlServerRpcPort: 3
          isMaster: true
          cloudInfo:
            mount_roots: mount_roots
            public_ip: public_ip
            secondary_subnet_id: secondary_subnet_id
            private_dns: private_dns
            useTimeSync: true
            secondary_private_ip: secondary_private_ip
            private_ip: private_ip
            cloud: cloud
            assignPublicIP: true
            az: az
            subnet_id: subnet_id
            public_dns: public_dns
            region: region
            instance_type: instance_type
          cronsActive: true
          state: Provisioned
          nodeIdx: 9
          masterRpcPort: 4
          redisServerRpcPort: 6
          tserverHttpPort: 8
          disksAreMountedByUUID: true
          isRedisServer: true
          isTserver: true
          nodeUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isYsqlServer: true
          isYqlServer: true
          azUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          masterHttpPort: 1
          ysqlServerRpcPort: 1
          yqlServerHttpPort: 6
        remotePackagePath: remotePackagePath
        currentClusterType: PRIMARY
        communicationPorts:
          tserverRpcPort: 7
          nodeExporterPort: 1
          tserverHttpPort: 2
          ysqlServerHttpPort: 2
          yqlServerRpcPort: 3
          masterHttpPort: 0
          ysqlServerRpcPort: 4
          yqlServerHttpPort: 9
          masterRpcPort: 6
          redisServerHttpPort: 5
          redisServerRpcPort: 5
        cmkArn: cmkArn
        rootAndClientRootCASame: true
        sleepAfterMasterRestartMillis: 1
        previousTaskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        allowInsecure:
          exampleSetFlag: true
          type: boolean
        backupInProgress:
          exampleSetFlag: true
          type: boolean
        capability:
          enum:
          - READ_ONLY
          - EDITS_ALLOWED
          exampleSetFlag: true
          type: string
        clientRootCA:
          exampleSetFlag: true
          format: uuid
          type: string
        clusters:
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/Cluster'
          type: array
        cmkArn:
          description: Amazon Resource Name (ARN) of the CMK
          exampleSetFlag: true
          type: string
        communicationPorts:
          $ref: '#/components/schemas/CommunicationPorts'
        currentClusterType:
          enum:
          - PRIMARY
          - ASYNC
          exampleSetFlag: true
          type: string
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        encryptionAtRestConfig:
          $ref: '#/components/schemas/EncryptionAtRestConfig'
        errorString:
          description: Error message
          exampleSetFlag: true
          type: string
        expectedUniverseVersion:
          description: Expected universe version
          exampleSetFlag: true
          format: int32
          type: integer
        extraDependencies:
          $ref: '#/components/schemas/ExtraDependencies'
        firstTry:
          description: Whether this task has been tried before
          exampleSetFlag: true
          type: boolean
        forceVMImageUpgrade:
          exampleSetFlag: true
          type: boolean
        importedState:
          enum:
          - NONE
          - STARTED
          - MASTERS_ADDED
          - TSERVERS_ADDED
          - IMPORTED
          exampleSetFlag: true
          type: string
        itestS3PackagePath:
          exampleSetFlag: true
          type: string
        kubernetesUpgradeSupported:
          exampleSetFlag: true
          type: boolean
        machineImages:
          additionalProperties:
            exampleSetFlag: true
            type: string
          exampleSetFlag: true
          type: object
        nextClusterIndex:
          exampleSetFlag: true
          format: int32
          type: integer
        nodeDetailsSet:
          description: Node details
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/NodeDetails'
          type: array
          uniqueItems: true
        nodeExporterUser:
          description: Node exporter user
          exampleSetFlag: true
          type: string
        nodePrefix:
          exampleSetFlag: true
          type: string
        nodesResizeAvailable:
          exampleSetFlag: true
          type: boolean
        previousTaskUUID:
          description: Previous task UUID only if this task is a retry
          exampleSetFlag: true
          format: uuid
          type: string
        remotePackagePath:
          exampleSetFlag: true
          type: string
        resetAZConfig:
          exampleSetFlag: true
          type: boolean
        rootAndClientRootCASame:
          exampleSetFlag: true
          type: boolean
        rootCA:
          exampleSetFlag: true
          format: uuid
          type: string
        setTxnTableWaitCountFlag:
          exampleSetFlag: true
          type: boolean
        sleepAfterMasterRestartMillis:
          exampleSetFlag: true
          format: int32
          type: integer
        sleepAfterTServerRestartMillis:
          exampleSetFlag: true
          format: int32
          type: integer
        sourceXClusterConfigs:
          description: The source universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        targetXClusterConfigs:
          description: The target universe's xcluster replication relationships
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            format: uuid
            type: string
          readOnly: true
          type: array
        universePaused:
          exampleSetFlag: true
          type: boolean
        universeUUID:
          description: Associated universe UUID
          exampleSetFlag: true
          format: uuid
          type: string
        updateInProgress:
          exampleSetFlag: true
          type: boolean
        updateSucceeded:
          exampleSetFlag: true
          type: boolean
        updatingTask:
          enum:
          - CloudBootstrap
          - CloudCleanup
          - CreateCassandraTable
          - CreateUniverse
          - ReadOnlyClusterCreate
          - ReadOnlyClusterDelete
          - CreateKubernetesUniverse
          - DestroyUniverse
          - PauseUniverse
          - ResumeUniverse
          - DestroyKubernetesUniverse
          - DeleteTable
          - BackupUniverse
          - RestoreBackup
          - MultiTableBackup
          - CreateBackup
          - EditUniverse
          - EditKubernetesUniverse
          - ExternalScript
          - KubernetesProvision
          - ImportIntoTable
          - UpgradeUniverse
          - RestartUniverse
          - SoftwareUpgrade
          - SoftwareKubernetesUpgrade
          - GFlagsUpgrade
          - GFlagsKubernetesUpgrade
          - CertsRotate
          - TlsToggle
          - VMImageUpgrade
          - SystemdUpgrade
          - CreateRootVolumes
          - ReplaceRootVolume
          - ChangeInstanceType
          - PersistResizeNode
          - PersistSystemdUpgrade
          - UpdateNodeDetails
          - UpgradeKubernetesUniverse
          - DeleteNodeFromUniverse
          - StopNodeInUniverse
          - StartNodeInUniverse
          - AddNodeToUniverse
          - RemoveNodeFromUniverse
          - ReleaseInstanceFromUniverse
          - SetUniverseKey
          - SetKubernetesUniverseKey
          - CreateKMSConfig
          - EditKMSConfig
          - DeleteKMSConfig
          - UpdateDiskSize
          - StartMasterOnNode
          - CreateXClusterConfig
          - EditXClusterConfig
          - DeleteXClusterConfig
          - SyncXClusterConfig
          - CreateSupportBundle
          - AnsibleClusterServerCtl
          - AnsibleConfigureServers
          - AnsibleDestroyServer
          - PauseServer
          - ResumeServer
          - AnsibleSetupServer
          - AnsibleCreateServer
          - PrecheckNode
          - PrecheckNodeDetached
          - AnsibleUpdateNodeInfo
          - BulkImport
          - ChangeMasterConfig
          - ChangeAdminPassword
          - CreateTable
          - DeleteNode
          - DeleteBackup
          - DeleteBackupYb
          - DeleteCustomerConfig
          - DeleteCustomerStorageConfig
          - UpdateNodeProcess
          - DeleteTableFromUniverse
          - LoadBalancerStateChange
          - ModifyBlackList
          - ManipulateDnsRecordTask
          - RemoveUniverseEntry
          - SetFlagInMemory
          - SetNodeState
          - SwamperTargetsFileUpdate
          - UniverseUpdateSucceeded
          - UpdateAndPersistGFlags
          - UpdatePlacementInfo
          - UpdateSoftwareVersion
          - WaitForDataMove
          - WaitForLeaderBlacklistCompletion
          - WaitForFollowerLag
          - WaitForLoadBalance
          - WaitForMasterLeader
          - WaitForServer
          - WaitForTServerHeartBeats
          - DeleteClusterFromUniverse
          - InstanceActions
          - WaitForServerReady
          - RunExternalScript
          - XClusterConfigSetup
          - XClusterConfigSetStatus
          - XClusterConfigModifyTables
          - XClusterConfigRename
          - XClusterConfigDelete
          - XClusterConfigSync
          - CloudAccessKeyCleanup
          - CloudAccessKeySetup
          - CloudInitializer
          - CloudProviderCleanup
          - CloudRegionCleanup
          - CloudRegionSetup
          - CloudSetup
          - BackupTable
          - BackupTableYb
          - BackupUniverseKeys
          - RestoreBackupYb
          - RestoreUniverseKeys
          - RestoreUniverseKeysYb
          - WaitForLeadersOnPreferredOnly
          - EnableEncryptionAtRest
          - DisableEncryptionAtRest
          - DestroyEncryptionAtRest
          - KubernetesCommandExecutor
          - KubernetesWaitForPod
          - KubernetesCheckNumPod
          - SetActiveUniverseKeys
          - CopyEncryptionKeyFile
          - WaitForEncryptionKeyInMemory
          - UnivSetCertificate
          - CreateAlertDefinitions
          - UniverseSetTlsParams
          - UniverseUpdateRootCert
          - ResetUniverseVersion
          - DeleteCertificate
          - SetNodeStatus
          - CheckMasterLeader
          - CheckMasters
          - CheckTServers
          - WaitForTServerHBs
          - CreatePrometheusSwamperConfig
          - PreflightNodeCheck
          - RunYsqlUpgrade
          - ResizeNode
          - UpdateMountedDisks
          exampleSetFlag: true
          type: string
        updatingTaskUUID:
          exampleSetFlag: true
          format: uuid
          type: string
        upgradeOption:
          enum:
          - Rolling
          - Non-Rolling
          - Non-Restart
          exampleSetFlag: true
          type: string
        userAZSelected:
          exampleSetFlag: true
          type: boolean
        ybPrevSoftwareVersion:
          description: Previous software version
          exampleSetFlag: true
          type: string
      required:
      - clusters
      - forceVMImageUpgrade
      - kubernetesUpgradeSupported
      - machineImages
      - sleepAfterMasterRestartMillis
      - sleepAfterTServerRestartMillis
      - upgradeOption
      type: object
    VolumeDetails:
      example:
        volumeSizeGB: 0
        volumeType: EBS
        mountPath: mountPath
      exampleSetFlag: true
      properties:
        mountPath:
          exampleSetFlag: true
          type: string
        volumeSizeGB:
          exampleSetFlag: true
          format: int32
          type: integer
        volumeType:
          enum:
          - EBS
          - SSD
          - HDD
          - NVME
          exampleSetFlag: true
          type: string
      required:
      - mountPath
      - volumeSizeGB
      - volumeType
      type: object
    XClusterConfig:
      description: xcluster config object
      example:
        targetUniverseUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tables:
        - tables
        - tables
        modifyTime: 2000-01-23T04:56:07.000+00:00
        createTime: 2000-01-23T04:56:07.000+00:00
        name: name
        sourceUniverseUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: Init
      exampleSetFlag: true
      properties:
        createTime:
          description: Create time
          exampleSetFlag: true
          format: date-time
          type: string
        modifyTime:
          description: Modify time
          exampleSetFlag: true
          format: date-time
          type: string
        name:
          description: Name
          exampleSetFlag: true
          type: string
        sourceUniverseUUID:
          description: Source Universe UUID
          exampleSetFlag: true
          format: uuid
          type: string
        status:
          description: Status
          enum:
          - Init
          - Running
          - Updating
          - Paused
          - Failed
          exampleSetFlag: true
          type: string
        tables:
          description: Source Universe table IDs
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            type: string
          type: array
          uniqueItems: true
        targetUniverseUUID:
          description: Target Universe UUID
          exampleSetFlag: true
          format: uuid
          type: string
        uuid:
          description: UUID
          exampleSetFlag: true
          format: uuid
          type: string
      type: object
    XClusterConfigCreateFormData:
      description: xcluster create form
      example:
        targetUniverseUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tables:
        - tables
        - tables
        name: name
        sourceUniverseUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        name:
          description: Name
          exampleSetFlag: true
          type: string
        sourceUniverseUUID:
          description: Source Universe UUID
          exampleSetFlag: true
          format: uuid
          type: string
        tables:
          description: Source Universe table IDs
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            type: string
          type: array
          uniqueItems: true
        targetUniverseUUID:
          description: Target Universe UUID
          exampleSetFlag: true
          format: uuid
          type: string
      required:
      - name
      - sourceUniverseUUID
      - tables
      - targetUniverseUUID
      type: object
    XClusterConfigEditFormData:
      description: xcluster edit form
      example:
        tables:
        - tables
        - tables
        name: name
        status: Running
      exampleSetFlag: true
      properties:
        name:
          description: Name
          exampleSetFlag: true
          type: string
        status:
          description: Status
          enum:
          - Running
          - Paused
          exampleSetFlag: true
          type: string
        tables:
          description: Source Universe table IDs
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            type: string
          type: array
          uniqueItems: true
      type: object
    XClusterConfigGetResp:
      description: xcluster get response
      example:
        targetUniverseUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tables:
        - tables
        - tables
        lag: "{}"
        modifyTime: 2000-01-23T04:56:07.000+00:00
        createTime: 2000-01-23T04:56:07.000+00:00
        name: name
        sourceUniverseUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: Init
        xclusterConfig:
          targetUniverseUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tables:
          - tables
          - tables
          modifyTime: 2000-01-23T04:56:07.000+00:00
          createTime: 2000-01-23T04:56:07.000+00:00
          name: name
          sourceUniverseUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: Init
      exampleSetFlag: true
      properties:
        createTime:
          description: Create time
          exampleSetFlag: true
          format: date-time
          type: string
        lag:
          description: Lag metric data
          exampleSetFlag: true
          properties: {}
          type: object
        modifyTime:
          description: Modify time
          exampleSetFlag: true
          format: date-time
          type: string
        name:
          description: Name
          exampleSetFlag: true
          type: string
        sourceUniverseUUID:
          description: Source Universe UUID
          exampleSetFlag: true
          format: uuid
          type: string
        status:
          description: Status
          enum:
          - Init
          - Running
          - Updating
          - Paused
          - Failed
          exampleSetFlag: true
          type: string
        tables:
          description: Source Universe table IDs
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            type: string
          type: array
          uniqueItems: true
        targetUniverseUUID:
          description: Target Universe UUID
          exampleSetFlag: true
          format: uuid
          type: string
        uuid:
          description: UUID
          exampleSetFlag: true
          format: uuid
          type: string
        xclusterConfig:
          $ref: '#/components/schemas/XClusterConfig'
      required:
      - lag
      - xclusterConfig
      type: object
    YBPError:
      description: Generic error response from the Yugabyte Platform API
      example:
        success: false
        error: There was a problem creating the universe
        errorJson: "{ \"foo\" : \"bar\", \"baz\" : [1, 2, 3] }"
      exampleSetFlag: true
      properties:
        error:
          description: User-visible unstructured error message
          example: There was a problem creating the universe
          exampleSetFlag: true
          type: string
        errorJson:
          description: User visible error message as json object
          example: "{ \"foo\" : \"bar\", \"baz\" : [1, 2, 3] }"
          exampleSetFlag: true
          properties: {}
          type: object
        success:
          description: Always set to false to indicate failure
          example: false
          exampleSetFlag: true
          type: boolean
      type: object
    YBPSuccess:
      example:
        success: true
        message: message
      exampleSetFlag: true
      properties:
        message:
          description: API response message.
          exampleSetFlag: true
          readOnly: true
          type: string
        success:
          description: API operation status. A value of true indicates the operation
            was successful.
          exampleSetFlag: true
          readOnly: true
          type: boolean
      type: object
    YBPTask:
      example:
        taskUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        resourceUUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      exampleSetFlag: true
      properties:
        resourceUUID:
          description: UUID of the resource being modified by the task
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
        taskUUID:
          description: Task UUID
          exampleSetFlag: true
          format: uuid
          readOnly: true
          type: string
      type: object
    YBPTasks:
      exampleSetFlag: false
      type: object
    AlertChannelEmailParams_allOf:
      exampleSetFlag: true
      properties:
        defaultRecipients:
          exampleSetFlag: true
          type: boolean
        defaultSmtpSettings:
          exampleSetFlag: true
          type: boolean
        recipients:
          exampleSetFlag: false
          items:
            exampleSetFlag: true
            type: string
          type: array
        smtpData:
          $ref: '#/components/schemas/SmtpData'
      required:
      - defaultRecipients
      - defaultSmtpSettings
      - recipients
      - smtpData
      type: object
    AlertChannelPagerDutyParams_allOf:
      exampleSetFlag: true
      properties:
        apiKey:
          exampleSetFlag: true
          maxLength: 2147483647
          minLength: 1
          type: string
        routingKey:
          exampleSetFlag: true
          maxLength: 2147483647
          minLength: 1
          type: string
      required:
      - apiKey
      - routingKey
      type: object
    AlertChannelSlackParams_allOf:
      exampleSetFlag: true
      properties:
        iconUrl:
          exampleSetFlag: true
          type: string
        username:
          exampleSetFlag: true
          maxLength: 2147483647
          minLength: 1
          type: string
        webhookUrl:
          exampleSetFlag: true
          type: string
      required:
      - iconUrl
      - username
      - webhookUrl
      type: object
    AlertChannelWebHookParams_allOf:
      exampleSetFlag: true
      properties:
        webhookUrl:
          exampleSetFlag: true
          type: string
      required:
      - webhookUrl
      type: object
  securitySchemes:
    apiKeyAuth:
      description: API token passed as header
      in: header
      name: X-AUTH-YW-API-TOKEN
      type: apiKey
x-original-swagger-version: "2.0"
