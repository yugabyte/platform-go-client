/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// SuppressHealthCheckNotificationsConfig struct for SuppressHealthCheckNotificationsConfig
type SuppressHealthCheckNotificationsConfig struct {
	// Suppress health check notifications on all the universes (including future universes)
	SuppressAllUniverses *bool `json:"suppressAllUniverses,omitempty"`
	// Set of universe uuids to suppress health check notifications on
	UniverseUUIDSet *[]string `json:"universeUUIDSet,omitempty"`
}

// NewSuppressHealthCheckNotificationsConfig instantiates a new SuppressHealthCheckNotificationsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuppressHealthCheckNotificationsConfig() *SuppressHealthCheckNotificationsConfig {
	this := SuppressHealthCheckNotificationsConfig{}
	return &this
}

// NewSuppressHealthCheckNotificationsConfigWithDefaults instantiates a new SuppressHealthCheckNotificationsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuppressHealthCheckNotificationsConfigWithDefaults() *SuppressHealthCheckNotificationsConfig {
	this := SuppressHealthCheckNotificationsConfig{}
	return &this
}

// GetSuppressAllUniverses returns the SuppressAllUniverses field value if set, zero value otherwise.
func (o *SuppressHealthCheckNotificationsConfig) GetSuppressAllUniverses() bool {
	if o == nil || o.SuppressAllUniverses == nil {
		var ret bool
		return ret
	}
	return *o.SuppressAllUniverses
}

// GetSuppressAllUniversesOk returns a tuple with the SuppressAllUniverses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuppressHealthCheckNotificationsConfig) GetSuppressAllUniversesOk() (*bool, bool) {
	if o == nil || o.SuppressAllUniverses == nil {
		return nil, false
	}
	return o.SuppressAllUniverses, true
}

// HasSuppressAllUniverses returns a boolean if a field has been set.
func (o *SuppressHealthCheckNotificationsConfig) HasSuppressAllUniverses() bool {
	if o != nil && o.SuppressAllUniverses != nil {
		return true
	}

	return false
}

// SetSuppressAllUniverses gets a reference to the given bool and assigns it to the SuppressAllUniverses field.
func (o *SuppressHealthCheckNotificationsConfig) SetSuppressAllUniverses(v bool) {
	o.SuppressAllUniverses = &v
}

// GetUniverseUUIDSet returns the UniverseUUIDSet field value if set, zero value otherwise.
func (o *SuppressHealthCheckNotificationsConfig) GetUniverseUUIDSet() []string {
	if o == nil || o.UniverseUUIDSet == nil {
		var ret []string
		return ret
	}
	return *o.UniverseUUIDSet
}

// GetUniverseUUIDSetOk returns a tuple with the UniverseUUIDSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuppressHealthCheckNotificationsConfig) GetUniverseUUIDSetOk() (*[]string, bool) {
	if o == nil || o.UniverseUUIDSet == nil {
		return nil, false
	}
	return o.UniverseUUIDSet, true
}

// HasUniverseUUIDSet returns a boolean if a field has been set.
func (o *SuppressHealthCheckNotificationsConfig) HasUniverseUUIDSet() bool {
	if o != nil && o.UniverseUUIDSet != nil {
		return true
	}

	return false
}

// SetUniverseUUIDSet gets a reference to the given []string and assigns it to the UniverseUUIDSet field.
func (o *SuppressHealthCheckNotificationsConfig) SetUniverseUUIDSet(v []string) {
	o.UniverseUUIDSet = &v
}

func (o SuppressHealthCheckNotificationsConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SuppressAllUniverses != nil {
		toSerialize["suppressAllUniverses"] = o.SuppressAllUniverses
	}
	if o.UniverseUUIDSet != nil {
		toSerialize["universeUUIDSet"] = o.UniverseUUIDSet
	}
	return json.Marshal(toSerialize)
}

type NullableSuppressHealthCheckNotificationsConfig struct {
	value *SuppressHealthCheckNotificationsConfig
	isSet bool
}

func (v NullableSuppressHealthCheckNotificationsConfig) Get() *SuppressHealthCheckNotificationsConfig {
	return v.value
}

func (v *NullableSuppressHealthCheckNotificationsConfig) Set(val *SuppressHealthCheckNotificationsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableSuppressHealthCheckNotificationsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableSuppressHealthCheckNotificationsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuppressHealthCheckNotificationsConfig(val *SuppressHealthCheckNotificationsConfig) *NullableSuppressHealthCheckNotificationsConfig {
	return &NullableSuppressHealthCheckNotificationsConfig{value: val, isSet: true}
}

func (v NullableSuppressHealthCheckNotificationsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuppressHealthCheckNotificationsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


