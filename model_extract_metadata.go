/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// ExtractMetadata url to release TGZ to extract metadata from
type ExtractMetadata struct {
	Url string `json:"url"`
	Uuid string `json:"uuid"`
}

// NewExtractMetadata instantiates a new ExtractMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtractMetadata(url string, uuid string) *ExtractMetadata {
	this := ExtractMetadata{}
	this.Url = url
	this.Uuid = uuid
	return &this
}

// NewExtractMetadataWithDefaults instantiates a new ExtractMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtractMetadataWithDefaults() *ExtractMetadata {
	this := ExtractMetadata{}
	return &this
}

// GetUrl returns the Url field value
func (o *ExtractMetadata) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ExtractMetadata) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ExtractMetadata) SetUrl(v string) {
	o.Url = v
}

// GetUuid returns the Uuid field value
func (o *ExtractMetadata) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *ExtractMetadata) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *ExtractMetadata) SetUuid(v string) {
	o.Uuid = v
}

func (o ExtractMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["uuid"] = o.Uuid
	}
	return json.Marshal(toSerialize)
}

type NullableExtractMetadata struct {
	value *ExtractMetadata
	isSet bool
}

func (v NullableExtractMetadata) Get() *ExtractMetadata {
	return v.value
}

func (v *NullableExtractMetadata) Set(val *ExtractMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableExtractMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableExtractMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtractMetadata(val *ExtractMetadata) *NullableExtractMetadata {
	return &NullableExtractMetadata{value: val, isSet: true}
}

func (v NullableExtractMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtractMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


