/*
 * Yugabyte Platform APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// RestoreBackupParams struct for RestoreBackupParams
type RestoreBackupParams struct {
	// Action type
	ActionType *string `json:"actionType,omitempty"`
	// Backup's storage info to restore
	BackupStorageInfoList *[]BackupStorageInfo `json:"backupStorageInfoList,omitempty"`
	// Amazon Resource Name (ARN) of the CMK
	CmkArn *string `json:"cmkArn,omitempty"`
	CommunicationPorts *CommunicationPorts `json:"communicationPorts,omitempty"`
	// Customer UUID
	CustomerUUID *string `json:"customerUUID,omitempty"`
	DeviceInfo *DeviceInfo `json:"deviceInfo,omitempty"`
	// Is verbose logging enabled
	EnableVerboseLogs *bool `json:"enableVerboseLogs,omitempty"`
	EncryptionAtRestConfig *EncryptionAtRestConfig `json:"encryptionAtRestConfig,omitempty"`
	// Error message
	ErrorString *string `json:"errorString,omitempty"`
	// Expected universe version
	ExpectedUniverseVersion *int32 `json:"expectedUniverseVersion,omitempty"`
	ExtraDependencies *ExtraDependencies `json:"extraDependencies,omitempty"`
	// Whether this task has been tried before
	FirstTry *bool `json:"firstTry,omitempty"`
	// KMS configuration UUID
	KmsConfigUUID *string `json:"kmsConfigUUID,omitempty"`
	// User name of the new tables owner
	NewOwner *string `json:"newOwner,omitempty"`
	// Node details
	NodeDetailsSet *[]NodeDetails `json:"nodeDetailsSet,omitempty"`
	// Node exporter user
	NodeExporterUser *string `json:"nodeExporterUser,omitempty"`
	// User name of the current tables owner
	OldOwner *string `json:"oldOwner,omitempty"`
	// Number of concurrent commands to run on nodes over SSH
	Parallelism *int32 `json:"parallelism,omitempty"`
	// Previous task UUID only if this task is a retry
	PreviousTaskUUID *string `json:"previousTaskUUID,omitempty"`
	// Restore TimeStamp
	RestoreTimeStamp *string `json:"restoreTimeStamp,omitempty"`
	// The source universe's xcluster replication relationships
	SourceXClusterConfigs *[]string `json:"sourceXClusterConfigs,omitempty"`
	// Storage config uuid
	StorageConfigUUID *string `json:"storageConfigUUID,omitempty"`
	// The target universe's xcluster replication relationships
	TargetXClusterConfigs *[]string `json:"targetXClusterConfigs,omitempty"`
	// Universe UUID
	UniverseUUID string `json:"universeUUID"`
	// Previous software version
	YbPrevSoftwareVersion *string `json:"ybPrevSoftwareVersion,omitempty"`
}

// NewRestoreBackupParams instantiates a new RestoreBackupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreBackupParams(universeUUID string, ) *RestoreBackupParams {
	this := RestoreBackupParams{}
	this.UniverseUUID = universeUUID
	return &this
}

// NewRestoreBackupParamsWithDefaults instantiates a new RestoreBackupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreBackupParamsWithDefaults() *RestoreBackupParams {
	this := RestoreBackupParams{}
	return &this
}

// GetActionType returns the ActionType field value if set, zero value otherwise.
func (o *RestoreBackupParams) GetActionType() string {
	if o == nil || o.ActionType == nil {
		var ret string
		return ret
	}
	return *o.ActionType
}

// GetActionTypeOk returns a tuple with the ActionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetActionTypeOk() (*string, bool) {
	if o == nil || o.ActionType == nil {
		return nil, false
	}
	return o.ActionType, true
}

// HasActionType returns a boolean if a field has been set.
func (o *RestoreBackupParams) HasActionType() bool {
	if o != nil && o.ActionType != nil {
		return true
	}

	return false
}

// SetActionType gets a reference to the given string and assigns it to the ActionType field.
func (o *RestoreBackupParams) SetActionType(v string) {
	o.ActionType = &v
}

// GetBackupStorageInfoList returns the BackupStorageInfoList field value if set, zero value otherwise.
func (o *RestoreBackupParams) GetBackupStorageInfoList() []BackupStorageInfo {
	if o == nil || o.BackupStorageInfoList == nil {
		var ret []BackupStorageInfo
		return ret
	}
	return *o.BackupStorageInfoList
}

// GetBackupStorageInfoListOk returns a tuple with the BackupStorageInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetBackupStorageInfoListOk() (*[]BackupStorageInfo, bool) {
	if o == nil || o.BackupStorageInfoList == nil {
		return nil, false
	}
	return o.BackupStorageInfoList, true
}

// HasBackupStorageInfoList returns a boolean if a field has been set.
func (o *RestoreBackupParams) HasBackupStorageInfoList() bool {
	if o != nil && o.BackupStorageInfoList != nil {
		return true
	}

	return false
}

// SetBackupStorageInfoList gets a reference to the given []BackupStorageInfo and assigns it to the BackupStorageInfoList field.
func (o *RestoreBackupParams) SetBackupStorageInfoList(v []BackupStorageInfo) {
	o.BackupStorageInfoList = &v
}

// GetCmkArn returns the CmkArn field value if set, zero value otherwise.
func (o *RestoreBackupParams) GetCmkArn() string {
	if o == nil || o.CmkArn == nil {
		var ret string
		return ret
	}
	return *o.CmkArn
}

// GetCmkArnOk returns a tuple with the CmkArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetCmkArnOk() (*string, bool) {
	if o == nil || o.CmkArn == nil {
		return nil, false
	}
	return o.CmkArn, true
}

// HasCmkArn returns a boolean if a field has been set.
func (o *RestoreBackupParams) HasCmkArn() bool {
	if o != nil && o.CmkArn != nil {
		return true
	}

	return false
}

// SetCmkArn gets a reference to the given string and assigns it to the CmkArn field.
func (o *RestoreBackupParams) SetCmkArn(v string) {
	o.CmkArn = &v
}

// GetCommunicationPorts returns the CommunicationPorts field value if set, zero value otherwise.
func (o *RestoreBackupParams) GetCommunicationPorts() CommunicationPorts {
	if o == nil || o.CommunicationPorts == nil {
		var ret CommunicationPorts
		return ret
	}
	return *o.CommunicationPorts
}

// GetCommunicationPortsOk returns a tuple with the CommunicationPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetCommunicationPortsOk() (*CommunicationPorts, bool) {
	if o == nil || o.CommunicationPorts == nil {
		return nil, false
	}
	return o.CommunicationPorts, true
}

// HasCommunicationPorts returns a boolean if a field has been set.
func (o *RestoreBackupParams) HasCommunicationPorts() bool {
	if o != nil && o.CommunicationPorts != nil {
		return true
	}

	return false
}

// SetCommunicationPorts gets a reference to the given CommunicationPorts and assigns it to the CommunicationPorts field.
func (o *RestoreBackupParams) SetCommunicationPorts(v CommunicationPorts) {
	o.CommunicationPorts = &v
}

// GetCustomerUUID returns the CustomerUUID field value if set, zero value otherwise.
func (o *RestoreBackupParams) GetCustomerUUID() string {
	if o == nil || o.CustomerUUID == nil {
		var ret string
		return ret
	}
	return *o.CustomerUUID
}

// GetCustomerUUIDOk returns a tuple with the CustomerUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetCustomerUUIDOk() (*string, bool) {
	if o == nil || o.CustomerUUID == nil {
		return nil, false
	}
	return o.CustomerUUID, true
}

// HasCustomerUUID returns a boolean if a field has been set.
func (o *RestoreBackupParams) HasCustomerUUID() bool {
	if o != nil && o.CustomerUUID != nil {
		return true
	}

	return false
}

// SetCustomerUUID gets a reference to the given string and assigns it to the CustomerUUID field.
func (o *RestoreBackupParams) SetCustomerUUID(v string) {
	o.CustomerUUID = &v
}

// GetDeviceInfo returns the DeviceInfo field value if set, zero value otherwise.
func (o *RestoreBackupParams) GetDeviceInfo() DeviceInfo {
	if o == nil || o.DeviceInfo == nil {
		var ret DeviceInfo
		return ret
	}
	return *o.DeviceInfo
}

// GetDeviceInfoOk returns a tuple with the DeviceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetDeviceInfoOk() (*DeviceInfo, bool) {
	if o == nil || o.DeviceInfo == nil {
		return nil, false
	}
	return o.DeviceInfo, true
}

// HasDeviceInfo returns a boolean if a field has been set.
func (o *RestoreBackupParams) HasDeviceInfo() bool {
	if o != nil && o.DeviceInfo != nil {
		return true
	}

	return false
}

// SetDeviceInfo gets a reference to the given DeviceInfo and assigns it to the DeviceInfo field.
func (o *RestoreBackupParams) SetDeviceInfo(v DeviceInfo) {
	o.DeviceInfo = &v
}

// GetEnableVerboseLogs returns the EnableVerboseLogs field value if set, zero value otherwise.
func (o *RestoreBackupParams) GetEnableVerboseLogs() bool {
	if o == nil || o.EnableVerboseLogs == nil {
		var ret bool
		return ret
	}
	return *o.EnableVerboseLogs
}

// GetEnableVerboseLogsOk returns a tuple with the EnableVerboseLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetEnableVerboseLogsOk() (*bool, bool) {
	if o == nil || o.EnableVerboseLogs == nil {
		return nil, false
	}
	return o.EnableVerboseLogs, true
}

// HasEnableVerboseLogs returns a boolean if a field has been set.
func (o *RestoreBackupParams) HasEnableVerboseLogs() bool {
	if o != nil && o.EnableVerboseLogs != nil {
		return true
	}

	return false
}

// SetEnableVerboseLogs gets a reference to the given bool and assigns it to the EnableVerboseLogs field.
func (o *RestoreBackupParams) SetEnableVerboseLogs(v bool) {
	o.EnableVerboseLogs = &v
}

// GetEncryptionAtRestConfig returns the EncryptionAtRestConfig field value if set, zero value otherwise.
func (o *RestoreBackupParams) GetEncryptionAtRestConfig() EncryptionAtRestConfig {
	if o == nil || o.EncryptionAtRestConfig == nil {
		var ret EncryptionAtRestConfig
		return ret
	}
	return *o.EncryptionAtRestConfig
}

// GetEncryptionAtRestConfigOk returns a tuple with the EncryptionAtRestConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetEncryptionAtRestConfigOk() (*EncryptionAtRestConfig, bool) {
	if o == nil || o.EncryptionAtRestConfig == nil {
		return nil, false
	}
	return o.EncryptionAtRestConfig, true
}

// HasEncryptionAtRestConfig returns a boolean if a field has been set.
func (o *RestoreBackupParams) HasEncryptionAtRestConfig() bool {
	if o != nil && o.EncryptionAtRestConfig != nil {
		return true
	}

	return false
}

// SetEncryptionAtRestConfig gets a reference to the given EncryptionAtRestConfig and assigns it to the EncryptionAtRestConfig field.
func (o *RestoreBackupParams) SetEncryptionAtRestConfig(v EncryptionAtRestConfig) {
	o.EncryptionAtRestConfig = &v
}

// GetErrorString returns the ErrorString field value if set, zero value otherwise.
func (o *RestoreBackupParams) GetErrorString() string {
	if o == nil || o.ErrorString == nil {
		var ret string
		return ret
	}
	return *o.ErrorString
}

// GetErrorStringOk returns a tuple with the ErrorString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetErrorStringOk() (*string, bool) {
	if o == nil || o.ErrorString == nil {
		return nil, false
	}
	return o.ErrorString, true
}

// HasErrorString returns a boolean if a field has been set.
func (o *RestoreBackupParams) HasErrorString() bool {
	if o != nil && o.ErrorString != nil {
		return true
	}

	return false
}

// SetErrorString gets a reference to the given string and assigns it to the ErrorString field.
func (o *RestoreBackupParams) SetErrorString(v string) {
	o.ErrorString = &v
}

// GetExpectedUniverseVersion returns the ExpectedUniverseVersion field value if set, zero value otherwise.
func (o *RestoreBackupParams) GetExpectedUniverseVersion() int32 {
	if o == nil || o.ExpectedUniverseVersion == nil {
		var ret int32
		return ret
	}
	return *o.ExpectedUniverseVersion
}

// GetExpectedUniverseVersionOk returns a tuple with the ExpectedUniverseVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetExpectedUniverseVersionOk() (*int32, bool) {
	if o == nil || o.ExpectedUniverseVersion == nil {
		return nil, false
	}
	return o.ExpectedUniverseVersion, true
}

// HasExpectedUniverseVersion returns a boolean if a field has been set.
func (o *RestoreBackupParams) HasExpectedUniverseVersion() bool {
	if o != nil && o.ExpectedUniverseVersion != nil {
		return true
	}

	return false
}

// SetExpectedUniverseVersion gets a reference to the given int32 and assigns it to the ExpectedUniverseVersion field.
func (o *RestoreBackupParams) SetExpectedUniverseVersion(v int32) {
	o.ExpectedUniverseVersion = &v
}

// GetExtraDependencies returns the ExtraDependencies field value if set, zero value otherwise.
func (o *RestoreBackupParams) GetExtraDependencies() ExtraDependencies {
	if o == nil || o.ExtraDependencies == nil {
		var ret ExtraDependencies
		return ret
	}
	return *o.ExtraDependencies
}

// GetExtraDependenciesOk returns a tuple with the ExtraDependencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetExtraDependenciesOk() (*ExtraDependencies, bool) {
	if o == nil || o.ExtraDependencies == nil {
		return nil, false
	}
	return o.ExtraDependencies, true
}

// HasExtraDependencies returns a boolean if a field has been set.
func (o *RestoreBackupParams) HasExtraDependencies() bool {
	if o != nil && o.ExtraDependencies != nil {
		return true
	}

	return false
}

// SetExtraDependencies gets a reference to the given ExtraDependencies and assigns it to the ExtraDependencies field.
func (o *RestoreBackupParams) SetExtraDependencies(v ExtraDependencies) {
	o.ExtraDependencies = &v
}

// GetFirstTry returns the FirstTry field value if set, zero value otherwise.
func (o *RestoreBackupParams) GetFirstTry() bool {
	if o == nil || o.FirstTry == nil {
		var ret bool
		return ret
	}
	return *o.FirstTry
}

// GetFirstTryOk returns a tuple with the FirstTry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetFirstTryOk() (*bool, bool) {
	if o == nil || o.FirstTry == nil {
		return nil, false
	}
	return o.FirstTry, true
}

// HasFirstTry returns a boolean if a field has been set.
func (o *RestoreBackupParams) HasFirstTry() bool {
	if o != nil && o.FirstTry != nil {
		return true
	}

	return false
}

// SetFirstTry gets a reference to the given bool and assigns it to the FirstTry field.
func (o *RestoreBackupParams) SetFirstTry(v bool) {
	o.FirstTry = &v
}

// GetKmsConfigUUID returns the KmsConfigUUID field value if set, zero value otherwise.
func (o *RestoreBackupParams) GetKmsConfigUUID() string {
	if o == nil || o.KmsConfigUUID == nil {
		var ret string
		return ret
	}
	return *o.KmsConfigUUID
}

// GetKmsConfigUUIDOk returns a tuple with the KmsConfigUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetKmsConfigUUIDOk() (*string, bool) {
	if o == nil || o.KmsConfigUUID == nil {
		return nil, false
	}
	return o.KmsConfigUUID, true
}

// HasKmsConfigUUID returns a boolean if a field has been set.
func (o *RestoreBackupParams) HasKmsConfigUUID() bool {
	if o != nil && o.KmsConfigUUID != nil {
		return true
	}

	return false
}

// SetKmsConfigUUID gets a reference to the given string and assigns it to the KmsConfigUUID field.
func (o *RestoreBackupParams) SetKmsConfigUUID(v string) {
	o.KmsConfigUUID = &v
}

// GetNewOwner returns the NewOwner field value if set, zero value otherwise.
func (o *RestoreBackupParams) GetNewOwner() string {
	if o == nil || o.NewOwner == nil {
		var ret string
		return ret
	}
	return *o.NewOwner
}

// GetNewOwnerOk returns a tuple with the NewOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetNewOwnerOk() (*string, bool) {
	if o == nil || o.NewOwner == nil {
		return nil, false
	}
	return o.NewOwner, true
}

// HasNewOwner returns a boolean if a field has been set.
func (o *RestoreBackupParams) HasNewOwner() bool {
	if o != nil && o.NewOwner != nil {
		return true
	}

	return false
}

// SetNewOwner gets a reference to the given string and assigns it to the NewOwner field.
func (o *RestoreBackupParams) SetNewOwner(v string) {
	o.NewOwner = &v
}

// GetNodeDetailsSet returns the NodeDetailsSet field value if set, zero value otherwise.
func (o *RestoreBackupParams) GetNodeDetailsSet() []NodeDetails {
	if o == nil || o.NodeDetailsSet == nil {
		var ret []NodeDetails
		return ret
	}
	return *o.NodeDetailsSet
}

// GetNodeDetailsSetOk returns a tuple with the NodeDetailsSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetNodeDetailsSetOk() (*[]NodeDetails, bool) {
	if o == nil || o.NodeDetailsSet == nil {
		return nil, false
	}
	return o.NodeDetailsSet, true
}

// HasNodeDetailsSet returns a boolean if a field has been set.
func (o *RestoreBackupParams) HasNodeDetailsSet() bool {
	if o != nil && o.NodeDetailsSet != nil {
		return true
	}

	return false
}

// SetNodeDetailsSet gets a reference to the given []NodeDetails and assigns it to the NodeDetailsSet field.
func (o *RestoreBackupParams) SetNodeDetailsSet(v []NodeDetails) {
	o.NodeDetailsSet = &v
}

// GetNodeExporterUser returns the NodeExporterUser field value if set, zero value otherwise.
func (o *RestoreBackupParams) GetNodeExporterUser() string {
	if o == nil || o.NodeExporterUser == nil {
		var ret string
		return ret
	}
	return *o.NodeExporterUser
}

// GetNodeExporterUserOk returns a tuple with the NodeExporterUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetNodeExporterUserOk() (*string, bool) {
	if o == nil || o.NodeExporterUser == nil {
		return nil, false
	}
	return o.NodeExporterUser, true
}

// HasNodeExporterUser returns a boolean if a field has been set.
func (o *RestoreBackupParams) HasNodeExporterUser() bool {
	if o != nil && o.NodeExporterUser != nil {
		return true
	}

	return false
}

// SetNodeExporterUser gets a reference to the given string and assigns it to the NodeExporterUser field.
func (o *RestoreBackupParams) SetNodeExporterUser(v string) {
	o.NodeExporterUser = &v
}

// GetOldOwner returns the OldOwner field value if set, zero value otherwise.
func (o *RestoreBackupParams) GetOldOwner() string {
	if o == nil || o.OldOwner == nil {
		var ret string
		return ret
	}
	return *o.OldOwner
}

// GetOldOwnerOk returns a tuple with the OldOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetOldOwnerOk() (*string, bool) {
	if o == nil || o.OldOwner == nil {
		return nil, false
	}
	return o.OldOwner, true
}

// HasOldOwner returns a boolean if a field has been set.
func (o *RestoreBackupParams) HasOldOwner() bool {
	if o != nil && o.OldOwner != nil {
		return true
	}

	return false
}

// SetOldOwner gets a reference to the given string and assigns it to the OldOwner field.
func (o *RestoreBackupParams) SetOldOwner(v string) {
	o.OldOwner = &v
}

// GetParallelism returns the Parallelism field value if set, zero value otherwise.
func (o *RestoreBackupParams) GetParallelism() int32 {
	if o == nil || o.Parallelism == nil {
		var ret int32
		return ret
	}
	return *o.Parallelism
}

// GetParallelismOk returns a tuple with the Parallelism field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetParallelismOk() (*int32, bool) {
	if o == nil || o.Parallelism == nil {
		return nil, false
	}
	return o.Parallelism, true
}

// HasParallelism returns a boolean if a field has been set.
func (o *RestoreBackupParams) HasParallelism() bool {
	if o != nil && o.Parallelism != nil {
		return true
	}

	return false
}

// SetParallelism gets a reference to the given int32 and assigns it to the Parallelism field.
func (o *RestoreBackupParams) SetParallelism(v int32) {
	o.Parallelism = &v
}

// GetPreviousTaskUUID returns the PreviousTaskUUID field value if set, zero value otherwise.
func (o *RestoreBackupParams) GetPreviousTaskUUID() string {
	if o == nil || o.PreviousTaskUUID == nil {
		var ret string
		return ret
	}
	return *o.PreviousTaskUUID
}

// GetPreviousTaskUUIDOk returns a tuple with the PreviousTaskUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetPreviousTaskUUIDOk() (*string, bool) {
	if o == nil || o.PreviousTaskUUID == nil {
		return nil, false
	}
	return o.PreviousTaskUUID, true
}

// HasPreviousTaskUUID returns a boolean if a field has been set.
func (o *RestoreBackupParams) HasPreviousTaskUUID() bool {
	if o != nil && o.PreviousTaskUUID != nil {
		return true
	}

	return false
}

// SetPreviousTaskUUID gets a reference to the given string and assigns it to the PreviousTaskUUID field.
func (o *RestoreBackupParams) SetPreviousTaskUUID(v string) {
	o.PreviousTaskUUID = &v
}

// GetRestoreTimeStamp returns the RestoreTimeStamp field value if set, zero value otherwise.
func (o *RestoreBackupParams) GetRestoreTimeStamp() string {
	if o == nil || o.RestoreTimeStamp == nil {
		var ret string
		return ret
	}
	return *o.RestoreTimeStamp
}

// GetRestoreTimeStampOk returns a tuple with the RestoreTimeStamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetRestoreTimeStampOk() (*string, bool) {
	if o == nil || o.RestoreTimeStamp == nil {
		return nil, false
	}
	return o.RestoreTimeStamp, true
}

// HasRestoreTimeStamp returns a boolean if a field has been set.
func (o *RestoreBackupParams) HasRestoreTimeStamp() bool {
	if o != nil && o.RestoreTimeStamp != nil {
		return true
	}

	return false
}

// SetRestoreTimeStamp gets a reference to the given string and assigns it to the RestoreTimeStamp field.
func (o *RestoreBackupParams) SetRestoreTimeStamp(v string) {
	o.RestoreTimeStamp = &v
}

// GetSourceXClusterConfigs returns the SourceXClusterConfigs field value if set, zero value otherwise.
func (o *RestoreBackupParams) GetSourceXClusterConfigs() []string {
	if o == nil || o.SourceXClusterConfigs == nil {
		var ret []string
		return ret
	}
	return *o.SourceXClusterConfigs
}

// GetSourceXClusterConfigsOk returns a tuple with the SourceXClusterConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetSourceXClusterConfigsOk() (*[]string, bool) {
	if o == nil || o.SourceXClusterConfigs == nil {
		return nil, false
	}
	return o.SourceXClusterConfigs, true
}

// HasSourceXClusterConfigs returns a boolean if a field has been set.
func (o *RestoreBackupParams) HasSourceXClusterConfigs() bool {
	if o != nil && o.SourceXClusterConfigs != nil {
		return true
	}

	return false
}

// SetSourceXClusterConfigs gets a reference to the given []string and assigns it to the SourceXClusterConfigs field.
func (o *RestoreBackupParams) SetSourceXClusterConfigs(v []string) {
	o.SourceXClusterConfigs = &v
}

// GetStorageConfigUUID returns the StorageConfigUUID field value if set, zero value otherwise.
func (o *RestoreBackupParams) GetStorageConfigUUID() string {
	if o == nil || o.StorageConfigUUID == nil {
		var ret string
		return ret
	}
	return *o.StorageConfigUUID
}

// GetStorageConfigUUIDOk returns a tuple with the StorageConfigUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetStorageConfigUUIDOk() (*string, bool) {
	if o == nil || o.StorageConfigUUID == nil {
		return nil, false
	}
	return o.StorageConfigUUID, true
}

// HasStorageConfigUUID returns a boolean if a field has been set.
func (o *RestoreBackupParams) HasStorageConfigUUID() bool {
	if o != nil && o.StorageConfigUUID != nil {
		return true
	}

	return false
}

// SetStorageConfigUUID gets a reference to the given string and assigns it to the StorageConfigUUID field.
func (o *RestoreBackupParams) SetStorageConfigUUID(v string) {
	o.StorageConfigUUID = &v
}

// GetTargetXClusterConfigs returns the TargetXClusterConfigs field value if set, zero value otherwise.
func (o *RestoreBackupParams) GetTargetXClusterConfigs() []string {
	if o == nil || o.TargetXClusterConfigs == nil {
		var ret []string
		return ret
	}
	return *o.TargetXClusterConfigs
}

// GetTargetXClusterConfigsOk returns a tuple with the TargetXClusterConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetTargetXClusterConfigsOk() (*[]string, bool) {
	if o == nil || o.TargetXClusterConfigs == nil {
		return nil, false
	}
	return o.TargetXClusterConfigs, true
}

// HasTargetXClusterConfigs returns a boolean if a field has been set.
func (o *RestoreBackupParams) HasTargetXClusterConfigs() bool {
	if o != nil && o.TargetXClusterConfigs != nil {
		return true
	}

	return false
}

// SetTargetXClusterConfigs gets a reference to the given []string and assigns it to the TargetXClusterConfigs field.
func (o *RestoreBackupParams) SetTargetXClusterConfigs(v []string) {
	o.TargetXClusterConfigs = &v
}

// GetUniverseUUID returns the UniverseUUID field value
func (o *RestoreBackupParams) GetUniverseUUID() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.UniverseUUID
}

// GetUniverseUUIDOk returns a tuple with the UniverseUUID field value
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetUniverseUUIDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UniverseUUID, true
}

// SetUniverseUUID sets field value
func (o *RestoreBackupParams) SetUniverseUUID(v string) {
	o.UniverseUUID = v
}

// GetYbPrevSoftwareVersion returns the YbPrevSoftwareVersion field value if set, zero value otherwise.
func (o *RestoreBackupParams) GetYbPrevSoftwareVersion() string {
	if o == nil || o.YbPrevSoftwareVersion == nil {
		var ret string
		return ret
	}
	return *o.YbPrevSoftwareVersion
}

// GetYbPrevSoftwareVersionOk returns a tuple with the YbPrevSoftwareVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreBackupParams) GetYbPrevSoftwareVersionOk() (*string, bool) {
	if o == nil || o.YbPrevSoftwareVersion == nil {
		return nil, false
	}
	return o.YbPrevSoftwareVersion, true
}

// HasYbPrevSoftwareVersion returns a boolean if a field has been set.
func (o *RestoreBackupParams) HasYbPrevSoftwareVersion() bool {
	if o != nil && o.YbPrevSoftwareVersion != nil {
		return true
	}

	return false
}

// SetYbPrevSoftwareVersion gets a reference to the given string and assigns it to the YbPrevSoftwareVersion field.
func (o *RestoreBackupParams) SetYbPrevSoftwareVersion(v string) {
	o.YbPrevSoftwareVersion = &v
}

func (o RestoreBackupParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ActionType != nil {
		toSerialize["actionType"] = o.ActionType
	}
	if o.BackupStorageInfoList != nil {
		toSerialize["backupStorageInfoList"] = o.BackupStorageInfoList
	}
	if o.CmkArn != nil {
		toSerialize["cmkArn"] = o.CmkArn
	}
	if o.CommunicationPorts != nil {
		toSerialize["communicationPorts"] = o.CommunicationPorts
	}
	if o.CustomerUUID != nil {
		toSerialize["customerUUID"] = o.CustomerUUID
	}
	if o.DeviceInfo != nil {
		toSerialize["deviceInfo"] = o.DeviceInfo
	}
	if o.EnableVerboseLogs != nil {
		toSerialize["enableVerboseLogs"] = o.EnableVerboseLogs
	}
	if o.EncryptionAtRestConfig != nil {
		toSerialize["encryptionAtRestConfig"] = o.EncryptionAtRestConfig
	}
	if o.ErrorString != nil {
		toSerialize["errorString"] = o.ErrorString
	}
	if o.ExpectedUniverseVersion != nil {
		toSerialize["expectedUniverseVersion"] = o.ExpectedUniverseVersion
	}
	if o.ExtraDependencies != nil {
		toSerialize["extraDependencies"] = o.ExtraDependencies
	}
	if o.FirstTry != nil {
		toSerialize["firstTry"] = o.FirstTry
	}
	if o.KmsConfigUUID != nil {
		toSerialize["kmsConfigUUID"] = o.KmsConfigUUID
	}
	if o.NewOwner != nil {
		toSerialize["newOwner"] = o.NewOwner
	}
	if o.NodeDetailsSet != nil {
		toSerialize["nodeDetailsSet"] = o.NodeDetailsSet
	}
	if o.NodeExporterUser != nil {
		toSerialize["nodeExporterUser"] = o.NodeExporterUser
	}
	if o.OldOwner != nil {
		toSerialize["oldOwner"] = o.OldOwner
	}
	if o.Parallelism != nil {
		toSerialize["parallelism"] = o.Parallelism
	}
	if o.PreviousTaskUUID != nil {
		toSerialize["previousTaskUUID"] = o.PreviousTaskUUID
	}
	if o.RestoreTimeStamp != nil {
		toSerialize["restoreTimeStamp"] = o.RestoreTimeStamp
	}
	if o.SourceXClusterConfigs != nil {
		toSerialize["sourceXClusterConfigs"] = o.SourceXClusterConfigs
	}
	if o.StorageConfigUUID != nil {
		toSerialize["storageConfigUUID"] = o.StorageConfigUUID
	}
	if o.TargetXClusterConfigs != nil {
		toSerialize["targetXClusterConfigs"] = o.TargetXClusterConfigs
	}
	if true {
		toSerialize["universeUUID"] = o.UniverseUUID
	}
	if o.YbPrevSoftwareVersion != nil {
		toSerialize["ybPrevSoftwareVersion"] = o.YbPrevSoftwareVersion
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreBackupParams struct {
	value *RestoreBackupParams
	isSet bool
}

func (v NullableRestoreBackupParams) Get() *RestoreBackupParams {
	return v.value
}

func (v *NullableRestoreBackupParams) Set(val *RestoreBackupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreBackupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreBackupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreBackupParams(val *RestoreBackupParams) *NullableRestoreBackupParams {
	return &NullableRestoreBackupParams{value: val, isSet: true}
}

func (v NullableRestoreBackupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreBackupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


