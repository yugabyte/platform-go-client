/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// ConfKeyInfo struct for ConfKeyInfo
type ConfKeyInfo struct {
	DataType ConfDataTypeObject `json:"dataType"`
	DisplayName string `json:"displayName"`
	HelpTxt string `json:"helpTxt"`
	Key string `json:"key"`
	Scope string `json:"scope"`
	Tags []string `json:"tags"`
}

// NewConfKeyInfo instantiates a new ConfKeyInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfKeyInfo(dataType ConfDataTypeObject, displayName string, helpTxt string, key string, scope string, tags []string) *ConfKeyInfo {
	this := ConfKeyInfo{}
	this.DataType = dataType
	this.DisplayName = displayName
	this.HelpTxt = helpTxt
	this.Key = key
	this.Scope = scope
	this.Tags = tags
	return &this
}

// NewConfKeyInfoWithDefaults instantiates a new ConfKeyInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfKeyInfoWithDefaults() *ConfKeyInfo {
	this := ConfKeyInfo{}
	return &this
}

// GetDataType returns the DataType field value
func (o *ConfKeyInfo) GetDataType() ConfDataTypeObject {
	if o == nil {
		var ret ConfDataTypeObject
		return ret
	}

	return o.DataType
}

// GetDataTypeOk returns a tuple with the DataType field value
// and a boolean to check if the value has been set.
func (o *ConfKeyInfo) GetDataTypeOk() (*ConfDataTypeObject, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DataType, true
}

// SetDataType sets field value
func (o *ConfKeyInfo) SetDataType(v ConfDataTypeObject) {
	o.DataType = v
}

// GetDisplayName returns the DisplayName field value
func (o *ConfKeyInfo) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *ConfKeyInfo) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *ConfKeyInfo) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetHelpTxt returns the HelpTxt field value
func (o *ConfKeyInfo) GetHelpTxt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HelpTxt
}

// GetHelpTxtOk returns a tuple with the HelpTxt field value
// and a boolean to check if the value has been set.
func (o *ConfKeyInfo) GetHelpTxtOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.HelpTxt, true
}

// SetHelpTxt sets field value
func (o *ConfKeyInfo) SetHelpTxt(v string) {
	o.HelpTxt = v
}

// GetKey returns the Key field value
func (o *ConfKeyInfo) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *ConfKeyInfo) GetKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *ConfKeyInfo) SetKey(v string) {
	o.Key = v
}

// GetScope returns the Scope field value
func (o *ConfKeyInfo) GetScope() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value
// and a boolean to check if the value has been set.
func (o *ConfKeyInfo) GetScopeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Scope, true
}

// SetScope sets field value
func (o *ConfKeyInfo) SetScope(v string) {
	o.Scope = v
}

// GetTags returns the Tags field value
func (o *ConfKeyInfo) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *ConfKeyInfo) GetTagsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Tags, true
}

// SetTags sets field value
func (o *ConfKeyInfo) SetTags(v []string) {
	o.Tags = v
}

func (o ConfKeyInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["dataType"] = o.DataType
	}
	if true {
		toSerialize["displayName"] = o.DisplayName
	}
	if true {
		toSerialize["helpTxt"] = o.HelpTxt
	}
	if true {
		toSerialize["key"] = o.Key
	}
	if true {
		toSerialize["scope"] = o.Scope
	}
	if true {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableConfKeyInfo struct {
	value *ConfKeyInfo
	isSet bool
}

func (v NullableConfKeyInfo) Get() *ConfKeyInfo {
	return v.value
}

func (v *NullableConfKeyInfo) Set(val *ConfKeyInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableConfKeyInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableConfKeyInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfKeyInfo(val *ConfKeyInfo) *NullableConfKeyInfo {
	return &NullableConfKeyInfo{value: val, isSet: true}
}

func (v NullableConfKeyInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfKeyInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


