/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// PermissionDetails struct for PermissionDetails
type PermissionDetails struct {
	// Set of permissions
	PermissionList *[]Permission `json:"permissionList,omitempty"`
}

// NewPermissionDetails instantiates a new PermissionDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermissionDetails() *PermissionDetails {
	this := PermissionDetails{}
	return &this
}

// NewPermissionDetailsWithDefaults instantiates a new PermissionDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermissionDetailsWithDefaults() *PermissionDetails {
	this := PermissionDetails{}
	return &this
}

// GetPermissionList returns the PermissionList field value if set, zero value otherwise.
func (o *PermissionDetails) GetPermissionList() []Permission {
	if o == nil || o.PermissionList == nil {
		var ret []Permission
		return ret
	}
	return *o.PermissionList
}

// GetPermissionListOk returns a tuple with the PermissionList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionDetails) GetPermissionListOk() (*[]Permission, bool) {
	if o == nil || o.PermissionList == nil {
		return nil, false
	}
	return o.PermissionList, true
}

// HasPermissionList returns a boolean if a field has been set.
func (o *PermissionDetails) HasPermissionList() bool {
	if o != nil && o.PermissionList != nil {
		return true
	}

	return false
}

// SetPermissionList gets a reference to the given []Permission and assigns it to the PermissionList field.
func (o *PermissionDetails) SetPermissionList(v []Permission) {
	o.PermissionList = &v
}

func (o PermissionDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PermissionList != nil {
		toSerialize["permissionList"] = o.PermissionList
	}
	return json.Marshal(toSerialize)
}

type NullablePermissionDetails struct {
	value *PermissionDetails
	isSet bool
}

func (v NullablePermissionDetails) Get() *PermissionDetails {
	return v.value
}

func (v *NullablePermissionDetails) Set(val *PermissionDetails) {
	v.value = val
	v.isSet = true
}

func (v NullablePermissionDetails) IsSet() bool {
	return v.isSet
}

func (v *NullablePermissionDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermissionDetails(val *PermissionDetails) *NullablePermissionDetails {
	return &NullablePermissionDetails{value: val, isSet: true}
}

func (v NullablePermissionDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermissionDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


