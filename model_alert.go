/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
	"time"
)

// Alert Alert definition. Used to send an alert notification.
type Alert struct {
	// Timestamp at which the alert was acknowledged
	AcknowledgedTime *time.Time `json:"acknowledgedTime,omitempty"`
	// Alert configuration type
	ConfigurationType string `json:"configurationType"`
	// Alert configuration UUID
	ConfigurationUuid string `json:"configurationUuid"`
	// Alert creation timestamp
	CreateTime time.Time `json:"createTime"`
	// Customer UUID
	CustomerUUID string `json:"customerUUID"`
	// Alert definition UUID
	DefinitionUuid string `json:"definitionUuid"`
	Labels []AlertLabel `json:"labels"`
	// The alert's message text
	Message string `json:"message"`
	// The alert's name
	Name string `json:"name"`
	// Time of the next notification attempt
	NextNotificationTime *time.Time `json:"nextNotificationTime,omitempty"`
	// Time of the last notification attempt
	NotificationAttemptTime *time.Time `json:"notificationAttemptTime,omitempty"`
	// Count of failures to send a notification
	NotificationsFailed *int32 `json:"notificationsFailed,omitempty"`
	// Alert state in the last-sent notification
	NotifiedState *string `json:"notifiedState,omitempty"`
	// Timestamp at which the alert was resolved
	ResolvedTime *time.Time `json:"resolvedTime,omitempty"`
	// Alert configuration severity
	Severity string `json:"severity"`
	SeverityIndex int32 `json:"severityIndex"`
	// The source of the alert
	SourceName string `json:"sourceName"`
	// The sourceUUID of the alert
	SourceUUID string `json:"sourceUUID"`
	// The alert's state
	State string `json:"state"`
	StateIndex int32 `json:"stateIndex"`
	// Alert UUID
	Uuid *string `json:"uuid,omitempty"`
}

// NewAlert instantiates a new Alert object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlert(configurationType string, configurationUuid string, createTime time.Time, customerUUID string, definitionUuid string, labels []AlertLabel, message string, name string, severity string, severityIndex int32, sourceName string, sourceUUID string, state string, stateIndex int32, ) *Alert {
	this := Alert{}
	this.ConfigurationType = configurationType
	this.ConfigurationUuid = configurationUuid
	this.CreateTime = createTime
	this.CustomerUUID = customerUUID
	this.DefinitionUuid = definitionUuid
	this.Labels = labels
	this.Message = message
	this.Name = name
	this.Severity = severity
	this.SeverityIndex = severityIndex
	this.SourceName = sourceName
	this.SourceUUID = sourceUUID
	this.State = state
	this.StateIndex = stateIndex
	return &this
}

// NewAlertWithDefaults instantiates a new Alert object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertWithDefaults() *Alert {
	this := Alert{}
	return &this
}

// GetAcknowledgedTime returns the AcknowledgedTime field value if set, zero value otherwise.
func (o *Alert) GetAcknowledgedTime() time.Time {
	if o == nil || o.AcknowledgedTime == nil {
		var ret time.Time
		return ret
	}
	return *o.AcknowledgedTime
}

// GetAcknowledgedTimeOk returns a tuple with the AcknowledgedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alert) GetAcknowledgedTimeOk() (*time.Time, bool) {
	if o == nil || o.AcknowledgedTime == nil {
		return nil, false
	}
	return o.AcknowledgedTime, true
}

// HasAcknowledgedTime returns a boolean if a field has been set.
func (o *Alert) HasAcknowledgedTime() bool {
	if o != nil && o.AcknowledgedTime != nil {
		return true
	}

	return false
}

// SetAcknowledgedTime gets a reference to the given time.Time and assigns it to the AcknowledgedTime field.
func (o *Alert) SetAcknowledgedTime(v time.Time) {
	o.AcknowledgedTime = &v
}

// GetConfigurationType returns the ConfigurationType field value
func (o *Alert) GetConfigurationType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ConfigurationType
}

// GetConfigurationTypeOk returns a tuple with the ConfigurationType field value
// and a boolean to check if the value has been set.
func (o *Alert) GetConfigurationTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ConfigurationType, true
}

// SetConfigurationType sets field value
func (o *Alert) SetConfigurationType(v string) {
	o.ConfigurationType = v
}

// GetConfigurationUuid returns the ConfigurationUuid field value
func (o *Alert) GetConfigurationUuid() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ConfigurationUuid
}

// GetConfigurationUuidOk returns a tuple with the ConfigurationUuid field value
// and a boolean to check if the value has been set.
func (o *Alert) GetConfigurationUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ConfigurationUuid, true
}

// SetConfigurationUuid sets field value
func (o *Alert) SetConfigurationUuid(v string) {
	o.ConfigurationUuid = v
}

// GetCreateTime returns the CreateTime field value
func (o *Alert) GetCreateTime() time.Time {
	if o == nil  {
		var ret time.Time
		return ret
	}

	return o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value
// and a boolean to check if the value has been set.
func (o *Alert) GetCreateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreateTime, true
}

// SetCreateTime sets field value
func (o *Alert) SetCreateTime(v time.Time) {
	o.CreateTime = v
}

// GetCustomerUUID returns the CustomerUUID field value
func (o *Alert) GetCustomerUUID() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.CustomerUUID
}

// GetCustomerUUIDOk returns a tuple with the CustomerUUID field value
// and a boolean to check if the value has been set.
func (o *Alert) GetCustomerUUIDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CustomerUUID, true
}

// SetCustomerUUID sets field value
func (o *Alert) SetCustomerUUID(v string) {
	o.CustomerUUID = v
}

// GetDefinitionUuid returns the DefinitionUuid field value
func (o *Alert) GetDefinitionUuid() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.DefinitionUuid
}

// GetDefinitionUuidOk returns a tuple with the DefinitionUuid field value
// and a boolean to check if the value has been set.
func (o *Alert) GetDefinitionUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DefinitionUuid, true
}

// SetDefinitionUuid sets field value
func (o *Alert) SetDefinitionUuid(v string) {
	o.DefinitionUuid = v
}

// GetLabels returns the Labels field value
func (o *Alert) GetLabels() []AlertLabel {
	if o == nil  {
		var ret []AlertLabel
		return ret
	}

	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value
// and a boolean to check if the value has been set.
func (o *Alert) GetLabelsOk() (*[]AlertLabel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Labels, true
}

// SetLabels sets field value
func (o *Alert) SetLabels(v []AlertLabel) {
	o.Labels = v
}

// GetMessage returns the Message field value
func (o *Alert) GetMessage() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *Alert) GetMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *Alert) SetMessage(v string) {
	o.Message = v
}

// GetName returns the Name field value
func (o *Alert) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Alert) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Alert) SetName(v string) {
	o.Name = v
}

// GetNextNotificationTime returns the NextNotificationTime field value if set, zero value otherwise.
func (o *Alert) GetNextNotificationTime() time.Time {
	if o == nil || o.NextNotificationTime == nil {
		var ret time.Time
		return ret
	}
	return *o.NextNotificationTime
}

// GetNextNotificationTimeOk returns a tuple with the NextNotificationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alert) GetNextNotificationTimeOk() (*time.Time, bool) {
	if o == nil || o.NextNotificationTime == nil {
		return nil, false
	}
	return o.NextNotificationTime, true
}

// HasNextNotificationTime returns a boolean if a field has been set.
func (o *Alert) HasNextNotificationTime() bool {
	if o != nil && o.NextNotificationTime != nil {
		return true
	}

	return false
}

// SetNextNotificationTime gets a reference to the given time.Time and assigns it to the NextNotificationTime field.
func (o *Alert) SetNextNotificationTime(v time.Time) {
	o.NextNotificationTime = &v
}

// GetNotificationAttemptTime returns the NotificationAttemptTime field value if set, zero value otherwise.
func (o *Alert) GetNotificationAttemptTime() time.Time {
	if o == nil || o.NotificationAttemptTime == nil {
		var ret time.Time
		return ret
	}
	return *o.NotificationAttemptTime
}

// GetNotificationAttemptTimeOk returns a tuple with the NotificationAttemptTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alert) GetNotificationAttemptTimeOk() (*time.Time, bool) {
	if o == nil || o.NotificationAttemptTime == nil {
		return nil, false
	}
	return o.NotificationAttemptTime, true
}

// HasNotificationAttemptTime returns a boolean if a field has been set.
func (o *Alert) HasNotificationAttemptTime() bool {
	if o != nil && o.NotificationAttemptTime != nil {
		return true
	}

	return false
}

// SetNotificationAttemptTime gets a reference to the given time.Time and assigns it to the NotificationAttemptTime field.
func (o *Alert) SetNotificationAttemptTime(v time.Time) {
	o.NotificationAttemptTime = &v
}

// GetNotificationsFailed returns the NotificationsFailed field value if set, zero value otherwise.
func (o *Alert) GetNotificationsFailed() int32 {
	if o == nil || o.NotificationsFailed == nil {
		var ret int32
		return ret
	}
	return *o.NotificationsFailed
}

// GetNotificationsFailedOk returns a tuple with the NotificationsFailed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alert) GetNotificationsFailedOk() (*int32, bool) {
	if o == nil || o.NotificationsFailed == nil {
		return nil, false
	}
	return o.NotificationsFailed, true
}

// HasNotificationsFailed returns a boolean if a field has been set.
func (o *Alert) HasNotificationsFailed() bool {
	if o != nil && o.NotificationsFailed != nil {
		return true
	}

	return false
}

// SetNotificationsFailed gets a reference to the given int32 and assigns it to the NotificationsFailed field.
func (o *Alert) SetNotificationsFailed(v int32) {
	o.NotificationsFailed = &v
}

// GetNotifiedState returns the NotifiedState field value if set, zero value otherwise.
func (o *Alert) GetNotifiedState() string {
	if o == nil || o.NotifiedState == nil {
		var ret string
		return ret
	}
	return *o.NotifiedState
}

// GetNotifiedStateOk returns a tuple with the NotifiedState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alert) GetNotifiedStateOk() (*string, bool) {
	if o == nil || o.NotifiedState == nil {
		return nil, false
	}
	return o.NotifiedState, true
}

// HasNotifiedState returns a boolean if a field has been set.
func (o *Alert) HasNotifiedState() bool {
	if o != nil && o.NotifiedState != nil {
		return true
	}

	return false
}

// SetNotifiedState gets a reference to the given string and assigns it to the NotifiedState field.
func (o *Alert) SetNotifiedState(v string) {
	o.NotifiedState = &v
}

// GetResolvedTime returns the ResolvedTime field value if set, zero value otherwise.
func (o *Alert) GetResolvedTime() time.Time {
	if o == nil || o.ResolvedTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ResolvedTime
}

// GetResolvedTimeOk returns a tuple with the ResolvedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alert) GetResolvedTimeOk() (*time.Time, bool) {
	if o == nil || o.ResolvedTime == nil {
		return nil, false
	}
	return o.ResolvedTime, true
}

// HasResolvedTime returns a boolean if a field has been set.
func (o *Alert) HasResolvedTime() bool {
	if o != nil && o.ResolvedTime != nil {
		return true
	}

	return false
}

// SetResolvedTime gets a reference to the given time.Time and assigns it to the ResolvedTime field.
func (o *Alert) SetResolvedTime(v time.Time) {
	o.ResolvedTime = &v
}

// GetSeverity returns the Severity field value
func (o *Alert) GetSeverity() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *Alert) GetSeverityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *Alert) SetSeverity(v string) {
	o.Severity = v
}

// GetSeverityIndex returns the SeverityIndex field value
func (o *Alert) GetSeverityIndex() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.SeverityIndex
}

// GetSeverityIndexOk returns a tuple with the SeverityIndex field value
// and a boolean to check if the value has been set.
func (o *Alert) GetSeverityIndexOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SeverityIndex, true
}

// SetSeverityIndex sets field value
func (o *Alert) SetSeverityIndex(v int32) {
	o.SeverityIndex = v
}

// GetSourceName returns the SourceName field value
func (o *Alert) GetSourceName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SourceName
}

// GetSourceNameOk returns a tuple with the SourceName field value
// and a boolean to check if the value has been set.
func (o *Alert) GetSourceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SourceName, true
}

// SetSourceName sets field value
func (o *Alert) SetSourceName(v string) {
	o.SourceName = v
}

// GetSourceUUID returns the SourceUUID field value
func (o *Alert) GetSourceUUID() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SourceUUID
}

// GetSourceUUIDOk returns a tuple with the SourceUUID field value
// and a boolean to check if the value has been set.
func (o *Alert) GetSourceUUIDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SourceUUID, true
}

// SetSourceUUID sets field value
func (o *Alert) SetSourceUUID(v string) {
	o.SourceUUID = v
}

// GetState returns the State field value
func (o *Alert) GetState() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *Alert) GetStateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *Alert) SetState(v string) {
	o.State = v
}

// GetStateIndex returns the StateIndex field value
func (o *Alert) GetStateIndex() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.StateIndex
}

// GetStateIndexOk returns a tuple with the StateIndex field value
// and a boolean to check if the value has been set.
func (o *Alert) GetStateIndexOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StateIndex, true
}

// SetStateIndex sets field value
func (o *Alert) SetStateIndex(v int32) {
	o.StateIndex = v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *Alert) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alert) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *Alert) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *Alert) SetUuid(v string) {
	o.Uuid = &v
}

func (o Alert) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AcknowledgedTime != nil {
		toSerialize["acknowledgedTime"] = o.AcknowledgedTime
	}
	if true {
		toSerialize["configurationType"] = o.ConfigurationType
	}
	if true {
		toSerialize["configurationUuid"] = o.ConfigurationUuid
	}
	if true {
		toSerialize["createTime"] = o.CreateTime
	}
	if true {
		toSerialize["customerUUID"] = o.CustomerUUID
	}
	if true {
		toSerialize["definitionUuid"] = o.DefinitionUuid
	}
	if true {
		toSerialize["labels"] = o.Labels
	}
	if true {
		toSerialize["message"] = o.Message
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.NextNotificationTime != nil {
		toSerialize["nextNotificationTime"] = o.NextNotificationTime
	}
	if o.NotificationAttemptTime != nil {
		toSerialize["notificationAttemptTime"] = o.NotificationAttemptTime
	}
	if o.NotificationsFailed != nil {
		toSerialize["notificationsFailed"] = o.NotificationsFailed
	}
	if o.NotifiedState != nil {
		toSerialize["notifiedState"] = o.NotifiedState
	}
	if o.ResolvedTime != nil {
		toSerialize["resolvedTime"] = o.ResolvedTime
	}
	if true {
		toSerialize["severity"] = o.Severity
	}
	if true {
		toSerialize["severityIndex"] = o.SeverityIndex
	}
	if true {
		toSerialize["sourceName"] = o.SourceName
	}
	if true {
		toSerialize["sourceUUID"] = o.SourceUUID
	}
	if true {
		toSerialize["state"] = o.State
	}
	if true {
		toSerialize["stateIndex"] = o.StateIndex
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	return json.Marshal(toSerialize)
}

type NullableAlert struct {
	value *Alert
	isSet bool
}

func (v NullableAlert) Get() *Alert {
	return v.value
}

func (v *NullableAlert) Set(val *Alert) {
	v.value = val
	v.isSet = true
}

func (v NullableAlert) IsSet() bool {
	return v.isSet
}

func (v *NullableAlert) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlert(val *Alert) *NullableAlert {
	return &NullableAlert{value: val, isSet: true}
}

func (v NullableAlert) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlert) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


