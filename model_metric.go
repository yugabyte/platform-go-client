/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// Metric struct for Metric
type Metric struct {
	Help string `json:"help"`
	Name string `json:"name"`
	Unit string `json:"unit"`
	Values []MetricValue `json:"values"`
}

// NewMetric instantiates a new Metric object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetric(help string, name string, unit string, values []MetricValue) *Metric {
	this := Metric{}
	this.Help = help
	this.Name = name
	this.Unit = unit
	this.Values = values
	return &this
}

// NewMetricWithDefaults instantiates a new Metric object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricWithDefaults() *Metric {
	this := Metric{}
	return &this
}

// GetHelp returns the Help field value
func (o *Metric) GetHelp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Help
}

// GetHelpOk returns a tuple with the Help field value
// and a boolean to check if the value has been set.
func (o *Metric) GetHelpOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Help, true
}

// SetHelp sets field value
func (o *Metric) SetHelp(v string) {
	o.Help = v
}

// GetName returns the Name field value
func (o *Metric) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Metric) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Metric) SetName(v string) {
	o.Name = v
}

// GetUnit returns the Unit field value
func (o *Metric) GetUnit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Unit
}

// GetUnitOk returns a tuple with the Unit field value
// and a boolean to check if the value has been set.
func (o *Metric) GetUnitOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Unit, true
}

// SetUnit sets field value
func (o *Metric) SetUnit(v string) {
	o.Unit = v
}

// GetValues returns the Values field value
func (o *Metric) GetValues() []MetricValue {
	if o == nil {
		var ret []MetricValue
		return ret
	}

	return o.Values
}

// GetValuesOk returns a tuple with the Values field value
// and a boolean to check if the value has been set.
func (o *Metric) GetValuesOk() (*[]MetricValue, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Values, true
}

// SetValues sets field value
func (o *Metric) SetValues(v []MetricValue) {
	o.Values = v
}

func (o Metric) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["help"] = o.Help
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["unit"] = o.Unit
	}
	if true {
		toSerialize["values"] = o.Values
	}
	return json.Marshal(toSerialize)
}

type NullableMetric struct {
	value *Metric
	isSet bool
}

func (v NullableMetric) Get() *Metric {
	return v.value
}

func (v *NullableMetric) Set(val *Metric) {
	v.value = val
	v.isSet = true
}

func (v NullableMetric) IsSet() bool {
	return v.isSet
}

func (v *NullableMetric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetric(val *Metric) *NullableMetric {
	return &NullableMetric{value: val, isSet: true}
}

func (v NullableMetric) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


