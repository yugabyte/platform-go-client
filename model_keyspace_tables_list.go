/*
 * Yugabyte Platform APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// KeyspaceTablesList struct for KeyspaceTablesList
type KeyspaceTablesList struct {
	BackupSizeInBytes int64 `json:"backupSizeInBytes"`
	Keyspace string `json:"keyspace"`
	StorageLocation string `json:"storageLocation"`
	TablesList []string `json:"tablesList"`
}

// NewKeyspaceTablesList instantiates a new KeyspaceTablesList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyspaceTablesList(backupSizeInBytes int64, keyspace string, storageLocation string, tablesList []string, ) *KeyspaceTablesList {
	this := KeyspaceTablesList{}
	this.BackupSizeInBytes = backupSizeInBytes
	this.Keyspace = keyspace
	this.StorageLocation = storageLocation
	this.TablesList = tablesList
	return &this
}

// NewKeyspaceTablesListWithDefaults instantiates a new KeyspaceTablesList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyspaceTablesListWithDefaults() *KeyspaceTablesList {
	this := KeyspaceTablesList{}
	return &this
}

// GetBackupSizeInBytes returns the BackupSizeInBytes field value
func (o *KeyspaceTablesList) GetBackupSizeInBytes() int64 {
	if o == nil  {
		var ret int64
		return ret
	}

	return o.BackupSizeInBytes
}

// GetBackupSizeInBytesOk returns a tuple with the BackupSizeInBytes field value
// and a boolean to check if the value has been set.
func (o *KeyspaceTablesList) GetBackupSizeInBytesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BackupSizeInBytes, true
}

// SetBackupSizeInBytes sets field value
func (o *KeyspaceTablesList) SetBackupSizeInBytes(v int64) {
	o.BackupSizeInBytes = v
}

// GetKeyspace returns the Keyspace field value
func (o *KeyspaceTablesList) GetKeyspace() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Keyspace
}

// GetKeyspaceOk returns a tuple with the Keyspace field value
// and a boolean to check if the value has been set.
func (o *KeyspaceTablesList) GetKeyspaceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Keyspace, true
}

// SetKeyspace sets field value
func (o *KeyspaceTablesList) SetKeyspace(v string) {
	o.Keyspace = v
}

// GetStorageLocation returns the StorageLocation field value
func (o *KeyspaceTablesList) GetStorageLocation() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.StorageLocation
}

// GetStorageLocationOk returns a tuple with the StorageLocation field value
// and a boolean to check if the value has been set.
func (o *KeyspaceTablesList) GetStorageLocationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StorageLocation, true
}

// SetStorageLocation sets field value
func (o *KeyspaceTablesList) SetStorageLocation(v string) {
	o.StorageLocation = v
}

// GetTablesList returns the TablesList field value
func (o *KeyspaceTablesList) GetTablesList() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.TablesList
}

// GetTablesListOk returns a tuple with the TablesList field value
// and a boolean to check if the value has been set.
func (o *KeyspaceTablesList) GetTablesListOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TablesList, true
}

// SetTablesList sets field value
func (o *KeyspaceTablesList) SetTablesList(v []string) {
	o.TablesList = v
}

func (o KeyspaceTablesList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["backupSizeInBytes"] = o.BackupSizeInBytes
	}
	if true {
		toSerialize["keyspace"] = o.Keyspace
	}
	if true {
		toSerialize["storageLocation"] = o.StorageLocation
	}
	if true {
		toSerialize["tablesList"] = o.TablesList
	}
	return json.Marshal(toSerialize)
}

type NullableKeyspaceTablesList struct {
	value *KeyspaceTablesList
	isSet bool
}

func (v NullableKeyspaceTablesList) Get() *KeyspaceTablesList {
	return v.value
}

func (v *NullableKeyspaceTablesList) Set(val *KeyspaceTablesList) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyspaceTablesList) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyspaceTablesList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyspaceTablesList(val *KeyspaceTablesList) *NullableKeyspaceTablesList {
	return &NullableKeyspaceTablesList{value: val, isSet: true}
}

func (v NullableKeyspaceTablesList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyspaceTablesList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


