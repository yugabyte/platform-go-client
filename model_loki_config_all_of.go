/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// LokiConfigAllOf Loki Config
type LokiConfigAllOf struct {
	// Auth Type
	AuthType string `json:"authType"`
	BasicAuth *BasicAuthCredentials `json:"basicAuth,omitempty"`
	// End Point
	Endpoint string `json:"endpoint"`
	// Organization/Tenant ID
	OrganizationID *string `json:"organizationID,omitempty"`
}

// NewLokiConfigAllOf instantiates a new LokiConfigAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLokiConfigAllOf(authType string, endpoint string) *LokiConfigAllOf {
	this := LokiConfigAllOf{}
	this.AuthType = authType
	this.Endpoint = endpoint
	return &this
}

// NewLokiConfigAllOfWithDefaults instantiates a new LokiConfigAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLokiConfigAllOfWithDefaults() *LokiConfigAllOf {
	this := LokiConfigAllOf{}
	return &this
}

// GetAuthType returns the AuthType field value
func (o *LokiConfigAllOf) GetAuthType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthType
}

// GetAuthTypeOk returns a tuple with the AuthType field value
// and a boolean to check if the value has been set.
func (o *LokiConfigAllOf) GetAuthTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AuthType, true
}

// SetAuthType sets field value
func (o *LokiConfigAllOf) SetAuthType(v string) {
	o.AuthType = v
}

// GetBasicAuth returns the BasicAuth field value if set, zero value otherwise.
func (o *LokiConfigAllOf) GetBasicAuth() BasicAuthCredentials {
	if o == nil || o.BasicAuth == nil {
		var ret BasicAuthCredentials
		return ret
	}
	return *o.BasicAuth
}

// GetBasicAuthOk returns a tuple with the BasicAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LokiConfigAllOf) GetBasicAuthOk() (*BasicAuthCredentials, bool) {
	if o == nil || o.BasicAuth == nil {
		return nil, false
	}
	return o.BasicAuth, true
}

// HasBasicAuth returns a boolean if a field has been set.
func (o *LokiConfigAllOf) HasBasicAuth() bool {
	if o != nil && o.BasicAuth != nil {
		return true
	}

	return false
}

// SetBasicAuth gets a reference to the given BasicAuthCredentials and assigns it to the BasicAuth field.
func (o *LokiConfigAllOf) SetBasicAuth(v BasicAuthCredentials) {
	o.BasicAuth = &v
}

// GetEndpoint returns the Endpoint field value
func (o *LokiConfigAllOf) GetEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *LokiConfigAllOf) GetEndpointOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Endpoint, true
}

// SetEndpoint sets field value
func (o *LokiConfigAllOf) SetEndpoint(v string) {
	o.Endpoint = v
}

// GetOrganizationID returns the OrganizationID field value if set, zero value otherwise.
func (o *LokiConfigAllOf) GetOrganizationID() string {
	if o == nil || o.OrganizationID == nil {
		var ret string
		return ret
	}
	return *o.OrganizationID
}

// GetOrganizationIDOk returns a tuple with the OrganizationID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LokiConfigAllOf) GetOrganizationIDOk() (*string, bool) {
	if o == nil || o.OrganizationID == nil {
		return nil, false
	}
	return o.OrganizationID, true
}

// HasOrganizationID returns a boolean if a field has been set.
func (o *LokiConfigAllOf) HasOrganizationID() bool {
	if o != nil && o.OrganizationID != nil {
		return true
	}

	return false
}

// SetOrganizationID gets a reference to the given string and assigns it to the OrganizationID field.
func (o *LokiConfigAllOf) SetOrganizationID(v string) {
	o.OrganizationID = &v
}

func (o LokiConfigAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["authType"] = o.AuthType
	}
	if o.BasicAuth != nil {
		toSerialize["basicAuth"] = o.BasicAuth
	}
	if true {
		toSerialize["endpoint"] = o.Endpoint
	}
	if o.OrganizationID != nil {
		toSerialize["organizationID"] = o.OrganizationID
	}
	return json.Marshal(toSerialize)
}

type NullableLokiConfigAllOf struct {
	value *LokiConfigAllOf
	isSet bool
}

func (v NullableLokiConfigAllOf) Get() *LokiConfigAllOf {
	return v.value
}

func (v *NullableLokiConfigAllOf) Set(val *LokiConfigAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableLokiConfigAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableLokiConfigAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLokiConfigAllOf(val *LokiConfigAllOf) *NullableLokiConfigAllOf {
	return &NullableLokiConfigAllOf{value: val, isSet: true}
}

func (v NullableLokiConfigAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLokiConfigAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


