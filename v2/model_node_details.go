/*
 * YugabyteDB Anywhere V2 APIs
 *
 * An improved set of APIs for managing YugabyteDB Anywhere
 *
 * API version: v2
 * Contact: support@yugabyte.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"time"
)

// NodeDetails Details of a cloud node. Part of UniverseInfo.
type NodeDetails struct {
	// The availability zone's UUID
	AzUuid *string `json:"az_uuid,omitempty"`
	CloudInfo *CloudSpecificInfo `json:"cloud_info,omitempty"`
	// True if cron jobs were properly configured for this node
	CronsActive *bool `json:"crons_active,omitempty"`
	// Used for configurations where each node can have only one process
	DedicatedTo *string `json:"dedicated_to,omitempty"`
	// Disks are mounted by uuid
	DisksAreMountedByUuid *bool `json:"disks_are_mounted_by_uuid,omitempty"`
	// True if this node is a master
	IsMaster *bool `json:"is_master,omitempty"`
	// True if this node is a REDIS server
	IsRedisServer *bool `json:"is_redis_server,omitempty"`
	// True if this node is a Tablet server
	IsTserver *bool `json:"is_tserver,omitempty"`
	// True if this node is a YCQL server
	IsYqlServer *bool `json:"is_yql_server,omitempty"`
	// True if this node is a YSQL server
	IsYsqlServer *bool `json:"is_ysql_server,omitempty"`
	// Store last volume update time
	LastVolumeUpdateTime *time.Time `json:"last_volume_update_time,omitempty"`
	// Machine image name
	MachineImage *string `json:"machine_image,omitempty"`
	// Master state
	MasterState *string `json:"master_state,omitempty"`
	// Node ID
	NodeIdx *int32 `json:"node_idx,omitempty"`
	// Node name
	NodeName *string `json:"node_name,omitempty"`
	// Node UUID
	NodeUuid *string `json:"node_uuid,omitempty"`
	// UUID of the cluster to which this node belongs
	PlacementUuid *string `json:"placement_uuid,omitempty"`
	// SSH port override for the AMI
	SshPortOverride *int32 `json:"ssh_port_override,omitempty"`
	// SSH user override for the AMI
	SshUserOverride *string `json:"ssh_user_override,omitempty"`
	// Node state
	State *string `json:"state,omitempty"`
	// True if this a custom YB AMI
	YbPrebuiltAmi *bool `json:"yb_prebuilt_ami,omitempty"`
}

// NewNodeDetails instantiates a new NodeDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodeDetails() *NodeDetails {
	this := NodeDetails{}
	return &this
}

// NewNodeDetailsWithDefaults instantiates a new NodeDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeDetailsWithDefaults() *NodeDetails {
	this := NodeDetails{}
	return &this
}

// GetAzUuid returns the AzUuid field value if set, zero value otherwise.
func (o *NodeDetails) GetAzUuid() string {
	if o == nil || o.AzUuid == nil {
		var ret string
		return ret
	}
	return *o.AzUuid
}

// GetAzUuidOk returns a tuple with the AzUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeDetails) GetAzUuidOk() (*string, bool) {
	if o == nil || o.AzUuid == nil {
		return nil, false
	}
	return o.AzUuid, true
}

// HasAzUuid returns a boolean if a field has been set.
func (o *NodeDetails) HasAzUuid() bool {
	if o != nil && o.AzUuid != nil {
		return true
	}

	return false
}

// SetAzUuid gets a reference to the given string and assigns it to the AzUuid field.
func (o *NodeDetails) SetAzUuid(v string) {
	o.AzUuid = &v
}

// GetCloudInfo returns the CloudInfo field value if set, zero value otherwise.
func (o *NodeDetails) GetCloudInfo() CloudSpecificInfo {
	if o == nil || o.CloudInfo == nil {
		var ret CloudSpecificInfo
		return ret
	}
	return *o.CloudInfo
}

// GetCloudInfoOk returns a tuple with the CloudInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeDetails) GetCloudInfoOk() (*CloudSpecificInfo, bool) {
	if o == nil || o.CloudInfo == nil {
		return nil, false
	}
	return o.CloudInfo, true
}

// HasCloudInfo returns a boolean if a field has been set.
func (o *NodeDetails) HasCloudInfo() bool {
	if o != nil && o.CloudInfo != nil {
		return true
	}

	return false
}

// SetCloudInfo gets a reference to the given CloudSpecificInfo and assigns it to the CloudInfo field.
func (o *NodeDetails) SetCloudInfo(v CloudSpecificInfo) {
	o.CloudInfo = &v
}

// GetCronsActive returns the CronsActive field value if set, zero value otherwise.
func (o *NodeDetails) GetCronsActive() bool {
	if o == nil || o.CronsActive == nil {
		var ret bool
		return ret
	}
	return *o.CronsActive
}

// GetCronsActiveOk returns a tuple with the CronsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeDetails) GetCronsActiveOk() (*bool, bool) {
	if o == nil || o.CronsActive == nil {
		return nil, false
	}
	return o.CronsActive, true
}

// HasCronsActive returns a boolean if a field has been set.
func (o *NodeDetails) HasCronsActive() bool {
	if o != nil && o.CronsActive != nil {
		return true
	}

	return false
}

// SetCronsActive gets a reference to the given bool and assigns it to the CronsActive field.
func (o *NodeDetails) SetCronsActive(v bool) {
	o.CronsActive = &v
}

// GetDedicatedTo returns the DedicatedTo field value if set, zero value otherwise.
func (o *NodeDetails) GetDedicatedTo() string {
	if o == nil || o.DedicatedTo == nil {
		var ret string
		return ret
	}
	return *o.DedicatedTo
}

// GetDedicatedToOk returns a tuple with the DedicatedTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeDetails) GetDedicatedToOk() (*string, bool) {
	if o == nil || o.DedicatedTo == nil {
		return nil, false
	}
	return o.DedicatedTo, true
}

// HasDedicatedTo returns a boolean if a field has been set.
func (o *NodeDetails) HasDedicatedTo() bool {
	if o != nil && o.DedicatedTo != nil {
		return true
	}

	return false
}

// SetDedicatedTo gets a reference to the given string and assigns it to the DedicatedTo field.
func (o *NodeDetails) SetDedicatedTo(v string) {
	o.DedicatedTo = &v
}

// GetDisksAreMountedByUuid returns the DisksAreMountedByUuid field value if set, zero value otherwise.
func (o *NodeDetails) GetDisksAreMountedByUuid() bool {
	if o == nil || o.DisksAreMountedByUuid == nil {
		var ret bool
		return ret
	}
	return *o.DisksAreMountedByUuid
}

// GetDisksAreMountedByUuidOk returns a tuple with the DisksAreMountedByUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeDetails) GetDisksAreMountedByUuidOk() (*bool, bool) {
	if o == nil || o.DisksAreMountedByUuid == nil {
		return nil, false
	}
	return o.DisksAreMountedByUuid, true
}

// HasDisksAreMountedByUuid returns a boolean if a field has been set.
func (o *NodeDetails) HasDisksAreMountedByUuid() bool {
	if o != nil && o.DisksAreMountedByUuid != nil {
		return true
	}

	return false
}

// SetDisksAreMountedByUuid gets a reference to the given bool and assigns it to the DisksAreMountedByUuid field.
func (o *NodeDetails) SetDisksAreMountedByUuid(v bool) {
	o.DisksAreMountedByUuid = &v
}

// GetIsMaster returns the IsMaster field value if set, zero value otherwise.
func (o *NodeDetails) GetIsMaster() bool {
	if o == nil || o.IsMaster == nil {
		var ret bool
		return ret
	}
	return *o.IsMaster
}

// GetIsMasterOk returns a tuple with the IsMaster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeDetails) GetIsMasterOk() (*bool, bool) {
	if o == nil || o.IsMaster == nil {
		return nil, false
	}
	return o.IsMaster, true
}

// HasIsMaster returns a boolean if a field has been set.
func (o *NodeDetails) HasIsMaster() bool {
	if o != nil && o.IsMaster != nil {
		return true
	}

	return false
}

// SetIsMaster gets a reference to the given bool and assigns it to the IsMaster field.
func (o *NodeDetails) SetIsMaster(v bool) {
	o.IsMaster = &v
}

// GetIsRedisServer returns the IsRedisServer field value if set, zero value otherwise.
func (o *NodeDetails) GetIsRedisServer() bool {
	if o == nil || o.IsRedisServer == nil {
		var ret bool
		return ret
	}
	return *o.IsRedisServer
}

// GetIsRedisServerOk returns a tuple with the IsRedisServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeDetails) GetIsRedisServerOk() (*bool, bool) {
	if o == nil || o.IsRedisServer == nil {
		return nil, false
	}
	return o.IsRedisServer, true
}

// HasIsRedisServer returns a boolean if a field has been set.
func (o *NodeDetails) HasIsRedisServer() bool {
	if o != nil && o.IsRedisServer != nil {
		return true
	}

	return false
}

// SetIsRedisServer gets a reference to the given bool and assigns it to the IsRedisServer field.
func (o *NodeDetails) SetIsRedisServer(v bool) {
	o.IsRedisServer = &v
}

// GetIsTserver returns the IsTserver field value if set, zero value otherwise.
func (o *NodeDetails) GetIsTserver() bool {
	if o == nil || o.IsTserver == nil {
		var ret bool
		return ret
	}
	return *o.IsTserver
}

// GetIsTserverOk returns a tuple with the IsTserver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeDetails) GetIsTserverOk() (*bool, bool) {
	if o == nil || o.IsTserver == nil {
		return nil, false
	}
	return o.IsTserver, true
}

// HasIsTserver returns a boolean if a field has been set.
func (o *NodeDetails) HasIsTserver() bool {
	if o != nil && o.IsTserver != nil {
		return true
	}

	return false
}

// SetIsTserver gets a reference to the given bool and assigns it to the IsTserver field.
func (o *NodeDetails) SetIsTserver(v bool) {
	o.IsTserver = &v
}

// GetIsYqlServer returns the IsYqlServer field value if set, zero value otherwise.
func (o *NodeDetails) GetIsYqlServer() bool {
	if o == nil || o.IsYqlServer == nil {
		var ret bool
		return ret
	}
	return *o.IsYqlServer
}

// GetIsYqlServerOk returns a tuple with the IsYqlServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeDetails) GetIsYqlServerOk() (*bool, bool) {
	if o == nil || o.IsYqlServer == nil {
		return nil, false
	}
	return o.IsYqlServer, true
}

// HasIsYqlServer returns a boolean if a field has been set.
func (o *NodeDetails) HasIsYqlServer() bool {
	if o != nil && o.IsYqlServer != nil {
		return true
	}

	return false
}

// SetIsYqlServer gets a reference to the given bool and assigns it to the IsYqlServer field.
func (o *NodeDetails) SetIsYqlServer(v bool) {
	o.IsYqlServer = &v
}

// GetIsYsqlServer returns the IsYsqlServer field value if set, zero value otherwise.
func (o *NodeDetails) GetIsYsqlServer() bool {
	if o == nil || o.IsYsqlServer == nil {
		var ret bool
		return ret
	}
	return *o.IsYsqlServer
}

// GetIsYsqlServerOk returns a tuple with the IsYsqlServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeDetails) GetIsYsqlServerOk() (*bool, bool) {
	if o == nil || o.IsYsqlServer == nil {
		return nil, false
	}
	return o.IsYsqlServer, true
}

// HasIsYsqlServer returns a boolean if a field has been set.
func (o *NodeDetails) HasIsYsqlServer() bool {
	if o != nil && o.IsYsqlServer != nil {
		return true
	}

	return false
}

// SetIsYsqlServer gets a reference to the given bool and assigns it to the IsYsqlServer field.
func (o *NodeDetails) SetIsYsqlServer(v bool) {
	o.IsYsqlServer = &v
}

// GetLastVolumeUpdateTime returns the LastVolumeUpdateTime field value if set, zero value otherwise.
func (o *NodeDetails) GetLastVolumeUpdateTime() time.Time {
	if o == nil || o.LastVolumeUpdateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastVolumeUpdateTime
}

// GetLastVolumeUpdateTimeOk returns a tuple with the LastVolumeUpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeDetails) GetLastVolumeUpdateTimeOk() (*time.Time, bool) {
	if o == nil || o.LastVolumeUpdateTime == nil {
		return nil, false
	}
	return o.LastVolumeUpdateTime, true
}

// HasLastVolumeUpdateTime returns a boolean if a field has been set.
func (o *NodeDetails) HasLastVolumeUpdateTime() bool {
	if o != nil && o.LastVolumeUpdateTime != nil {
		return true
	}

	return false
}

// SetLastVolumeUpdateTime gets a reference to the given time.Time and assigns it to the LastVolumeUpdateTime field.
func (o *NodeDetails) SetLastVolumeUpdateTime(v time.Time) {
	o.LastVolumeUpdateTime = &v
}

// GetMachineImage returns the MachineImage field value if set, zero value otherwise.
func (o *NodeDetails) GetMachineImage() string {
	if o == nil || o.MachineImage == nil {
		var ret string
		return ret
	}
	return *o.MachineImage
}

// GetMachineImageOk returns a tuple with the MachineImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeDetails) GetMachineImageOk() (*string, bool) {
	if o == nil || o.MachineImage == nil {
		return nil, false
	}
	return o.MachineImage, true
}

// HasMachineImage returns a boolean if a field has been set.
func (o *NodeDetails) HasMachineImage() bool {
	if o != nil && o.MachineImage != nil {
		return true
	}

	return false
}

// SetMachineImage gets a reference to the given string and assigns it to the MachineImage field.
func (o *NodeDetails) SetMachineImage(v string) {
	o.MachineImage = &v
}

// GetMasterState returns the MasterState field value if set, zero value otherwise.
func (o *NodeDetails) GetMasterState() string {
	if o == nil || o.MasterState == nil {
		var ret string
		return ret
	}
	return *o.MasterState
}

// GetMasterStateOk returns a tuple with the MasterState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeDetails) GetMasterStateOk() (*string, bool) {
	if o == nil || o.MasterState == nil {
		return nil, false
	}
	return o.MasterState, true
}

// HasMasterState returns a boolean if a field has been set.
func (o *NodeDetails) HasMasterState() bool {
	if o != nil && o.MasterState != nil {
		return true
	}

	return false
}

// SetMasterState gets a reference to the given string and assigns it to the MasterState field.
func (o *NodeDetails) SetMasterState(v string) {
	o.MasterState = &v
}

// GetNodeIdx returns the NodeIdx field value if set, zero value otherwise.
func (o *NodeDetails) GetNodeIdx() int32 {
	if o == nil || o.NodeIdx == nil {
		var ret int32
		return ret
	}
	return *o.NodeIdx
}

// GetNodeIdxOk returns a tuple with the NodeIdx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeDetails) GetNodeIdxOk() (*int32, bool) {
	if o == nil || o.NodeIdx == nil {
		return nil, false
	}
	return o.NodeIdx, true
}

// HasNodeIdx returns a boolean if a field has been set.
func (o *NodeDetails) HasNodeIdx() bool {
	if o != nil && o.NodeIdx != nil {
		return true
	}

	return false
}

// SetNodeIdx gets a reference to the given int32 and assigns it to the NodeIdx field.
func (o *NodeDetails) SetNodeIdx(v int32) {
	o.NodeIdx = &v
}

// GetNodeName returns the NodeName field value if set, zero value otherwise.
func (o *NodeDetails) GetNodeName() string {
	if o == nil || o.NodeName == nil {
		var ret string
		return ret
	}
	return *o.NodeName
}

// GetNodeNameOk returns a tuple with the NodeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeDetails) GetNodeNameOk() (*string, bool) {
	if o == nil || o.NodeName == nil {
		return nil, false
	}
	return o.NodeName, true
}

// HasNodeName returns a boolean if a field has been set.
func (o *NodeDetails) HasNodeName() bool {
	if o != nil && o.NodeName != nil {
		return true
	}

	return false
}

// SetNodeName gets a reference to the given string and assigns it to the NodeName field.
func (o *NodeDetails) SetNodeName(v string) {
	o.NodeName = &v
}

// GetNodeUuid returns the NodeUuid field value if set, zero value otherwise.
func (o *NodeDetails) GetNodeUuid() string {
	if o == nil || o.NodeUuid == nil {
		var ret string
		return ret
	}
	return *o.NodeUuid
}

// GetNodeUuidOk returns a tuple with the NodeUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeDetails) GetNodeUuidOk() (*string, bool) {
	if o == nil || o.NodeUuid == nil {
		return nil, false
	}
	return o.NodeUuid, true
}

// HasNodeUuid returns a boolean if a field has been set.
func (o *NodeDetails) HasNodeUuid() bool {
	if o != nil && o.NodeUuid != nil {
		return true
	}

	return false
}

// SetNodeUuid gets a reference to the given string and assigns it to the NodeUuid field.
func (o *NodeDetails) SetNodeUuid(v string) {
	o.NodeUuid = &v
}

// GetPlacementUuid returns the PlacementUuid field value if set, zero value otherwise.
func (o *NodeDetails) GetPlacementUuid() string {
	if o == nil || o.PlacementUuid == nil {
		var ret string
		return ret
	}
	return *o.PlacementUuid
}

// GetPlacementUuidOk returns a tuple with the PlacementUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeDetails) GetPlacementUuidOk() (*string, bool) {
	if o == nil || o.PlacementUuid == nil {
		return nil, false
	}
	return o.PlacementUuid, true
}

// HasPlacementUuid returns a boolean if a field has been set.
func (o *NodeDetails) HasPlacementUuid() bool {
	if o != nil && o.PlacementUuid != nil {
		return true
	}

	return false
}

// SetPlacementUuid gets a reference to the given string and assigns it to the PlacementUuid field.
func (o *NodeDetails) SetPlacementUuid(v string) {
	o.PlacementUuid = &v
}

// GetSshPortOverride returns the SshPortOverride field value if set, zero value otherwise.
func (o *NodeDetails) GetSshPortOverride() int32 {
	if o == nil || o.SshPortOverride == nil {
		var ret int32
		return ret
	}
	return *o.SshPortOverride
}

// GetSshPortOverrideOk returns a tuple with the SshPortOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeDetails) GetSshPortOverrideOk() (*int32, bool) {
	if o == nil || o.SshPortOverride == nil {
		return nil, false
	}
	return o.SshPortOverride, true
}

// HasSshPortOverride returns a boolean if a field has been set.
func (o *NodeDetails) HasSshPortOverride() bool {
	if o != nil && o.SshPortOverride != nil {
		return true
	}

	return false
}

// SetSshPortOverride gets a reference to the given int32 and assigns it to the SshPortOverride field.
func (o *NodeDetails) SetSshPortOverride(v int32) {
	o.SshPortOverride = &v
}

// GetSshUserOverride returns the SshUserOverride field value if set, zero value otherwise.
func (o *NodeDetails) GetSshUserOverride() string {
	if o == nil || o.SshUserOverride == nil {
		var ret string
		return ret
	}
	return *o.SshUserOverride
}

// GetSshUserOverrideOk returns a tuple with the SshUserOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeDetails) GetSshUserOverrideOk() (*string, bool) {
	if o == nil || o.SshUserOverride == nil {
		return nil, false
	}
	return o.SshUserOverride, true
}

// HasSshUserOverride returns a boolean if a field has been set.
func (o *NodeDetails) HasSshUserOverride() bool {
	if o != nil && o.SshUserOverride != nil {
		return true
	}

	return false
}

// SetSshUserOverride gets a reference to the given string and assigns it to the SshUserOverride field.
func (o *NodeDetails) SetSshUserOverride(v string) {
	o.SshUserOverride = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *NodeDetails) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeDetails) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *NodeDetails) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *NodeDetails) SetState(v string) {
	o.State = &v
}

// GetYbPrebuiltAmi returns the YbPrebuiltAmi field value if set, zero value otherwise.
func (o *NodeDetails) GetYbPrebuiltAmi() bool {
	if o == nil || o.YbPrebuiltAmi == nil {
		var ret bool
		return ret
	}
	return *o.YbPrebuiltAmi
}

// GetYbPrebuiltAmiOk returns a tuple with the YbPrebuiltAmi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeDetails) GetYbPrebuiltAmiOk() (*bool, bool) {
	if o == nil || o.YbPrebuiltAmi == nil {
		return nil, false
	}
	return o.YbPrebuiltAmi, true
}

// HasYbPrebuiltAmi returns a boolean if a field has been set.
func (o *NodeDetails) HasYbPrebuiltAmi() bool {
	if o != nil && o.YbPrebuiltAmi != nil {
		return true
	}

	return false
}

// SetYbPrebuiltAmi gets a reference to the given bool and assigns it to the YbPrebuiltAmi field.
func (o *NodeDetails) SetYbPrebuiltAmi(v bool) {
	o.YbPrebuiltAmi = &v
}

func (o NodeDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AzUuid != nil {
		toSerialize["az_uuid"] = o.AzUuid
	}
	if o.CloudInfo != nil {
		toSerialize["cloud_info"] = o.CloudInfo
	}
	if o.CronsActive != nil {
		toSerialize["crons_active"] = o.CronsActive
	}
	if o.DedicatedTo != nil {
		toSerialize["dedicated_to"] = o.DedicatedTo
	}
	if o.DisksAreMountedByUuid != nil {
		toSerialize["disks_are_mounted_by_uuid"] = o.DisksAreMountedByUuid
	}
	if o.IsMaster != nil {
		toSerialize["is_master"] = o.IsMaster
	}
	if o.IsRedisServer != nil {
		toSerialize["is_redis_server"] = o.IsRedisServer
	}
	if o.IsTserver != nil {
		toSerialize["is_tserver"] = o.IsTserver
	}
	if o.IsYqlServer != nil {
		toSerialize["is_yql_server"] = o.IsYqlServer
	}
	if o.IsYsqlServer != nil {
		toSerialize["is_ysql_server"] = o.IsYsqlServer
	}
	if o.LastVolumeUpdateTime != nil {
		toSerialize["last_volume_update_time"] = o.LastVolumeUpdateTime
	}
	if o.MachineImage != nil {
		toSerialize["machine_image"] = o.MachineImage
	}
	if o.MasterState != nil {
		toSerialize["master_state"] = o.MasterState
	}
	if o.NodeIdx != nil {
		toSerialize["node_idx"] = o.NodeIdx
	}
	if o.NodeName != nil {
		toSerialize["node_name"] = o.NodeName
	}
	if o.NodeUuid != nil {
		toSerialize["node_uuid"] = o.NodeUuid
	}
	if o.PlacementUuid != nil {
		toSerialize["placement_uuid"] = o.PlacementUuid
	}
	if o.SshPortOverride != nil {
		toSerialize["ssh_port_override"] = o.SshPortOverride
	}
	if o.SshUserOverride != nil {
		toSerialize["ssh_user_override"] = o.SshUserOverride
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.YbPrebuiltAmi != nil {
		toSerialize["yb_prebuilt_ami"] = o.YbPrebuiltAmi
	}
	return json.Marshal(toSerialize)
}

type NullableNodeDetails struct {
	value *NodeDetails
	isSet bool
}

func (v NullableNodeDetails) Get() *NodeDetails {
	return v.value
}

func (v *NullableNodeDetails) Set(val *NodeDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableNodeDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableNodeDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodeDetails(val *NodeDetails) *NullableNodeDetails {
	return &NullableNodeDetails{value: val, isSet: true}
}

func (v NullableNodeDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodeDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


