/*
 * YugabyteDB Anywhere V2 APIs
 *
 * An improved set of APIs for managing YugabyteDB Anywhere
 *
 * API version: v2
 * Contact: support@yugabyte.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// UniverseSoftwareUpgradeStartAllOf struct for UniverseSoftwareUpgradeStartAllOf
type UniverseSoftwareUpgradeStartAllOf struct {
	// perform an upgrade where rollback is allowed
	AllowRollback *bool `json:"allow_rollback,omitempty"`
	// Upgrade the YugabyteDB Catalog
	UpgradeSystemCatalog *bool `json:"upgrade_system_catalog,omitempty"`
	// The target release version to upgrade to.
	Version string `json:"version"`
}

// NewUniverseSoftwareUpgradeStartAllOf instantiates a new UniverseSoftwareUpgradeStartAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUniverseSoftwareUpgradeStartAllOf(version string) *UniverseSoftwareUpgradeStartAllOf {
	this := UniverseSoftwareUpgradeStartAllOf{}
	var allowRollback bool = true
	this.AllowRollback = &allowRollback
	var upgradeSystemCatalog bool = true
	this.UpgradeSystemCatalog = &upgradeSystemCatalog
	this.Version = version
	return &this
}

// NewUniverseSoftwareUpgradeStartAllOfWithDefaults instantiates a new UniverseSoftwareUpgradeStartAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUniverseSoftwareUpgradeStartAllOfWithDefaults() *UniverseSoftwareUpgradeStartAllOf {
	this := UniverseSoftwareUpgradeStartAllOf{}
	var allowRollback bool = true
	this.AllowRollback = &allowRollback
	var upgradeSystemCatalog bool = true
	this.UpgradeSystemCatalog = &upgradeSystemCatalog
	return &this
}

// GetAllowRollback returns the AllowRollback field value if set, zero value otherwise.
func (o *UniverseSoftwareUpgradeStartAllOf) GetAllowRollback() bool {
	if o == nil || o.AllowRollback == nil {
		var ret bool
		return ret
	}
	return *o.AllowRollback
}

// GetAllowRollbackOk returns a tuple with the AllowRollback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseSoftwareUpgradeStartAllOf) GetAllowRollbackOk() (*bool, bool) {
	if o == nil || o.AllowRollback == nil {
		return nil, false
	}
	return o.AllowRollback, true
}

// HasAllowRollback returns a boolean if a field has been set.
func (o *UniverseSoftwareUpgradeStartAllOf) HasAllowRollback() bool {
	if o != nil && o.AllowRollback != nil {
		return true
	}

	return false
}

// SetAllowRollback gets a reference to the given bool and assigns it to the AllowRollback field.
func (o *UniverseSoftwareUpgradeStartAllOf) SetAllowRollback(v bool) {
	o.AllowRollback = &v
}

// GetUpgradeSystemCatalog returns the UpgradeSystemCatalog field value if set, zero value otherwise.
func (o *UniverseSoftwareUpgradeStartAllOf) GetUpgradeSystemCatalog() bool {
	if o == nil || o.UpgradeSystemCatalog == nil {
		var ret bool
		return ret
	}
	return *o.UpgradeSystemCatalog
}

// GetUpgradeSystemCatalogOk returns a tuple with the UpgradeSystemCatalog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseSoftwareUpgradeStartAllOf) GetUpgradeSystemCatalogOk() (*bool, bool) {
	if o == nil || o.UpgradeSystemCatalog == nil {
		return nil, false
	}
	return o.UpgradeSystemCatalog, true
}

// HasUpgradeSystemCatalog returns a boolean if a field has been set.
func (o *UniverseSoftwareUpgradeStartAllOf) HasUpgradeSystemCatalog() bool {
	if o != nil && o.UpgradeSystemCatalog != nil {
		return true
	}

	return false
}

// SetUpgradeSystemCatalog gets a reference to the given bool and assigns it to the UpgradeSystemCatalog field.
func (o *UniverseSoftwareUpgradeStartAllOf) SetUpgradeSystemCatalog(v bool) {
	o.UpgradeSystemCatalog = &v
}

// GetVersion returns the Version field value
func (o *UniverseSoftwareUpgradeStartAllOf) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *UniverseSoftwareUpgradeStartAllOf) GetVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *UniverseSoftwareUpgradeStartAllOf) SetVersion(v string) {
	o.Version = v
}

func (o UniverseSoftwareUpgradeStartAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowRollback != nil {
		toSerialize["allow_rollback"] = o.AllowRollback
	}
	if o.UpgradeSystemCatalog != nil {
		toSerialize["upgrade_system_catalog"] = o.UpgradeSystemCatalog
	}
	if true {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableUniverseSoftwareUpgradeStartAllOf struct {
	value *UniverseSoftwareUpgradeStartAllOf
	isSet bool
}

func (v NullableUniverseSoftwareUpgradeStartAllOf) Get() *UniverseSoftwareUpgradeStartAllOf {
	return v.value
}

func (v *NullableUniverseSoftwareUpgradeStartAllOf) Set(val *UniverseSoftwareUpgradeStartAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableUniverseSoftwareUpgradeStartAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableUniverseSoftwareUpgradeStartAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUniverseSoftwareUpgradeStartAllOf(val *UniverseSoftwareUpgradeStartAllOf) *NullableUniverseSoftwareUpgradeStartAllOf {
	return &NullableUniverseSoftwareUpgradeStartAllOf{value: val, isSet: true}
}

func (v NullableUniverseSoftwareUpgradeStartAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUniverseSoftwareUpgradeStartAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


