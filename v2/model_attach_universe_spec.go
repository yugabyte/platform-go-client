/*
 * YugabyteDB Anywhere V2 APIs
 *
 * An improved set of APIs for managing YugabyteDB Anywhere
 *
 * API version: v2
 * Contact: support@yugabyte.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"os"
)

// AttachUniverseSpec Request payload for attaching a universe.
type AttachUniverseSpec struct {
	// The uploaded tgz file containing universe metadata.
	DownloadedSpecFile **os.File `json:"downloaded_spec_file,omitempty"`
}

// NewAttachUniverseSpec instantiates a new AttachUniverseSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttachUniverseSpec() *AttachUniverseSpec {
	this := AttachUniverseSpec{}
	return &this
}

// NewAttachUniverseSpecWithDefaults instantiates a new AttachUniverseSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttachUniverseSpecWithDefaults() *AttachUniverseSpec {
	this := AttachUniverseSpec{}
	return &this
}

// GetDownloadedSpecFile returns the DownloadedSpecFile field value if set, zero value otherwise.
func (o *AttachUniverseSpec) GetDownloadedSpecFile() *os.File {
	if o == nil || o.DownloadedSpecFile == nil {
		var ret *os.File
		return ret
	}
	return *o.DownloadedSpecFile
}

// GetDownloadedSpecFileOk returns a tuple with the DownloadedSpecFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachUniverseSpec) GetDownloadedSpecFileOk() (**os.File, bool) {
	if o == nil || o.DownloadedSpecFile == nil {
		return nil, false
	}
	return o.DownloadedSpecFile, true
}

// HasDownloadedSpecFile returns a boolean if a field has been set.
func (o *AttachUniverseSpec) HasDownloadedSpecFile() bool {
	if o != nil && o.DownloadedSpecFile != nil {
		return true
	}

	return false
}

// SetDownloadedSpecFile gets a reference to the given *os.File and assigns it to the DownloadedSpecFile field.
func (o *AttachUniverseSpec) SetDownloadedSpecFile(v *os.File) {
	o.DownloadedSpecFile = &v
}

func (o AttachUniverseSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DownloadedSpecFile != nil {
		toSerialize["downloaded_spec_file"] = o.DownloadedSpecFile
	}
	return json.Marshal(toSerialize)
}

type NullableAttachUniverseSpec struct {
	value *AttachUniverseSpec
	isSet bool
}

func (v NullableAttachUniverseSpec) Get() *AttachUniverseSpec {
	return v.value
}

func (v *NullableAttachUniverseSpec) Set(val *AttachUniverseSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableAttachUniverseSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableAttachUniverseSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttachUniverseSpec(val *AttachUniverseSpec) *NullableAttachUniverseSpec {
	return &NullableAttachUniverseSpec{value: val, isSet: true}
}

func (v NullableAttachUniverseSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttachUniverseSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


