/*
 * YugabyteDB Anywhere V2 APIs
 *
 * An improved set of APIs for managing YugabyteDB Anywhere
 *
 * API version: v2
 * Contact: support@yugabyte.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// YBATask YBATask  YugabyteDB Anywhere Task object is used to represent a task that is being executed on a resource. This Task object can be polled for progress and status of the task. This object is returned as a response to most of the YugabyteDB Anywhere API calls. 
type YBATask struct {
	// UUID of the resource being modified by the task
	ResourceUuid *string `json:"resource_uuid,omitempty"`
	// Task UUID
	TaskUuid *string `json:"task_uuid,omitempty"`
}

// NewYBATask instantiates a new YBATask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewYBATask() *YBATask {
	this := YBATask{}
	return &this
}

// NewYBATaskWithDefaults instantiates a new YBATask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewYBATaskWithDefaults() *YBATask {
	this := YBATask{}
	return &this
}

// GetResourceUuid returns the ResourceUuid field value if set, zero value otherwise.
func (o *YBATask) GetResourceUuid() string {
	if o == nil || o.ResourceUuid == nil {
		var ret string
		return ret
	}
	return *o.ResourceUuid
}

// GetResourceUuidOk returns a tuple with the ResourceUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *YBATask) GetResourceUuidOk() (*string, bool) {
	if o == nil || o.ResourceUuid == nil {
		return nil, false
	}
	return o.ResourceUuid, true
}

// HasResourceUuid returns a boolean if a field has been set.
func (o *YBATask) HasResourceUuid() bool {
	if o != nil && o.ResourceUuid != nil {
		return true
	}

	return false
}

// SetResourceUuid gets a reference to the given string and assigns it to the ResourceUuid field.
func (o *YBATask) SetResourceUuid(v string) {
	o.ResourceUuid = &v
}

// GetTaskUuid returns the TaskUuid field value if set, zero value otherwise.
func (o *YBATask) GetTaskUuid() string {
	if o == nil || o.TaskUuid == nil {
		var ret string
		return ret
	}
	return *o.TaskUuid
}

// GetTaskUuidOk returns a tuple with the TaskUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *YBATask) GetTaskUuidOk() (*string, bool) {
	if o == nil || o.TaskUuid == nil {
		return nil, false
	}
	return o.TaskUuid, true
}

// HasTaskUuid returns a boolean if a field has been set.
func (o *YBATask) HasTaskUuid() bool {
	if o != nil && o.TaskUuid != nil {
		return true
	}

	return false
}

// SetTaskUuid gets a reference to the given string and assigns it to the TaskUuid field.
func (o *YBATask) SetTaskUuid(v string) {
	o.TaskUuid = &v
}

func (o YBATask) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResourceUuid != nil {
		toSerialize["resource_uuid"] = o.ResourceUuid
	}
	if o.TaskUuid != nil {
		toSerialize["task_uuid"] = o.TaskUuid
	}
	return json.Marshal(toSerialize)
}

type NullableYBATask struct {
	value *YBATask
	isSet bool
}

func (v NullableYBATask) Get() *YBATask {
	return v.value
}

func (v *NullableYBATask) Set(val *YBATask) {
	v.value = val
	v.isSet = true
}

func (v NullableYBATask) IsSet() bool {
	return v.isSet
}

func (v *NullableYBATask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableYBATask(val *YBATask) *NullableYBATask {
	return &NullableYBATask{value: val, isSet: true}
}

func (v NullableYBATask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableYBATask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


