/*
 * YugabyteDB Anywhere V2 APIs
 *
 * An improved set of APIs for managing YugabyteDB Anywhere
 *
 * API version: v2
 * Contact: support@yugabyte.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// ClusterGFlagsAllOf struct for ClusterGFlagsAllOf
type ClusterGFlagsAllOf struct {
	// GFlags per availability zone uuid
	AzGflags *map[string]AvailabilityZoneGFlags `json:"az_gflags,omitempty"`
}

// NewClusterGFlagsAllOf instantiates a new ClusterGFlagsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterGFlagsAllOf() *ClusterGFlagsAllOf {
	this := ClusterGFlagsAllOf{}
	return &this
}

// NewClusterGFlagsAllOfWithDefaults instantiates a new ClusterGFlagsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterGFlagsAllOfWithDefaults() *ClusterGFlagsAllOf {
	this := ClusterGFlagsAllOf{}
	return &this
}

// GetAzGflags returns the AzGflags field value if set, zero value otherwise.
func (o *ClusterGFlagsAllOf) GetAzGflags() map[string]AvailabilityZoneGFlags {
	if o == nil || o.AzGflags == nil {
		var ret map[string]AvailabilityZoneGFlags
		return ret
	}
	return *o.AzGflags
}

// GetAzGflagsOk returns a tuple with the AzGflags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterGFlagsAllOf) GetAzGflagsOk() (*map[string]AvailabilityZoneGFlags, bool) {
	if o == nil || o.AzGflags == nil {
		return nil, false
	}
	return o.AzGflags, true
}

// HasAzGflags returns a boolean if a field has been set.
func (o *ClusterGFlagsAllOf) HasAzGflags() bool {
	if o != nil && o.AzGflags != nil {
		return true
	}

	return false
}

// SetAzGflags gets a reference to the given map[string]AvailabilityZoneGFlags and assigns it to the AzGflags field.
func (o *ClusterGFlagsAllOf) SetAzGflags(v map[string]AvailabilityZoneGFlags) {
	o.AzGflags = &v
}

func (o ClusterGFlagsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AzGflags != nil {
		toSerialize["az_gflags"] = o.AzGflags
	}
	return json.Marshal(toSerialize)
}

type NullableClusterGFlagsAllOf struct {
	value *ClusterGFlagsAllOf
	isSet bool
}

func (v NullableClusterGFlagsAllOf) Get() *ClusterGFlagsAllOf {
	return v.value
}

func (v *NullableClusterGFlagsAllOf) Set(val *ClusterGFlagsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterGFlagsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterGFlagsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterGFlagsAllOf(val *ClusterGFlagsAllOf) *NullableClusterGFlagsAllOf {
	return &NullableClusterGFlagsAllOf{value: val, isSet: true}
}

func (v NullableClusterGFlagsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterGFlagsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


