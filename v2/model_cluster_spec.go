/*
 * YugabyteDB Anywhere V2 APIs
 *
 * An improved set of APIs for managing YugabyteDB Anywhere
 *
 * API version: v2
 * Contact: support@yugabyte.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// ClusterSpec Universe Cluster Spec. Part of UniverseSpec.
type ClusterSpec struct {
	// System generated cluster uuid used to lookup corresponding ClusterInfo. This is not a user input.
	Uuid *string `json:"uuid,omitempty"`
	// Cluster type can be one of PRIMARY, ASYNC (for ReadOnly), ADDON
	ClusterType string `json:"cluster_type"`
	// The number of nodes (tservers) to provision in this cluster
	NumNodes int32 `json:"num_nodes"`
	// The number of copies of data to maintain in this cluster. Defaults to 3.
	ReplicationFactor *int32 `json:"replication_factor,omitempty"`
	NodeSpec ClusterNodeSpec `json:"node_spec"`
	NetworkingSpec *ClusterNetworkingSpec `json:"networking_spec,omitempty"`
	ProviderSpec ClusterProviderSpec `json:"provider_spec"`
	PlacementSpec *ClusterPlacementSpec `json:"placement_spec,omitempty"`
	// Whether to use spot instances for nodes in aws/gcp. Used in dev/test environments.
	UseSpotInstance *bool `json:"use_spot_instance,omitempty"`
	// A map of strings representing a set of Tags and Values to apply on nodes in the aws/gcp/azu cloud. See https://docs.yugabyte.com/preview/yugabyte-platform/manage-deployments/instance-tags/.
	InstanceTags *map[string]string `json:"instance_tags,omitempty"`
	AuditLogConfig *AuditLogConfig `json:"audit_log_config,omitempty"`
	Gflags *ClusterGFlags `json:"gflags,omitempty"`
}

// NewClusterSpec instantiates a new ClusterSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterSpec(clusterType string, numNodes int32, nodeSpec ClusterNodeSpec, providerSpec ClusterProviderSpec) *ClusterSpec {
	this := ClusterSpec{}
	this.ClusterType = clusterType
	this.NumNodes = numNodes
	var replicationFactor int32 = 3
	this.ReplicationFactor = &replicationFactor
	this.NodeSpec = nodeSpec
	this.ProviderSpec = providerSpec
	return &this
}

// NewClusterSpecWithDefaults instantiates a new ClusterSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterSpecWithDefaults() *ClusterSpec {
	this := ClusterSpec{}
	var replicationFactor int32 = 3
	this.ReplicationFactor = &replicationFactor
	return &this
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *ClusterSpec) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSpec) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *ClusterSpec) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *ClusterSpec) SetUuid(v string) {
	o.Uuid = &v
}

// GetClusterType returns the ClusterType field value
func (o *ClusterSpec) GetClusterType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterType
}

// GetClusterTypeOk returns a tuple with the ClusterType field value
// and a boolean to check if the value has been set.
func (o *ClusterSpec) GetClusterTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClusterType, true
}

// SetClusterType sets field value
func (o *ClusterSpec) SetClusterType(v string) {
	o.ClusterType = v
}

// GetNumNodes returns the NumNodes field value
func (o *ClusterSpec) GetNumNodes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumNodes
}

// GetNumNodesOk returns a tuple with the NumNodes field value
// and a boolean to check if the value has been set.
func (o *ClusterSpec) GetNumNodesOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NumNodes, true
}

// SetNumNodes sets field value
func (o *ClusterSpec) SetNumNodes(v int32) {
	o.NumNodes = v
}

// GetReplicationFactor returns the ReplicationFactor field value if set, zero value otherwise.
func (o *ClusterSpec) GetReplicationFactor() int32 {
	if o == nil || o.ReplicationFactor == nil {
		var ret int32
		return ret
	}
	return *o.ReplicationFactor
}

// GetReplicationFactorOk returns a tuple with the ReplicationFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSpec) GetReplicationFactorOk() (*int32, bool) {
	if o == nil || o.ReplicationFactor == nil {
		return nil, false
	}
	return o.ReplicationFactor, true
}

// HasReplicationFactor returns a boolean if a field has been set.
func (o *ClusterSpec) HasReplicationFactor() bool {
	if o != nil && o.ReplicationFactor != nil {
		return true
	}

	return false
}

// SetReplicationFactor gets a reference to the given int32 and assigns it to the ReplicationFactor field.
func (o *ClusterSpec) SetReplicationFactor(v int32) {
	o.ReplicationFactor = &v
}

// GetNodeSpec returns the NodeSpec field value
func (o *ClusterSpec) GetNodeSpec() ClusterNodeSpec {
	if o == nil {
		var ret ClusterNodeSpec
		return ret
	}

	return o.NodeSpec
}

// GetNodeSpecOk returns a tuple with the NodeSpec field value
// and a boolean to check if the value has been set.
func (o *ClusterSpec) GetNodeSpecOk() (*ClusterNodeSpec, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NodeSpec, true
}

// SetNodeSpec sets field value
func (o *ClusterSpec) SetNodeSpec(v ClusterNodeSpec) {
	o.NodeSpec = v
}

// GetNetworkingSpec returns the NetworkingSpec field value if set, zero value otherwise.
func (o *ClusterSpec) GetNetworkingSpec() ClusterNetworkingSpec {
	if o == nil || o.NetworkingSpec == nil {
		var ret ClusterNetworkingSpec
		return ret
	}
	return *o.NetworkingSpec
}

// GetNetworkingSpecOk returns a tuple with the NetworkingSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSpec) GetNetworkingSpecOk() (*ClusterNetworkingSpec, bool) {
	if o == nil || o.NetworkingSpec == nil {
		return nil, false
	}
	return o.NetworkingSpec, true
}

// HasNetworkingSpec returns a boolean if a field has been set.
func (o *ClusterSpec) HasNetworkingSpec() bool {
	if o != nil && o.NetworkingSpec != nil {
		return true
	}

	return false
}

// SetNetworkingSpec gets a reference to the given ClusterNetworkingSpec and assigns it to the NetworkingSpec field.
func (o *ClusterSpec) SetNetworkingSpec(v ClusterNetworkingSpec) {
	o.NetworkingSpec = &v
}

// GetProviderSpec returns the ProviderSpec field value
func (o *ClusterSpec) GetProviderSpec() ClusterProviderSpec {
	if o == nil {
		var ret ClusterProviderSpec
		return ret
	}

	return o.ProviderSpec
}

// GetProviderSpecOk returns a tuple with the ProviderSpec field value
// and a boolean to check if the value has been set.
func (o *ClusterSpec) GetProviderSpecOk() (*ClusterProviderSpec, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ProviderSpec, true
}

// SetProviderSpec sets field value
func (o *ClusterSpec) SetProviderSpec(v ClusterProviderSpec) {
	o.ProviderSpec = v
}

// GetPlacementSpec returns the PlacementSpec field value if set, zero value otherwise.
func (o *ClusterSpec) GetPlacementSpec() ClusterPlacementSpec {
	if o == nil || o.PlacementSpec == nil {
		var ret ClusterPlacementSpec
		return ret
	}
	return *o.PlacementSpec
}

// GetPlacementSpecOk returns a tuple with the PlacementSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSpec) GetPlacementSpecOk() (*ClusterPlacementSpec, bool) {
	if o == nil || o.PlacementSpec == nil {
		return nil, false
	}
	return o.PlacementSpec, true
}

// HasPlacementSpec returns a boolean if a field has been set.
func (o *ClusterSpec) HasPlacementSpec() bool {
	if o != nil && o.PlacementSpec != nil {
		return true
	}

	return false
}

// SetPlacementSpec gets a reference to the given ClusterPlacementSpec and assigns it to the PlacementSpec field.
func (o *ClusterSpec) SetPlacementSpec(v ClusterPlacementSpec) {
	o.PlacementSpec = &v
}

// GetUseSpotInstance returns the UseSpotInstance field value if set, zero value otherwise.
func (o *ClusterSpec) GetUseSpotInstance() bool {
	if o == nil || o.UseSpotInstance == nil {
		var ret bool
		return ret
	}
	return *o.UseSpotInstance
}

// GetUseSpotInstanceOk returns a tuple with the UseSpotInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSpec) GetUseSpotInstanceOk() (*bool, bool) {
	if o == nil || o.UseSpotInstance == nil {
		return nil, false
	}
	return o.UseSpotInstance, true
}

// HasUseSpotInstance returns a boolean if a field has been set.
func (o *ClusterSpec) HasUseSpotInstance() bool {
	if o != nil && o.UseSpotInstance != nil {
		return true
	}

	return false
}

// SetUseSpotInstance gets a reference to the given bool and assigns it to the UseSpotInstance field.
func (o *ClusterSpec) SetUseSpotInstance(v bool) {
	o.UseSpotInstance = &v
}

// GetInstanceTags returns the InstanceTags field value if set, zero value otherwise.
func (o *ClusterSpec) GetInstanceTags() map[string]string {
	if o == nil || o.InstanceTags == nil {
		var ret map[string]string
		return ret
	}
	return *o.InstanceTags
}

// GetInstanceTagsOk returns a tuple with the InstanceTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSpec) GetInstanceTagsOk() (*map[string]string, bool) {
	if o == nil || o.InstanceTags == nil {
		return nil, false
	}
	return o.InstanceTags, true
}

// HasInstanceTags returns a boolean if a field has been set.
func (o *ClusterSpec) HasInstanceTags() bool {
	if o != nil && o.InstanceTags != nil {
		return true
	}

	return false
}

// SetInstanceTags gets a reference to the given map[string]string and assigns it to the InstanceTags field.
func (o *ClusterSpec) SetInstanceTags(v map[string]string) {
	o.InstanceTags = &v
}

// GetAuditLogConfig returns the AuditLogConfig field value if set, zero value otherwise.
func (o *ClusterSpec) GetAuditLogConfig() AuditLogConfig {
	if o == nil || o.AuditLogConfig == nil {
		var ret AuditLogConfig
		return ret
	}
	return *o.AuditLogConfig
}

// GetAuditLogConfigOk returns a tuple with the AuditLogConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSpec) GetAuditLogConfigOk() (*AuditLogConfig, bool) {
	if o == nil || o.AuditLogConfig == nil {
		return nil, false
	}
	return o.AuditLogConfig, true
}

// HasAuditLogConfig returns a boolean if a field has been set.
func (o *ClusterSpec) HasAuditLogConfig() bool {
	if o != nil && o.AuditLogConfig != nil {
		return true
	}

	return false
}

// SetAuditLogConfig gets a reference to the given AuditLogConfig and assigns it to the AuditLogConfig field.
func (o *ClusterSpec) SetAuditLogConfig(v AuditLogConfig) {
	o.AuditLogConfig = &v
}

// GetGflags returns the Gflags field value if set, zero value otherwise.
func (o *ClusterSpec) GetGflags() ClusterGFlags {
	if o == nil || o.Gflags == nil {
		var ret ClusterGFlags
		return ret
	}
	return *o.Gflags
}

// GetGflagsOk returns a tuple with the Gflags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSpec) GetGflagsOk() (*ClusterGFlags, bool) {
	if o == nil || o.Gflags == nil {
		return nil, false
	}
	return o.Gflags, true
}

// HasGflags returns a boolean if a field has been set.
func (o *ClusterSpec) HasGflags() bool {
	if o != nil && o.Gflags != nil {
		return true
	}

	return false
}

// SetGflags gets a reference to the given ClusterGFlags and assigns it to the Gflags field.
func (o *ClusterSpec) SetGflags(v ClusterGFlags) {
	o.Gflags = &v
}

func (o ClusterSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if true {
		toSerialize["cluster_type"] = o.ClusterType
	}
	if true {
		toSerialize["num_nodes"] = o.NumNodes
	}
	if o.ReplicationFactor != nil {
		toSerialize["replication_factor"] = o.ReplicationFactor
	}
	if true {
		toSerialize["node_spec"] = o.NodeSpec
	}
	if o.NetworkingSpec != nil {
		toSerialize["networking_spec"] = o.NetworkingSpec
	}
	if true {
		toSerialize["provider_spec"] = o.ProviderSpec
	}
	if o.PlacementSpec != nil {
		toSerialize["placement_spec"] = o.PlacementSpec
	}
	if o.UseSpotInstance != nil {
		toSerialize["use_spot_instance"] = o.UseSpotInstance
	}
	if o.InstanceTags != nil {
		toSerialize["instance_tags"] = o.InstanceTags
	}
	if o.AuditLogConfig != nil {
		toSerialize["audit_log_config"] = o.AuditLogConfig
	}
	if o.Gflags != nil {
		toSerialize["gflags"] = o.Gflags
	}
	return json.Marshal(toSerialize)
}

type NullableClusterSpec struct {
	value *ClusterSpec
	isSet bool
}

func (v NullableClusterSpec) Get() *ClusterSpec {
	return v.value
}

func (v *NullableClusterSpec) Set(val *ClusterSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterSpec(val *ClusterSpec) *NullableClusterSpec {
	return &NullableClusterSpec{value: val, isSet: true}
}

func (v NullableClusterSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


