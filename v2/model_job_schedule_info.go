/*
 * YugabyteDB Anywhere V2 APIs
 *
 * An improved set of APIs for managing YugabyteDB Anywhere
 *
 * API version: v2
 * Contact: support@yugabyte.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"time"
)

// JobScheduleInfo Job schedule info which is a part of JobSchedule.
type JobScheduleInfo struct {
	// Creation time
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Customer UUID
	CustomerUuid *string `json:"customer_uuid,omitempty"`
	// Total execution count
	ExecutionCount *int64 `json:"execution_count,omitempty"`
	// Total failed count
	FailedCount *int64 `json:"failed_count,omitempty"`
	// Last end time
	LastEndTime *time.Time `json:"last_end_time,omitempty"`
	// Last job instance UUID
	LastJobInstanceUuid *string `json:"last_job_instance_uuid,omitempty"`
	// Last start time
	LastStartTime *time.Time `json:"last_start_time,omitempty"`
	// Next start time
	NextStartTime *time.Time `json:"next_start_time,omitempty"`
	State *JobScheduleState `json:"state,omitempty"`
	// Updated time
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// Job schedule UUID
	Uuid *string `json:"uuid,omitempty"`
}

// NewJobScheduleInfo instantiates a new JobScheduleInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobScheduleInfo() *JobScheduleInfo {
	this := JobScheduleInfo{}
	return &this
}

// NewJobScheduleInfoWithDefaults instantiates a new JobScheduleInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobScheduleInfoWithDefaults() *JobScheduleInfo {
	this := JobScheduleInfo{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *JobScheduleInfo) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobScheduleInfo) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *JobScheduleInfo) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *JobScheduleInfo) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetCustomerUuid returns the CustomerUuid field value if set, zero value otherwise.
func (o *JobScheduleInfo) GetCustomerUuid() string {
	if o == nil || o.CustomerUuid == nil {
		var ret string
		return ret
	}
	return *o.CustomerUuid
}

// GetCustomerUuidOk returns a tuple with the CustomerUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobScheduleInfo) GetCustomerUuidOk() (*string, bool) {
	if o == nil || o.CustomerUuid == nil {
		return nil, false
	}
	return o.CustomerUuid, true
}

// HasCustomerUuid returns a boolean if a field has been set.
func (o *JobScheduleInfo) HasCustomerUuid() bool {
	if o != nil && o.CustomerUuid != nil {
		return true
	}

	return false
}

// SetCustomerUuid gets a reference to the given string and assigns it to the CustomerUuid field.
func (o *JobScheduleInfo) SetCustomerUuid(v string) {
	o.CustomerUuid = &v
}

// GetExecutionCount returns the ExecutionCount field value if set, zero value otherwise.
func (o *JobScheduleInfo) GetExecutionCount() int64 {
	if o == nil || o.ExecutionCount == nil {
		var ret int64
		return ret
	}
	return *o.ExecutionCount
}

// GetExecutionCountOk returns a tuple with the ExecutionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobScheduleInfo) GetExecutionCountOk() (*int64, bool) {
	if o == nil || o.ExecutionCount == nil {
		return nil, false
	}
	return o.ExecutionCount, true
}

// HasExecutionCount returns a boolean if a field has been set.
func (o *JobScheduleInfo) HasExecutionCount() bool {
	if o != nil && o.ExecutionCount != nil {
		return true
	}

	return false
}

// SetExecutionCount gets a reference to the given int64 and assigns it to the ExecutionCount field.
func (o *JobScheduleInfo) SetExecutionCount(v int64) {
	o.ExecutionCount = &v
}

// GetFailedCount returns the FailedCount field value if set, zero value otherwise.
func (o *JobScheduleInfo) GetFailedCount() int64 {
	if o == nil || o.FailedCount == nil {
		var ret int64
		return ret
	}
	return *o.FailedCount
}

// GetFailedCountOk returns a tuple with the FailedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobScheduleInfo) GetFailedCountOk() (*int64, bool) {
	if o == nil || o.FailedCount == nil {
		return nil, false
	}
	return o.FailedCount, true
}

// HasFailedCount returns a boolean if a field has been set.
func (o *JobScheduleInfo) HasFailedCount() bool {
	if o != nil && o.FailedCount != nil {
		return true
	}

	return false
}

// SetFailedCount gets a reference to the given int64 and assigns it to the FailedCount field.
func (o *JobScheduleInfo) SetFailedCount(v int64) {
	o.FailedCount = &v
}

// GetLastEndTime returns the LastEndTime field value if set, zero value otherwise.
func (o *JobScheduleInfo) GetLastEndTime() time.Time {
	if o == nil || o.LastEndTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastEndTime
}

// GetLastEndTimeOk returns a tuple with the LastEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobScheduleInfo) GetLastEndTimeOk() (*time.Time, bool) {
	if o == nil || o.LastEndTime == nil {
		return nil, false
	}
	return o.LastEndTime, true
}

// HasLastEndTime returns a boolean if a field has been set.
func (o *JobScheduleInfo) HasLastEndTime() bool {
	if o != nil && o.LastEndTime != nil {
		return true
	}

	return false
}

// SetLastEndTime gets a reference to the given time.Time and assigns it to the LastEndTime field.
func (o *JobScheduleInfo) SetLastEndTime(v time.Time) {
	o.LastEndTime = &v
}

// GetLastJobInstanceUuid returns the LastJobInstanceUuid field value if set, zero value otherwise.
func (o *JobScheduleInfo) GetLastJobInstanceUuid() string {
	if o == nil || o.LastJobInstanceUuid == nil {
		var ret string
		return ret
	}
	return *o.LastJobInstanceUuid
}

// GetLastJobInstanceUuidOk returns a tuple with the LastJobInstanceUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobScheduleInfo) GetLastJobInstanceUuidOk() (*string, bool) {
	if o == nil || o.LastJobInstanceUuid == nil {
		return nil, false
	}
	return o.LastJobInstanceUuid, true
}

// HasLastJobInstanceUuid returns a boolean if a field has been set.
func (o *JobScheduleInfo) HasLastJobInstanceUuid() bool {
	if o != nil && o.LastJobInstanceUuid != nil {
		return true
	}

	return false
}

// SetLastJobInstanceUuid gets a reference to the given string and assigns it to the LastJobInstanceUuid field.
func (o *JobScheduleInfo) SetLastJobInstanceUuid(v string) {
	o.LastJobInstanceUuid = &v
}

// GetLastStartTime returns the LastStartTime field value if set, zero value otherwise.
func (o *JobScheduleInfo) GetLastStartTime() time.Time {
	if o == nil || o.LastStartTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastStartTime
}

// GetLastStartTimeOk returns a tuple with the LastStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobScheduleInfo) GetLastStartTimeOk() (*time.Time, bool) {
	if o == nil || o.LastStartTime == nil {
		return nil, false
	}
	return o.LastStartTime, true
}

// HasLastStartTime returns a boolean if a field has been set.
func (o *JobScheduleInfo) HasLastStartTime() bool {
	if o != nil && o.LastStartTime != nil {
		return true
	}

	return false
}

// SetLastStartTime gets a reference to the given time.Time and assigns it to the LastStartTime field.
func (o *JobScheduleInfo) SetLastStartTime(v time.Time) {
	o.LastStartTime = &v
}

// GetNextStartTime returns the NextStartTime field value if set, zero value otherwise.
func (o *JobScheduleInfo) GetNextStartTime() time.Time {
	if o == nil || o.NextStartTime == nil {
		var ret time.Time
		return ret
	}
	return *o.NextStartTime
}

// GetNextStartTimeOk returns a tuple with the NextStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobScheduleInfo) GetNextStartTimeOk() (*time.Time, bool) {
	if o == nil || o.NextStartTime == nil {
		return nil, false
	}
	return o.NextStartTime, true
}

// HasNextStartTime returns a boolean if a field has been set.
func (o *JobScheduleInfo) HasNextStartTime() bool {
	if o != nil && o.NextStartTime != nil {
		return true
	}

	return false
}

// SetNextStartTime gets a reference to the given time.Time and assigns it to the NextStartTime field.
func (o *JobScheduleInfo) SetNextStartTime(v time.Time) {
	o.NextStartTime = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *JobScheduleInfo) GetState() JobScheduleState {
	if o == nil || o.State == nil {
		var ret JobScheduleState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobScheduleInfo) GetStateOk() (*JobScheduleState, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *JobScheduleInfo) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given JobScheduleState and assigns it to the State field.
func (o *JobScheduleInfo) SetState(v JobScheduleState) {
	o.State = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *JobScheduleInfo) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobScheduleInfo) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *JobScheduleInfo) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *JobScheduleInfo) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *JobScheduleInfo) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobScheduleInfo) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *JobScheduleInfo) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *JobScheduleInfo) SetUuid(v string) {
	o.Uuid = &v
}

func (o JobScheduleInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.CustomerUuid != nil {
		toSerialize["customer_uuid"] = o.CustomerUuid
	}
	if o.ExecutionCount != nil {
		toSerialize["execution_count"] = o.ExecutionCount
	}
	if o.FailedCount != nil {
		toSerialize["failed_count"] = o.FailedCount
	}
	if o.LastEndTime != nil {
		toSerialize["last_end_time"] = o.LastEndTime
	}
	if o.LastJobInstanceUuid != nil {
		toSerialize["last_job_instance_uuid"] = o.LastJobInstanceUuid
	}
	if o.LastStartTime != nil {
		toSerialize["last_start_time"] = o.LastStartTime
	}
	if o.NextStartTime != nil {
		toSerialize["next_start_time"] = o.NextStartTime
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	return json.Marshal(toSerialize)
}

type NullableJobScheduleInfo struct {
	value *JobScheduleInfo
	isSet bool
}

func (v NullableJobScheduleInfo) Get() *JobScheduleInfo {
	return v.value
}

func (v *NullableJobScheduleInfo) Set(val *JobScheduleInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableJobScheduleInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableJobScheduleInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobScheduleInfo(val *JobScheduleInfo) *NullableJobScheduleInfo {
	return &NullableJobScheduleInfo{value: val, isSet: true}
}

func (v NullableJobScheduleInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobScheduleInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


