/*
 * YugabyteDB Anywhere V2 APIs
 *
 * An improved set of APIs for managing YugabyteDB Anywhere
 *
 * API version: v2
 * Contact: support@yugabyte.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"time"
)

// UserInfo System generated properties of a User. Part of User.
type UserInfo struct {
	// User UUID
	Uuid *string `json:"uuid,omitempty"`
	// User Type
	UserType *string `json:"user_type,omitempty"`
	// User creation date
	CreationDate *time.Time `json:"creation_date,omitempty"`
	// Customer account to which this User belongs to
	CustomerUuid *string `json:"customer_uuid,omitempty"`
	// True if the user is the primary local user in this YBA
	IsPrimary *bool `json:"is_primary,omitempty"`
	// Whether the user's role is inherited from LDAP
	LdapSpecifiedRole *bool `json:"ldap_specified_role,omitempty"`
	// User timezone
	Timezone *string `json:"timezone,omitempty"`
}

// NewUserInfo instantiates a new UserInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserInfo() *UserInfo {
	this := UserInfo{}
	return &this
}

// NewUserInfoWithDefaults instantiates a new UserInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserInfoWithDefaults() *UserInfo {
	this := UserInfo{}
	return &this
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *UserInfo) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInfo) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *UserInfo) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *UserInfo) SetUuid(v string) {
	o.Uuid = &v
}

// GetUserType returns the UserType field value if set, zero value otherwise.
func (o *UserInfo) GetUserType() string {
	if o == nil || o.UserType == nil {
		var ret string
		return ret
	}
	return *o.UserType
}

// GetUserTypeOk returns a tuple with the UserType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInfo) GetUserTypeOk() (*string, bool) {
	if o == nil || o.UserType == nil {
		return nil, false
	}
	return o.UserType, true
}

// HasUserType returns a boolean if a field has been set.
func (o *UserInfo) HasUserType() bool {
	if o != nil && o.UserType != nil {
		return true
	}

	return false
}

// SetUserType gets a reference to the given string and assigns it to the UserType field.
func (o *UserInfo) SetUserType(v string) {
	o.UserType = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *UserInfo) GetCreationDate() time.Time {
	if o == nil || o.CreationDate == nil {
		var ret time.Time
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInfo) GetCreationDateOk() (*time.Time, bool) {
	if o == nil || o.CreationDate == nil {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *UserInfo) HasCreationDate() bool {
	if o != nil && o.CreationDate != nil {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given time.Time and assigns it to the CreationDate field.
func (o *UserInfo) SetCreationDate(v time.Time) {
	o.CreationDate = &v
}

// GetCustomerUuid returns the CustomerUuid field value if set, zero value otherwise.
func (o *UserInfo) GetCustomerUuid() string {
	if o == nil || o.CustomerUuid == nil {
		var ret string
		return ret
	}
	return *o.CustomerUuid
}

// GetCustomerUuidOk returns a tuple with the CustomerUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInfo) GetCustomerUuidOk() (*string, bool) {
	if o == nil || o.CustomerUuid == nil {
		return nil, false
	}
	return o.CustomerUuid, true
}

// HasCustomerUuid returns a boolean if a field has been set.
func (o *UserInfo) HasCustomerUuid() bool {
	if o != nil && o.CustomerUuid != nil {
		return true
	}

	return false
}

// SetCustomerUuid gets a reference to the given string and assigns it to the CustomerUuid field.
func (o *UserInfo) SetCustomerUuid(v string) {
	o.CustomerUuid = &v
}

// GetIsPrimary returns the IsPrimary field value if set, zero value otherwise.
func (o *UserInfo) GetIsPrimary() bool {
	if o == nil || o.IsPrimary == nil {
		var ret bool
		return ret
	}
	return *o.IsPrimary
}

// GetIsPrimaryOk returns a tuple with the IsPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInfo) GetIsPrimaryOk() (*bool, bool) {
	if o == nil || o.IsPrimary == nil {
		return nil, false
	}
	return o.IsPrimary, true
}

// HasIsPrimary returns a boolean if a field has been set.
func (o *UserInfo) HasIsPrimary() bool {
	if o != nil && o.IsPrimary != nil {
		return true
	}

	return false
}

// SetIsPrimary gets a reference to the given bool and assigns it to the IsPrimary field.
func (o *UserInfo) SetIsPrimary(v bool) {
	o.IsPrimary = &v
}

// GetLdapSpecifiedRole returns the LdapSpecifiedRole field value if set, zero value otherwise.
func (o *UserInfo) GetLdapSpecifiedRole() bool {
	if o == nil || o.LdapSpecifiedRole == nil {
		var ret bool
		return ret
	}
	return *o.LdapSpecifiedRole
}

// GetLdapSpecifiedRoleOk returns a tuple with the LdapSpecifiedRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInfo) GetLdapSpecifiedRoleOk() (*bool, bool) {
	if o == nil || o.LdapSpecifiedRole == nil {
		return nil, false
	}
	return o.LdapSpecifiedRole, true
}

// HasLdapSpecifiedRole returns a boolean if a field has been set.
func (o *UserInfo) HasLdapSpecifiedRole() bool {
	if o != nil && o.LdapSpecifiedRole != nil {
		return true
	}

	return false
}

// SetLdapSpecifiedRole gets a reference to the given bool and assigns it to the LdapSpecifiedRole field.
func (o *UserInfo) SetLdapSpecifiedRole(v bool) {
	o.LdapSpecifiedRole = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *UserInfo) GetTimezone() string {
	if o == nil || o.Timezone == nil {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInfo) GetTimezoneOk() (*string, bool) {
	if o == nil || o.Timezone == nil {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *UserInfo) HasTimezone() bool {
	if o != nil && o.Timezone != nil {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *UserInfo) SetTimezone(v string) {
	o.Timezone = &v
}

func (o UserInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.UserType != nil {
		toSerialize["user_type"] = o.UserType
	}
	if o.CreationDate != nil {
		toSerialize["creation_date"] = o.CreationDate
	}
	if o.CustomerUuid != nil {
		toSerialize["customer_uuid"] = o.CustomerUuid
	}
	if o.IsPrimary != nil {
		toSerialize["is_primary"] = o.IsPrimary
	}
	if o.LdapSpecifiedRole != nil {
		toSerialize["ldap_specified_role"] = o.LdapSpecifiedRole
	}
	if o.Timezone != nil {
		toSerialize["timezone"] = o.Timezone
	}
	return json.Marshal(toSerialize)
}

type NullableUserInfo struct {
	value *UserInfo
	isSet bool
}

func (v NullableUserInfo) Get() *UserInfo {
	return v.value
}

func (v *NullableUserInfo) Set(val *UserInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableUserInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableUserInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserInfo(val *UserInfo) *NullableUserInfo {
	return &NullableUserInfo{value: val, isSet: true}
}

func (v NullableUserInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


