/*
 * YugabyteDB Anywhere V2 APIs
 *
 * An improved set of APIs for managing YugabyteDB Anywhere
 *
 * API version: v2
 * Contact: support@yugabyte.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// PaginationResp Pagination information in page API responses.
type PaginationResp struct {
	// There are more next records if true.
	HasNext *bool `json:"has_next,omitempty"`
	// There are more previous records if true.
	HasPrev *bool `json:"has_prev,omitempty"`
	// Total number of records.
	TotalCount *int32 `json:"total_count,omitempty"`
}

// NewPaginationResp instantiates a new PaginationResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginationResp() *PaginationResp {
	this := PaginationResp{}
	return &this
}

// NewPaginationRespWithDefaults instantiates a new PaginationResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginationRespWithDefaults() *PaginationResp {
	this := PaginationResp{}
	return &this
}

// GetHasNext returns the HasNext field value if set, zero value otherwise.
func (o *PaginationResp) GetHasNext() bool {
	if o == nil || o.HasNext == nil {
		var ret bool
		return ret
	}
	return *o.HasNext
}

// GetHasNextOk returns a tuple with the HasNext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationResp) GetHasNextOk() (*bool, bool) {
	if o == nil || o.HasNext == nil {
		return nil, false
	}
	return o.HasNext, true
}

// HasHasNext returns a boolean if a field has been set.
func (o *PaginationResp) HasHasNext() bool {
	if o != nil && o.HasNext != nil {
		return true
	}

	return false
}

// SetHasNext gets a reference to the given bool and assigns it to the HasNext field.
func (o *PaginationResp) SetHasNext(v bool) {
	o.HasNext = &v
}

// GetHasPrev returns the HasPrev field value if set, zero value otherwise.
func (o *PaginationResp) GetHasPrev() bool {
	if o == nil || o.HasPrev == nil {
		var ret bool
		return ret
	}
	return *o.HasPrev
}

// GetHasPrevOk returns a tuple with the HasPrev field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationResp) GetHasPrevOk() (*bool, bool) {
	if o == nil || o.HasPrev == nil {
		return nil, false
	}
	return o.HasPrev, true
}

// HasHasPrev returns a boolean if a field has been set.
func (o *PaginationResp) HasHasPrev() bool {
	if o != nil && o.HasPrev != nil {
		return true
	}

	return false
}

// SetHasPrev gets a reference to the given bool and assigns it to the HasPrev field.
func (o *PaginationResp) SetHasPrev(v bool) {
	o.HasPrev = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *PaginationResp) GetTotalCount() int32 {
	if o == nil || o.TotalCount == nil {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationResp) GetTotalCountOk() (*int32, bool) {
	if o == nil || o.TotalCount == nil {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *PaginationResp) HasTotalCount() bool {
	if o != nil && o.TotalCount != nil {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *PaginationResp) SetTotalCount(v int32) {
	o.TotalCount = &v
}

func (o PaginationResp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HasNext != nil {
		toSerialize["has_next"] = o.HasNext
	}
	if o.HasPrev != nil {
		toSerialize["has_prev"] = o.HasPrev
	}
	if o.TotalCount != nil {
		toSerialize["total_count"] = o.TotalCount
	}
	return json.Marshal(toSerialize)
}

type NullablePaginationResp struct {
	value *PaginationResp
	isSet bool
}

func (v NullablePaginationResp) Get() *PaginationResp {
	return v.value
}

func (v *NullablePaginationResp) Set(val *PaginationResp) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginationResp) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginationResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginationResp(val *PaginationResp) *NullablePaginationResp {
	return &NullablePaginationResp{value: val, isSet: true}
}

func (v NullablePaginationResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginationResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


