/*
 * YugabyteDB Anywhere V2 APIs
 *
 * An improved set of APIs for managing YugabyteDB Anywhere
 *
 * API version: v2
 * Contact: support@yugabyte.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// ClusterInfo Universe Cluster Info. Part of the Response payload UniverseInfo that describes system generated properties of a Cluster.
type ClusterInfo struct {
	// cluster uuid
	Uuid *string `json:"uuid,omitempty"`
	// TBD
	SpotPrice *float64 `json:"spot_price,omitempty"`
}

// NewClusterInfo instantiates a new ClusterInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterInfo() *ClusterInfo {
	this := ClusterInfo{}
	return &this
}

// NewClusterInfoWithDefaults instantiates a new ClusterInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterInfoWithDefaults() *ClusterInfo {
	this := ClusterInfo{}
	return &this
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *ClusterInfo) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterInfo) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *ClusterInfo) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *ClusterInfo) SetUuid(v string) {
	o.Uuid = &v
}

// GetSpotPrice returns the SpotPrice field value if set, zero value otherwise.
func (o *ClusterInfo) GetSpotPrice() float64 {
	if o == nil || o.SpotPrice == nil {
		var ret float64
		return ret
	}
	return *o.SpotPrice
}

// GetSpotPriceOk returns a tuple with the SpotPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterInfo) GetSpotPriceOk() (*float64, bool) {
	if o == nil || o.SpotPrice == nil {
		return nil, false
	}
	return o.SpotPrice, true
}

// HasSpotPrice returns a boolean if a field has been set.
func (o *ClusterInfo) HasSpotPrice() bool {
	if o != nil && o.SpotPrice != nil {
		return true
	}

	return false
}

// SetSpotPrice gets a reference to the given float64 and assigns it to the SpotPrice field.
func (o *ClusterInfo) SetSpotPrice(v float64) {
	o.SpotPrice = &v
}

func (o ClusterInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.SpotPrice != nil {
		toSerialize["spot_price"] = o.SpotPrice
	}
	return json.Marshal(toSerialize)
}

type NullableClusterInfo struct {
	value *ClusterInfo
	isSet bool
}

func (v NullableClusterInfo) Get() *ClusterInfo {
	return v.value
}

func (v *NullableClusterInfo) Set(val *ClusterInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterInfo(val *ClusterInfo) *NullableClusterInfo {
	return &NullableClusterInfo{value: val, isSet: true}
}

func (v NullableClusterInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


