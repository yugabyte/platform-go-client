/*
 * YugabyteDB Anywhere V2 APIs
 *
 * An improved set of APIs for managing YugabyteDB Anywhere
 *
 * API version: v2
 * Contact: support@yugabyte.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// JobSchedule Job schedule which contains the spec and execution info for a schedule.
type JobSchedule struct {
	Spec *JobScheduleSpec `json:"spec,omitempty"`
	Info *JobScheduleInfo `json:"info,omitempty"`
}

// NewJobSchedule instantiates a new JobSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobSchedule() *JobSchedule {
	this := JobSchedule{}
	return &this
}

// NewJobScheduleWithDefaults instantiates a new JobSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobScheduleWithDefaults() *JobSchedule {
	this := JobSchedule{}
	return &this
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *JobSchedule) GetSpec() JobScheduleSpec {
	if o == nil || o.Spec == nil {
		var ret JobScheduleSpec
		return ret
	}
	return *o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobSchedule) GetSpecOk() (*JobScheduleSpec, bool) {
	if o == nil || o.Spec == nil {
		return nil, false
	}
	return o.Spec, true
}

// HasSpec returns a boolean if a field has been set.
func (o *JobSchedule) HasSpec() bool {
	if o != nil && o.Spec != nil {
		return true
	}

	return false
}

// SetSpec gets a reference to the given JobScheduleSpec and assigns it to the Spec field.
func (o *JobSchedule) SetSpec(v JobScheduleSpec) {
	o.Spec = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *JobSchedule) GetInfo() JobScheduleInfo {
	if o == nil || o.Info == nil {
		var ret JobScheduleInfo
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobSchedule) GetInfoOk() (*JobScheduleInfo, bool) {
	if o == nil || o.Info == nil {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *JobSchedule) HasInfo() bool {
	if o != nil && o.Info != nil {
		return true
	}

	return false
}

// SetInfo gets a reference to the given JobScheduleInfo and assigns it to the Info field.
func (o *JobSchedule) SetInfo(v JobScheduleInfo) {
	o.Info = &v
}

func (o JobSchedule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Spec != nil {
		toSerialize["spec"] = o.Spec
	}
	if o.Info != nil {
		toSerialize["info"] = o.Info
	}
	return json.Marshal(toSerialize)
}

type NullableJobSchedule struct {
	value *JobSchedule
	isSet bool
}

func (v NullableJobSchedule) Get() *JobSchedule {
	return v.value
}

func (v *NullableJobSchedule) Set(val *JobSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableJobSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableJobSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobSchedule(val *JobSchedule) *NullableJobSchedule {
	return &NullableJobSchedule{value: val, isSet: true}
}

func (v NullableJobSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


