/*
 * YugabyteDB Anywhere V2 APIs
 *
 * An improved set of APIs for managing YugabyteDB Anywhere
 *
 * API version: v2
 * Contact: support@yugabyte.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// EncryptionAtRestInfo Encryption At Rest specification for the Universe. Part of UniverseInfo.
type EncryptionAtRestInfo struct {
	// Whether a Universe is currently encrypted at rest
	EncryptionAtRestStatus *bool `json:"encryption_at_rest_status,omitempty"`
}

// NewEncryptionAtRestInfo instantiates a new EncryptionAtRestInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEncryptionAtRestInfo() *EncryptionAtRestInfo {
	this := EncryptionAtRestInfo{}
	return &this
}

// NewEncryptionAtRestInfoWithDefaults instantiates a new EncryptionAtRestInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEncryptionAtRestInfoWithDefaults() *EncryptionAtRestInfo {
	this := EncryptionAtRestInfo{}
	return &this
}

// GetEncryptionAtRestStatus returns the EncryptionAtRestStatus field value if set, zero value otherwise.
func (o *EncryptionAtRestInfo) GetEncryptionAtRestStatus() bool {
	if o == nil || o.EncryptionAtRestStatus == nil {
		var ret bool
		return ret
	}
	return *o.EncryptionAtRestStatus
}

// GetEncryptionAtRestStatusOk returns a tuple with the EncryptionAtRestStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EncryptionAtRestInfo) GetEncryptionAtRestStatusOk() (*bool, bool) {
	if o == nil || o.EncryptionAtRestStatus == nil {
		return nil, false
	}
	return o.EncryptionAtRestStatus, true
}

// HasEncryptionAtRestStatus returns a boolean if a field has been set.
func (o *EncryptionAtRestInfo) HasEncryptionAtRestStatus() bool {
	if o != nil && o.EncryptionAtRestStatus != nil {
		return true
	}

	return false
}

// SetEncryptionAtRestStatus gets a reference to the given bool and assigns it to the EncryptionAtRestStatus field.
func (o *EncryptionAtRestInfo) SetEncryptionAtRestStatus(v bool) {
	o.EncryptionAtRestStatus = &v
}

func (o EncryptionAtRestInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EncryptionAtRestStatus != nil {
		toSerialize["encryption_at_rest_status"] = o.EncryptionAtRestStatus
	}
	return json.Marshal(toSerialize)
}

type NullableEncryptionAtRestInfo struct {
	value *EncryptionAtRestInfo
	isSet bool
}

func (v NullableEncryptionAtRestInfo) Get() *EncryptionAtRestInfo {
	return v.value
}

func (v *NullableEncryptionAtRestInfo) Set(val *EncryptionAtRestInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableEncryptionAtRestInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableEncryptionAtRestInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEncryptionAtRestInfo(val *EncryptionAtRestInfo) *NullableEncryptionAtRestInfo {
	return &NullableEncryptionAtRestInfo{value: val, isSet: true}
}

func (v NullableEncryptionAtRestInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEncryptionAtRestInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


