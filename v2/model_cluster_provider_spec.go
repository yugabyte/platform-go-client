/*
 * YugabyteDB Anywhere V2 APIs
 *
 * An improved set of APIs for managing YugabyteDB Anywhere
 *
 * API version: v2
 * Contact: support@yugabyte.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// ClusterProviderSpec Cloud Provider settings for the cluster. Part of ClusterSpec.
type ClusterProviderSpec struct {
	// Cloud provider UUID
	Provider string `json:"provider"`
	// The list of regions in the cloud provider to place data replicas
	RegionList *[]string `json:"region_list,omitempty"`
	// The region to nominate as the preferred region in a geo-partitioned multi-region cluster
	PreferredRegion *string `json:"preferred_region,omitempty"`
	// One of the SSH access keys defined in Cloud Provider to be configured on nodes VMs. Required for AWS, Azure and GCP Cloud Providers.
	AccessKeyCode *string `json:"access_key_code,omitempty"`
	// The AWS IAM instance profile ARN to use for the nodes in this cluster. Applicable only for nodes on AWS Cloud Provider. If specified, YugabyteDB Anywhere will use this instance profile instead of the access key.
	AwsInstanceProfile *string `json:"aws_instance_profile,omitempty"`
	// Image bundle UUID to use for node VM image. Refers to one of the image bundles defined in the cloud provider.
	ImageBundleUuid *string `json:"image_bundle_uuid,omitempty"`
	// Helm overrides for this cluster. Applicable only for a k8s cloud provider. Refer https://github.com/yugabyte/charts/blob/master/stable/yugabyte/values.yaml for the list of supported overrides.
	HelmOverrides *string `json:"helm_overrides,omitempty"`
	// Helm overrides per availability zone of this cluster. Applicable only if this is a k8s cloud provider. Refer https://github.com/yugabyte/charts/blob/master/stable/yugabyte/values.yaml for the list of supported overrides.
	AzHelmOverrides *map[string]string `json:"az_helm_overrides,omitempty"`
}

// NewClusterProviderSpec instantiates a new ClusterProviderSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterProviderSpec(provider string) *ClusterProviderSpec {
	this := ClusterProviderSpec{}
	this.Provider = provider
	return &this
}

// NewClusterProviderSpecWithDefaults instantiates a new ClusterProviderSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterProviderSpecWithDefaults() *ClusterProviderSpec {
	this := ClusterProviderSpec{}
	return &this
}

// GetProvider returns the Provider field value
func (o *ClusterProviderSpec) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *ClusterProviderSpec) GetProviderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *ClusterProviderSpec) SetProvider(v string) {
	o.Provider = v
}

// GetRegionList returns the RegionList field value if set, zero value otherwise.
func (o *ClusterProviderSpec) GetRegionList() []string {
	if o == nil || o.RegionList == nil {
		var ret []string
		return ret
	}
	return *o.RegionList
}

// GetRegionListOk returns a tuple with the RegionList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterProviderSpec) GetRegionListOk() (*[]string, bool) {
	if o == nil || o.RegionList == nil {
		return nil, false
	}
	return o.RegionList, true
}

// HasRegionList returns a boolean if a field has been set.
func (o *ClusterProviderSpec) HasRegionList() bool {
	if o != nil && o.RegionList != nil {
		return true
	}

	return false
}

// SetRegionList gets a reference to the given []string and assigns it to the RegionList field.
func (o *ClusterProviderSpec) SetRegionList(v []string) {
	o.RegionList = &v
}

// GetPreferredRegion returns the PreferredRegion field value if set, zero value otherwise.
func (o *ClusterProviderSpec) GetPreferredRegion() string {
	if o == nil || o.PreferredRegion == nil {
		var ret string
		return ret
	}
	return *o.PreferredRegion
}

// GetPreferredRegionOk returns a tuple with the PreferredRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterProviderSpec) GetPreferredRegionOk() (*string, bool) {
	if o == nil || o.PreferredRegion == nil {
		return nil, false
	}
	return o.PreferredRegion, true
}

// HasPreferredRegion returns a boolean if a field has been set.
func (o *ClusterProviderSpec) HasPreferredRegion() bool {
	if o != nil && o.PreferredRegion != nil {
		return true
	}

	return false
}

// SetPreferredRegion gets a reference to the given string and assigns it to the PreferredRegion field.
func (o *ClusterProviderSpec) SetPreferredRegion(v string) {
	o.PreferredRegion = &v
}

// GetAccessKeyCode returns the AccessKeyCode field value if set, zero value otherwise.
func (o *ClusterProviderSpec) GetAccessKeyCode() string {
	if o == nil || o.AccessKeyCode == nil {
		var ret string
		return ret
	}
	return *o.AccessKeyCode
}

// GetAccessKeyCodeOk returns a tuple with the AccessKeyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterProviderSpec) GetAccessKeyCodeOk() (*string, bool) {
	if o == nil || o.AccessKeyCode == nil {
		return nil, false
	}
	return o.AccessKeyCode, true
}

// HasAccessKeyCode returns a boolean if a field has been set.
func (o *ClusterProviderSpec) HasAccessKeyCode() bool {
	if o != nil && o.AccessKeyCode != nil {
		return true
	}

	return false
}

// SetAccessKeyCode gets a reference to the given string and assigns it to the AccessKeyCode field.
func (o *ClusterProviderSpec) SetAccessKeyCode(v string) {
	o.AccessKeyCode = &v
}

// GetAwsInstanceProfile returns the AwsInstanceProfile field value if set, zero value otherwise.
func (o *ClusterProviderSpec) GetAwsInstanceProfile() string {
	if o == nil || o.AwsInstanceProfile == nil {
		var ret string
		return ret
	}
	return *o.AwsInstanceProfile
}

// GetAwsInstanceProfileOk returns a tuple with the AwsInstanceProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterProviderSpec) GetAwsInstanceProfileOk() (*string, bool) {
	if o == nil || o.AwsInstanceProfile == nil {
		return nil, false
	}
	return o.AwsInstanceProfile, true
}

// HasAwsInstanceProfile returns a boolean if a field has been set.
func (o *ClusterProviderSpec) HasAwsInstanceProfile() bool {
	if o != nil && o.AwsInstanceProfile != nil {
		return true
	}

	return false
}

// SetAwsInstanceProfile gets a reference to the given string and assigns it to the AwsInstanceProfile field.
func (o *ClusterProviderSpec) SetAwsInstanceProfile(v string) {
	o.AwsInstanceProfile = &v
}

// GetImageBundleUuid returns the ImageBundleUuid field value if set, zero value otherwise.
func (o *ClusterProviderSpec) GetImageBundleUuid() string {
	if o == nil || o.ImageBundleUuid == nil {
		var ret string
		return ret
	}
	return *o.ImageBundleUuid
}

// GetImageBundleUuidOk returns a tuple with the ImageBundleUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterProviderSpec) GetImageBundleUuidOk() (*string, bool) {
	if o == nil || o.ImageBundleUuid == nil {
		return nil, false
	}
	return o.ImageBundleUuid, true
}

// HasImageBundleUuid returns a boolean if a field has been set.
func (o *ClusterProviderSpec) HasImageBundleUuid() bool {
	if o != nil && o.ImageBundleUuid != nil {
		return true
	}

	return false
}

// SetImageBundleUuid gets a reference to the given string and assigns it to the ImageBundleUuid field.
func (o *ClusterProviderSpec) SetImageBundleUuid(v string) {
	o.ImageBundleUuid = &v
}

// GetHelmOverrides returns the HelmOverrides field value if set, zero value otherwise.
func (o *ClusterProviderSpec) GetHelmOverrides() string {
	if o == nil || o.HelmOverrides == nil {
		var ret string
		return ret
	}
	return *o.HelmOverrides
}

// GetHelmOverridesOk returns a tuple with the HelmOverrides field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterProviderSpec) GetHelmOverridesOk() (*string, bool) {
	if o == nil || o.HelmOverrides == nil {
		return nil, false
	}
	return o.HelmOverrides, true
}

// HasHelmOverrides returns a boolean if a field has been set.
func (o *ClusterProviderSpec) HasHelmOverrides() bool {
	if o != nil && o.HelmOverrides != nil {
		return true
	}

	return false
}

// SetHelmOverrides gets a reference to the given string and assigns it to the HelmOverrides field.
func (o *ClusterProviderSpec) SetHelmOverrides(v string) {
	o.HelmOverrides = &v
}

// GetAzHelmOverrides returns the AzHelmOverrides field value if set, zero value otherwise.
func (o *ClusterProviderSpec) GetAzHelmOverrides() map[string]string {
	if o == nil || o.AzHelmOverrides == nil {
		var ret map[string]string
		return ret
	}
	return *o.AzHelmOverrides
}

// GetAzHelmOverridesOk returns a tuple with the AzHelmOverrides field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterProviderSpec) GetAzHelmOverridesOk() (*map[string]string, bool) {
	if o == nil || o.AzHelmOverrides == nil {
		return nil, false
	}
	return o.AzHelmOverrides, true
}

// HasAzHelmOverrides returns a boolean if a field has been set.
func (o *ClusterProviderSpec) HasAzHelmOverrides() bool {
	if o != nil && o.AzHelmOverrides != nil {
		return true
	}

	return false
}

// SetAzHelmOverrides gets a reference to the given map[string]string and assigns it to the AzHelmOverrides field.
func (o *ClusterProviderSpec) SetAzHelmOverrides(v map[string]string) {
	o.AzHelmOverrides = &v
}

func (o ClusterProviderSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["provider"] = o.Provider
	}
	if o.RegionList != nil {
		toSerialize["region_list"] = o.RegionList
	}
	if o.PreferredRegion != nil {
		toSerialize["preferred_region"] = o.PreferredRegion
	}
	if o.AccessKeyCode != nil {
		toSerialize["access_key_code"] = o.AccessKeyCode
	}
	if o.AwsInstanceProfile != nil {
		toSerialize["aws_instance_profile"] = o.AwsInstanceProfile
	}
	if o.ImageBundleUuid != nil {
		toSerialize["image_bundle_uuid"] = o.ImageBundleUuid
	}
	if o.HelmOverrides != nil {
		toSerialize["helm_overrides"] = o.HelmOverrides
	}
	if o.AzHelmOverrides != nil {
		toSerialize["az_helm_overrides"] = o.AzHelmOverrides
	}
	return json.Marshal(toSerialize)
}

type NullableClusterProviderSpec struct {
	value *ClusterProviderSpec
	isSet bool
}

func (v NullableClusterProviderSpec) Get() *ClusterProviderSpec {
	return v.value
}

func (v *NullableClusterProviderSpec) Set(val *ClusterProviderSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterProviderSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterProviderSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterProviderSpec(val *ClusterProviderSpec) *NullableClusterProviderSpec {
	return &NullableClusterProviderSpec{value: val, isSet: true}
}

func (v NullableClusterProviderSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterProviderSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


