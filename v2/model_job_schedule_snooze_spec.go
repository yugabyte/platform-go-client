/*
 * YugabyteDB Anywhere V2 APIs
 *
 * An improved set of APIs for managing YugabyteDB Anywhere
 *
 * API version: v2
 * Contact: support@yugabyte.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// JobScheduleSnoozeSpec JobScheduleSnoozeSpec  Request payload to put off the next schedule by snooze secs. 
type JobScheduleSnoozeSpec struct {
	// Schedule the next job after the sum of snooze time and interval from now.
	SnoozeSecs int64 `json:"snooze_secs"`
}

// NewJobScheduleSnoozeSpec instantiates a new JobScheduleSnoozeSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobScheduleSnoozeSpec(snoozeSecs int64) *JobScheduleSnoozeSpec {
	this := JobScheduleSnoozeSpec{}
	this.SnoozeSecs = snoozeSecs
	return &this
}

// NewJobScheduleSnoozeSpecWithDefaults instantiates a new JobScheduleSnoozeSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobScheduleSnoozeSpecWithDefaults() *JobScheduleSnoozeSpec {
	this := JobScheduleSnoozeSpec{}
	return &this
}

// GetSnoozeSecs returns the SnoozeSecs field value
func (o *JobScheduleSnoozeSpec) GetSnoozeSecs() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SnoozeSecs
}

// GetSnoozeSecsOk returns a tuple with the SnoozeSecs field value
// and a boolean to check if the value has been set.
func (o *JobScheduleSnoozeSpec) GetSnoozeSecsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SnoozeSecs, true
}

// SetSnoozeSecs sets field value
func (o *JobScheduleSnoozeSpec) SetSnoozeSecs(v int64) {
	o.SnoozeSecs = v
}

func (o JobScheduleSnoozeSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["snooze_secs"] = o.SnoozeSecs
	}
	return json.Marshal(toSerialize)
}

type NullableJobScheduleSnoozeSpec struct {
	value *JobScheduleSnoozeSpec
	isSet bool
}

func (v NullableJobScheduleSnoozeSpec) Get() *JobScheduleSnoozeSpec {
	return v.value
}

func (v *NullableJobScheduleSnoozeSpec) Set(val *JobScheduleSnoozeSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableJobScheduleSnoozeSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableJobScheduleSnoozeSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobScheduleSnoozeSpec(val *JobScheduleSnoozeSpec) *NullableJobScheduleSnoozeSpec {
	return &NullableJobScheduleSnoozeSpec{value: val, isSet: true}
}

func (v NullableJobScheduleSnoozeSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobScheduleSnoozeSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


