/*
 * YugabyteDB Anywhere V2 APIs
 *
 * An improved set of APIs for managing YugabyteDB Anywhere
 *
 * API version: v2
 * Contact: support@yugabyte.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// ContinuousRestoreSpec ContinuousRestoreSpec  Continuous Backup Restore time properties. Used to Restore from continuous backup configuration. 
type ContinuousRestoreSpec struct {
	// UUID of the storage config to use
	StorageConfigUuid string `json:"storage_config_uuid"`
	// The name of the directory to restore the most recent back from.
	BackupDir string `json:"backup_dir"`
}

// NewContinuousRestoreSpec instantiates a new ContinuousRestoreSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContinuousRestoreSpec(storageConfigUuid string, backupDir string) *ContinuousRestoreSpec {
	this := ContinuousRestoreSpec{}
	this.StorageConfigUuid = storageConfigUuid
	this.BackupDir = backupDir
	return &this
}

// NewContinuousRestoreSpecWithDefaults instantiates a new ContinuousRestoreSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContinuousRestoreSpecWithDefaults() *ContinuousRestoreSpec {
	this := ContinuousRestoreSpec{}
	return &this
}

// GetStorageConfigUuid returns the StorageConfigUuid field value
func (o *ContinuousRestoreSpec) GetStorageConfigUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StorageConfigUuid
}

// GetStorageConfigUuidOk returns a tuple with the StorageConfigUuid field value
// and a boolean to check if the value has been set.
func (o *ContinuousRestoreSpec) GetStorageConfigUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StorageConfigUuid, true
}

// SetStorageConfigUuid sets field value
func (o *ContinuousRestoreSpec) SetStorageConfigUuid(v string) {
	o.StorageConfigUuid = v
}

// GetBackupDir returns the BackupDir field value
func (o *ContinuousRestoreSpec) GetBackupDir() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackupDir
}

// GetBackupDirOk returns a tuple with the BackupDir field value
// and a boolean to check if the value has been set.
func (o *ContinuousRestoreSpec) GetBackupDirOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BackupDir, true
}

// SetBackupDir sets field value
func (o *ContinuousRestoreSpec) SetBackupDir(v string) {
	o.BackupDir = v
}

func (o ContinuousRestoreSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["storage_config_uuid"] = o.StorageConfigUuid
	}
	if true {
		toSerialize["backup_dir"] = o.BackupDir
	}
	return json.Marshal(toSerialize)
}

type NullableContinuousRestoreSpec struct {
	value *ContinuousRestoreSpec
	isSet bool
}

func (v NullableContinuousRestoreSpec) Get() *ContinuousRestoreSpec {
	return v.value
}

func (v *NullableContinuousRestoreSpec) Set(val *ContinuousRestoreSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableContinuousRestoreSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableContinuousRestoreSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContinuousRestoreSpec(val *ContinuousRestoreSpec) *NullableContinuousRestoreSpec {
	return &NullableContinuousRestoreSpec{value: val, isSet: true}
}

func (v NullableContinuousRestoreSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContinuousRestoreSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


