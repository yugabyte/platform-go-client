/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
	"time"
)

// XClusterTableConfig struct for XClusterTableConfig
type XClusterTableConfig struct {
	BackupUuid *string `json:"backupUuid,omitempty"`
	// Time of the bootstrap of the table
	BootstrapCreateTime *time.Time `json:"bootstrapCreateTime,omitempty"`
	IndexTable bool `json:"indexTable"`
	// Whether this table needs bootstrap process for replication setup
	NeedBootstrap *bool `json:"needBootstrap,omitempty"`
	// Whether replication is set up for this table
	ReplicationSetupDone *bool `json:"replicationSetupDone,omitempty"`
	// Time of the last try to restore data to the target universe
	RestoreTime *time.Time `json:"restoreTime,omitempty"`
	// Status
	Status *string `json:"status,omitempty"`
	// Stream ID if replication is setup; bootstrap ID if the table is bootstrapped
	StreamId *string `json:"streamId,omitempty"`
	// Table ID
	TableId *string `json:"tableId,omitempty"`
}

// NewXClusterTableConfig instantiates a new XClusterTableConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewXClusterTableConfig(indexTable bool, ) *XClusterTableConfig {
	this := XClusterTableConfig{}
	this.IndexTable = indexTable
	return &this
}

// NewXClusterTableConfigWithDefaults instantiates a new XClusterTableConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewXClusterTableConfigWithDefaults() *XClusterTableConfig {
	this := XClusterTableConfig{}
	return &this
}

// GetBackupUuid returns the BackupUuid field value if set, zero value otherwise.
func (o *XClusterTableConfig) GetBackupUuid() string {
	if o == nil || o.BackupUuid == nil {
		var ret string
		return ret
	}
	return *o.BackupUuid
}

// GetBackupUuidOk returns a tuple with the BackupUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XClusterTableConfig) GetBackupUuidOk() (*string, bool) {
	if o == nil || o.BackupUuid == nil {
		return nil, false
	}
	return o.BackupUuid, true
}

// HasBackupUuid returns a boolean if a field has been set.
func (o *XClusterTableConfig) HasBackupUuid() bool {
	if o != nil && o.BackupUuid != nil {
		return true
	}

	return false
}

// SetBackupUuid gets a reference to the given string and assigns it to the BackupUuid field.
func (o *XClusterTableConfig) SetBackupUuid(v string) {
	o.BackupUuid = &v
}

// GetBootstrapCreateTime returns the BootstrapCreateTime field value if set, zero value otherwise.
func (o *XClusterTableConfig) GetBootstrapCreateTime() time.Time {
	if o == nil || o.BootstrapCreateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.BootstrapCreateTime
}

// GetBootstrapCreateTimeOk returns a tuple with the BootstrapCreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XClusterTableConfig) GetBootstrapCreateTimeOk() (*time.Time, bool) {
	if o == nil || o.BootstrapCreateTime == nil {
		return nil, false
	}
	return o.BootstrapCreateTime, true
}

// HasBootstrapCreateTime returns a boolean if a field has been set.
func (o *XClusterTableConfig) HasBootstrapCreateTime() bool {
	if o != nil && o.BootstrapCreateTime != nil {
		return true
	}

	return false
}

// SetBootstrapCreateTime gets a reference to the given time.Time and assigns it to the BootstrapCreateTime field.
func (o *XClusterTableConfig) SetBootstrapCreateTime(v time.Time) {
	o.BootstrapCreateTime = &v
}

// GetIndexTable returns the IndexTable field value
func (o *XClusterTableConfig) GetIndexTable() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.IndexTable
}

// GetIndexTableOk returns a tuple with the IndexTable field value
// and a boolean to check if the value has been set.
func (o *XClusterTableConfig) GetIndexTableOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IndexTable, true
}

// SetIndexTable sets field value
func (o *XClusterTableConfig) SetIndexTable(v bool) {
	o.IndexTable = v
}

// GetNeedBootstrap returns the NeedBootstrap field value if set, zero value otherwise.
func (o *XClusterTableConfig) GetNeedBootstrap() bool {
	if o == nil || o.NeedBootstrap == nil {
		var ret bool
		return ret
	}
	return *o.NeedBootstrap
}

// GetNeedBootstrapOk returns a tuple with the NeedBootstrap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XClusterTableConfig) GetNeedBootstrapOk() (*bool, bool) {
	if o == nil || o.NeedBootstrap == nil {
		return nil, false
	}
	return o.NeedBootstrap, true
}

// HasNeedBootstrap returns a boolean if a field has been set.
func (o *XClusterTableConfig) HasNeedBootstrap() bool {
	if o != nil && o.NeedBootstrap != nil {
		return true
	}

	return false
}

// SetNeedBootstrap gets a reference to the given bool and assigns it to the NeedBootstrap field.
func (o *XClusterTableConfig) SetNeedBootstrap(v bool) {
	o.NeedBootstrap = &v
}

// GetReplicationSetupDone returns the ReplicationSetupDone field value if set, zero value otherwise.
func (o *XClusterTableConfig) GetReplicationSetupDone() bool {
	if o == nil || o.ReplicationSetupDone == nil {
		var ret bool
		return ret
	}
	return *o.ReplicationSetupDone
}

// GetReplicationSetupDoneOk returns a tuple with the ReplicationSetupDone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XClusterTableConfig) GetReplicationSetupDoneOk() (*bool, bool) {
	if o == nil || o.ReplicationSetupDone == nil {
		return nil, false
	}
	return o.ReplicationSetupDone, true
}

// HasReplicationSetupDone returns a boolean if a field has been set.
func (o *XClusterTableConfig) HasReplicationSetupDone() bool {
	if o != nil && o.ReplicationSetupDone != nil {
		return true
	}

	return false
}

// SetReplicationSetupDone gets a reference to the given bool and assigns it to the ReplicationSetupDone field.
func (o *XClusterTableConfig) SetReplicationSetupDone(v bool) {
	o.ReplicationSetupDone = &v
}

// GetRestoreTime returns the RestoreTime field value if set, zero value otherwise.
func (o *XClusterTableConfig) GetRestoreTime() time.Time {
	if o == nil || o.RestoreTime == nil {
		var ret time.Time
		return ret
	}
	return *o.RestoreTime
}

// GetRestoreTimeOk returns a tuple with the RestoreTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XClusterTableConfig) GetRestoreTimeOk() (*time.Time, bool) {
	if o == nil || o.RestoreTime == nil {
		return nil, false
	}
	return o.RestoreTime, true
}

// HasRestoreTime returns a boolean if a field has been set.
func (o *XClusterTableConfig) HasRestoreTime() bool {
	if o != nil && o.RestoreTime != nil {
		return true
	}

	return false
}

// SetRestoreTime gets a reference to the given time.Time and assigns it to the RestoreTime field.
func (o *XClusterTableConfig) SetRestoreTime(v time.Time) {
	o.RestoreTime = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *XClusterTableConfig) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XClusterTableConfig) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *XClusterTableConfig) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *XClusterTableConfig) SetStatus(v string) {
	o.Status = &v
}

// GetStreamId returns the StreamId field value if set, zero value otherwise.
func (o *XClusterTableConfig) GetStreamId() string {
	if o == nil || o.StreamId == nil {
		var ret string
		return ret
	}
	return *o.StreamId
}

// GetStreamIdOk returns a tuple with the StreamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XClusterTableConfig) GetStreamIdOk() (*string, bool) {
	if o == nil || o.StreamId == nil {
		return nil, false
	}
	return o.StreamId, true
}

// HasStreamId returns a boolean if a field has been set.
func (o *XClusterTableConfig) HasStreamId() bool {
	if o != nil && o.StreamId != nil {
		return true
	}

	return false
}

// SetStreamId gets a reference to the given string and assigns it to the StreamId field.
func (o *XClusterTableConfig) SetStreamId(v string) {
	o.StreamId = &v
}

// GetTableId returns the TableId field value if set, zero value otherwise.
func (o *XClusterTableConfig) GetTableId() string {
	if o == nil || o.TableId == nil {
		var ret string
		return ret
	}
	return *o.TableId
}

// GetTableIdOk returns a tuple with the TableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XClusterTableConfig) GetTableIdOk() (*string, bool) {
	if o == nil || o.TableId == nil {
		return nil, false
	}
	return o.TableId, true
}

// HasTableId returns a boolean if a field has been set.
func (o *XClusterTableConfig) HasTableId() bool {
	if o != nil && o.TableId != nil {
		return true
	}

	return false
}

// SetTableId gets a reference to the given string and assigns it to the TableId field.
func (o *XClusterTableConfig) SetTableId(v string) {
	o.TableId = &v
}

func (o XClusterTableConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BackupUuid != nil {
		toSerialize["backupUuid"] = o.BackupUuid
	}
	if o.BootstrapCreateTime != nil {
		toSerialize["bootstrapCreateTime"] = o.BootstrapCreateTime
	}
	if true {
		toSerialize["indexTable"] = o.IndexTable
	}
	if o.NeedBootstrap != nil {
		toSerialize["needBootstrap"] = o.NeedBootstrap
	}
	if o.ReplicationSetupDone != nil {
		toSerialize["replicationSetupDone"] = o.ReplicationSetupDone
	}
	if o.RestoreTime != nil {
		toSerialize["restoreTime"] = o.RestoreTime
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StreamId != nil {
		toSerialize["streamId"] = o.StreamId
	}
	if o.TableId != nil {
		toSerialize["tableId"] = o.TableId
	}
	return json.Marshal(toSerialize)
}

type NullableXClusterTableConfig struct {
	value *XClusterTableConfig
	isSet bool
}

func (v NullableXClusterTableConfig) Get() *XClusterTableConfig {
	return v.value
}

func (v *NullableXClusterTableConfig) Set(val *XClusterTableConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableXClusterTableConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableXClusterTableConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableXClusterTableConfig(val *XClusterTableConfig) *NullableXClusterTableConfig {
	return &NullableXClusterTableConfig{value: val, isSet: true}
}

func (v NullableXClusterTableConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableXClusterTableConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


