/*
 * Yugabyte Platform APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package yb_platform_client

import (
	"encoding/json"
)

// EncryptionAtRestConfig Encryption at rest configuration
type EncryptionAtRestConfig struct {
	// Whether a universe is currently encrypted at rest
	EncryptionAtRestEnabled *bool `json:"encryptionAtRestEnabled,omitempty"`
	// KMS configuration UUID
	KmsConfigUUID *string `json:"kmsConfigUUID,omitempty"`
	// Operation type: enable, disable, or rotate the universe key/encryption at rest
	OpType *string `json:"opType,omitempty"`
	// Whether to generate a data key or just retrieve the CMK ARN
	Type *string `json:"type,omitempty"`
}

// NewEncryptionAtRestConfig instantiates a new EncryptionAtRestConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEncryptionAtRestConfig() *EncryptionAtRestConfig {
	this := EncryptionAtRestConfig{}
	return &this
}

// NewEncryptionAtRestConfigWithDefaults instantiates a new EncryptionAtRestConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEncryptionAtRestConfigWithDefaults() *EncryptionAtRestConfig {
	this := EncryptionAtRestConfig{}
	return &this
}

// GetEncryptionAtRestEnabled returns the EncryptionAtRestEnabled field value if set, zero value otherwise.
func (o *EncryptionAtRestConfig) GetEncryptionAtRestEnabled() bool {
	if o == nil || o.EncryptionAtRestEnabled == nil {
		var ret bool
		return ret
	}
	return *o.EncryptionAtRestEnabled
}

// GetEncryptionAtRestEnabledOk returns a tuple with the EncryptionAtRestEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EncryptionAtRestConfig) GetEncryptionAtRestEnabledOk() (*bool, bool) {
	if o == nil || o.EncryptionAtRestEnabled == nil {
		return nil, false
	}
	return o.EncryptionAtRestEnabled, true
}

// HasEncryptionAtRestEnabled returns a boolean if a field has been set.
func (o *EncryptionAtRestConfig) HasEncryptionAtRestEnabled() bool {
	if o != nil && o.EncryptionAtRestEnabled != nil {
		return true
	}

	return false
}

// SetEncryptionAtRestEnabled gets a reference to the given bool and assigns it to the EncryptionAtRestEnabled field.
func (o *EncryptionAtRestConfig) SetEncryptionAtRestEnabled(v bool) {
	o.EncryptionAtRestEnabled = &v
}

// GetKmsConfigUUID returns the KmsConfigUUID field value if set, zero value otherwise.
func (o *EncryptionAtRestConfig) GetKmsConfigUUID() string {
	if o == nil || o.KmsConfigUUID == nil {
		var ret string
		return ret
	}
	return *o.KmsConfigUUID
}

// GetKmsConfigUUIDOk returns a tuple with the KmsConfigUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EncryptionAtRestConfig) GetKmsConfigUUIDOk() (*string, bool) {
	if o == nil || o.KmsConfigUUID == nil {
		return nil, false
	}
	return o.KmsConfigUUID, true
}

// HasKmsConfigUUID returns a boolean if a field has been set.
func (o *EncryptionAtRestConfig) HasKmsConfigUUID() bool {
	if o != nil && o.KmsConfigUUID != nil {
		return true
	}

	return false
}

// SetKmsConfigUUID gets a reference to the given string and assigns it to the KmsConfigUUID field.
func (o *EncryptionAtRestConfig) SetKmsConfigUUID(v string) {
	o.KmsConfigUUID = &v
}

// GetOpType returns the OpType field value if set, zero value otherwise.
func (o *EncryptionAtRestConfig) GetOpType() string {
	if o == nil || o.OpType == nil {
		var ret string
		return ret
	}
	return *o.OpType
}

// GetOpTypeOk returns a tuple with the OpType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EncryptionAtRestConfig) GetOpTypeOk() (*string, bool) {
	if o == nil || o.OpType == nil {
		return nil, false
	}
	return o.OpType, true
}

// HasOpType returns a boolean if a field has been set.
func (o *EncryptionAtRestConfig) HasOpType() bool {
	if o != nil && o.OpType != nil {
		return true
	}

	return false
}

// SetOpType gets a reference to the given string and assigns it to the OpType field.
func (o *EncryptionAtRestConfig) SetOpType(v string) {
	o.OpType = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *EncryptionAtRestConfig) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EncryptionAtRestConfig) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *EncryptionAtRestConfig) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *EncryptionAtRestConfig) SetType(v string) {
	o.Type = &v
}

func (o EncryptionAtRestConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EncryptionAtRestEnabled != nil {
		toSerialize["encryptionAtRestEnabled"] = o.EncryptionAtRestEnabled
	}
	if o.KmsConfigUUID != nil {
		toSerialize["kmsConfigUUID"] = o.KmsConfigUUID
	}
	if o.OpType != nil {
		toSerialize["opType"] = o.OpType
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableEncryptionAtRestConfig struct {
	value *EncryptionAtRestConfig
	isSet bool
}

func (v NullableEncryptionAtRestConfig) Get() *EncryptionAtRestConfig {
	return v.value
}

func (v *NullableEncryptionAtRestConfig) Set(val *EncryptionAtRestConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableEncryptionAtRestConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableEncryptionAtRestConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEncryptionAtRestConfig(val *EncryptionAtRestConfig) *NullableEncryptionAtRestConfig {
	return &NullableEncryptionAtRestConfig{value: val, isSet: true}
}

func (v NullableEncryptionAtRestConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEncryptionAtRestConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


