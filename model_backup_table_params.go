/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// BackupTableParams Backup table parameters
type BackupTableParams struct {
	// Action type
	ActionType *string `json:"actionType,omitempty"`
	// Backup all tables in Keyspace
	AllTables *bool `json:"allTables,omitempty"`
	// Alter load balancer state
	AlterLoadBalancer *bool `json:"alterLoadBalancer,omitempty"`
	// Backups
	BackupList *[]BackupTableParams `json:"backupList,omitempty"`
	BackupPointInTimeRestoreWindow *BackupPointInTimeRestoreWindow `json:"backupPointInTimeRestoreWindow,omitempty"`
	// Backup size in bytes
	BackupSizeInBytes *int64 `json:"backupSizeInBytes,omitempty"`
	// Backup type
	BackupType *string `json:"backupType,omitempty"`
	// Backup UUID
	BackupUuid *string `json:"backupUuid,omitempty"`
	// Base backup UUID
	BaseBackupUUID *string `json:"baseBackupUUID,omitempty"`
	// Amazon Resource Name (ARN) of the CMK
	CmkArn *string `json:"cmkArn,omitempty"`
	CommunicationPorts *CommunicationPorts `json:"communicationPorts,omitempty"`
	CreatingUser Users `json:"creatingUser"`
	// Cron expression for a recurring backup
	CronExpression *string `json:"cronExpression,omitempty"`
	// Customer UUID
	CustomerUuid *string `json:"customerUuid,omitempty"`
	DeviceInfo *DeviceInfo `json:"deviceInfo,omitempty"`
	// Disable checksum
	DisableChecksum *bool `json:"disableChecksum,omitempty"`
	// Disable multipart upload
	DisableMultipart *bool `json:"disableMultipart,omitempty"`
	// Don't add -m flag during gsutil upload dir command
	DisableParallelism *bool `json:"disableParallelism,omitempty"`
	// Is verbose logging enabled
	EnableVerboseLogs *bool `json:"enableVerboseLogs,omitempty"`
	EnableYbc *bool `json:"enableYbc,omitempty"`
	EncryptionAtRestConfig *EncryptionAtRestConfig `json:"encryptionAtRestConfig,omitempty"`
	// Error message
	ErrorString *string `json:"errorString,omitempty"`
	// Expected universe version
	ExpectedUniverseVersion *int32 `json:"expectedUniverseVersion,omitempty"`
	// Time unit for backup expiry time
	ExpiryTimeUnit *string `json:"expiryTimeUnit,omitempty"`
	ExtraDependencies *ExtraDependencies `json:"extraDependencies,omitempty"`
	FullBackup bool `json:"fullBackup"`
	// Incremental backups chain size
	FullChainSizeInBytes *int64 `json:"fullChainSizeInBytes,omitempty"`
	// Should table backup errors be ignored
	IgnoreErrors *bool `json:"ignoreErrors,omitempty"`
	InstallYbc *bool `json:"installYbc,omitempty"`
	// Full Table type backup
	IsFullBackup *bool `json:"isFullBackup,omitempty"`
	// Key space
	Keyspace *string `json:"keyspace,omitempty"`
	// KMS configuration UUID
	KmsConfigUUID *string `json:"kmsConfigUUID,omitempty"`
	// Minimum number of backups to retain for a particular backup schedule
	MinNumBackupsToRetain *int32 `json:"minNumBackupsToRetain,omitempty"`
	// User name of the new tables owner
	NewOwner *string `json:"newOwner,omitempty"`
	// Node details
	NodeDetailsSet *[]NodeDetails `json:"nodeDetailsSet,omitempty"`
	// Node exporter user
	NodeExporterUser *string `json:"nodeExporterUser,omitempty"`
	// User name of the current tables owner
	OldOwner *string `json:"oldOwner,omitempty"`
	// Number of concurrent commands to run on nodes over SSH
	Parallelism *int32 `json:"parallelism,omitempty"`
	PlatformUrl string `json:"platformUrl"`
	PlatformVersion string `json:"platformVersion"`
	// Point in time restore available
	PointInTimeRestoreEnabled *bool `json:"pointInTimeRestoreEnabled,omitempty"`
	// Previous task UUID of a retry
	PreviousTaskUUID *string `json:"previousTaskUUID,omitempty"`
	// Per region locations
	RegionLocations *[]RegionLocations `json:"regionLocations,omitempty"`
	// Restore TimeStamp
	RestoreTimeStamp *string `json:"restoreTimeStamp,omitempty"`
	// Schedule Name
	ScheduleName *string `json:"scheduleName,omitempty"`
	// Schedule UUID
	ScheduleUUID *string `json:"scheduleUUID,omitempty"`
	// Frequency to run the backup, in milliseconds
	SchedulingFrequency *int64 `json:"schedulingFrequency,omitempty"`
	SleepAfterMasterRestartMillis int32 `json:"sleepAfterMasterRestartMillis"`
	SleepAfterTServerRestartMillis int32 `json:"sleepAfterTServerRestartMillis"`
	// The source universe's xcluster replication relationships
	SourceXClusterConfigs *[]string `json:"sourceXClusterConfigs,omitempty"`
	// Is SSE
	Sse *bool `json:"sse,omitempty"`
	// Type of backup storage config
	StorageConfigType *string `json:"storageConfigType,omitempty"`
	// Storage configuration UUID
	StorageConfigUUID string `json:"storageConfigUUID"`
	// Storage location
	StorageLocation *string `json:"storageLocation,omitempty"`
	// Table by table backup
	TableByTableBackup *bool `json:"tableByTableBackup,omitempty"`
	// Table name
	TableName *string `json:"tableName,omitempty"`
	// Tables
	TableNameList *[]string `json:"tableNameList,omitempty"`
	// Table UUID
	TableUUID *string `json:"tableUUID,omitempty"`
	// Table UUIDs
	TableUUIDList *[]string `json:"tableUUIDList,omitempty"`
	// Tablespaces info
	TablespacesList *[]Tablespace `json:"tablespacesList,omitempty"`
	// The target universe's xcluster replication relationships
	TargetXClusterConfigs *[]string `json:"targetXClusterConfigs,omitempty"`
	// Time before deleting the backup from storage, in milliseconds
	TimeBeforeDelete *int64 `json:"timeBeforeDelete,omitempty"`
	TimeTakenPartial int64 `json:"timeTakenPartial"`
	// Is backup transactional across tables
	TransactionalBackup *bool `json:"transactionalBackup,omitempty"`
	// Associated universe UUID
	UniverseUUID *string `json:"universeUUID,omitempty"`
	// Is tablespaces information included
	UseTablespaces *bool `json:"useTablespaces,omitempty"`
	// Previous software version
	YbPrevSoftwareVersion *string `json:"ybPrevSoftwareVersion,omitempty"`
	YbcInstalled *bool `json:"ybcInstalled,omitempty"`
	YbcSoftwareVersion *string `json:"ybcSoftwareVersion,omitempty"`
}

// NewBackupTableParams instantiates a new BackupTableParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupTableParams(creatingUser Users, fullBackup bool, platformUrl string, platformVersion string, sleepAfterMasterRestartMillis int32, sleepAfterTServerRestartMillis int32, storageConfigUUID string, timeTakenPartial int64) *BackupTableParams {
	this := BackupTableParams{}
	this.CreatingUser = creatingUser
	this.FullBackup = fullBackup
	this.PlatformUrl = platformUrl
	this.PlatformVersion = platformVersion
	this.SleepAfterMasterRestartMillis = sleepAfterMasterRestartMillis
	this.SleepAfterTServerRestartMillis = sleepAfterTServerRestartMillis
	this.StorageConfigUUID = storageConfigUUID
	this.TimeTakenPartial = timeTakenPartial
	return &this
}

// NewBackupTableParamsWithDefaults instantiates a new BackupTableParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupTableParamsWithDefaults() *BackupTableParams {
	this := BackupTableParams{}
	return &this
}

// GetActionType returns the ActionType field value if set, zero value otherwise.
func (o *BackupTableParams) GetActionType() string {
	if o == nil || o.ActionType == nil {
		var ret string
		return ret
	}
	return *o.ActionType
}

// GetActionTypeOk returns a tuple with the ActionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetActionTypeOk() (*string, bool) {
	if o == nil || o.ActionType == nil {
		return nil, false
	}
	return o.ActionType, true
}

// HasActionType returns a boolean if a field has been set.
func (o *BackupTableParams) HasActionType() bool {
	if o != nil && o.ActionType != nil {
		return true
	}

	return false
}

// SetActionType gets a reference to the given string and assigns it to the ActionType field.
func (o *BackupTableParams) SetActionType(v string) {
	o.ActionType = &v
}

// GetAllTables returns the AllTables field value if set, zero value otherwise.
func (o *BackupTableParams) GetAllTables() bool {
	if o == nil || o.AllTables == nil {
		var ret bool
		return ret
	}
	return *o.AllTables
}

// GetAllTablesOk returns a tuple with the AllTables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetAllTablesOk() (*bool, bool) {
	if o == nil || o.AllTables == nil {
		return nil, false
	}
	return o.AllTables, true
}

// HasAllTables returns a boolean if a field has been set.
func (o *BackupTableParams) HasAllTables() bool {
	if o != nil && o.AllTables != nil {
		return true
	}

	return false
}

// SetAllTables gets a reference to the given bool and assigns it to the AllTables field.
func (o *BackupTableParams) SetAllTables(v bool) {
	o.AllTables = &v
}

// GetAlterLoadBalancer returns the AlterLoadBalancer field value if set, zero value otherwise.
func (o *BackupTableParams) GetAlterLoadBalancer() bool {
	if o == nil || o.AlterLoadBalancer == nil {
		var ret bool
		return ret
	}
	return *o.AlterLoadBalancer
}

// GetAlterLoadBalancerOk returns a tuple with the AlterLoadBalancer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetAlterLoadBalancerOk() (*bool, bool) {
	if o == nil || o.AlterLoadBalancer == nil {
		return nil, false
	}
	return o.AlterLoadBalancer, true
}

// HasAlterLoadBalancer returns a boolean if a field has been set.
func (o *BackupTableParams) HasAlterLoadBalancer() bool {
	if o != nil && o.AlterLoadBalancer != nil {
		return true
	}

	return false
}

// SetAlterLoadBalancer gets a reference to the given bool and assigns it to the AlterLoadBalancer field.
func (o *BackupTableParams) SetAlterLoadBalancer(v bool) {
	o.AlterLoadBalancer = &v
}

// GetBackupList returns the BackupList field value if set, zero value otherwise.
func (o *BackupTableParams) GetBackupList() []BackupTableParams {
	if o == nil || o.BackupList == nil {
		var ret []BackupTableParams
		return ret
	}
	return *o.BackupList
}

// GetBackupListOk returns a tuple with the BackupList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetBackupListOk() (*[]BackupTableParams, bool) {
	if o == nil || o.BackupList == nil {
		return nil, false
	}
	return o.BackupList, true
}

// HasBackupList returns a boolean if a field has been set.
func (o *BackupTableParams) HasBackupList() bool {
	if o != nil && o.BackupList != nil {
		return true
	}

	return false
}

// SetBackupList gets a reference to the given []BackupTableParams and assigns it to the BackupList field.
func (o *BackupTableParams) SetBackupList(v []BackupTableParams) {
	o.BackupList = &v
}

// GetBackupPointInTimeRestoreWindow returns the BackupPointInTimeRestoreWindow field value if set, zero value otherwise.
func (o *BackupTableParams) GetBackupPointInTimeRestoreWindow() BackupPointInTimeRestoreWindow {
	if o == nil || o.BackupPointInTimeRestoreWindow == nil {
		var ret BackupPointInTimeRestoreWindow
		return ret
	}
	return *o.BackupPointInTimeRestoreWindow
}

// GetBackupPointInTimeRestoreWindowOk returns a tuple with the BackupPointInTimeRestoreWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetBackupPointInTimeRestoreWindowOk() (*BackupPointInTimeRestoreWindow, bool) {
	if o == nil || o.BackupPointInTimeRestoreWindow == nil {
		return nil, false
	}
	return o.BackupPointInTimeRestoreWindow, true
}

// HasBackupPointInTimeRestoreWindow returns a boolean if a field has been set.
func (o *BackupTableParams) HasBackupPointInTimeRestoreWindow() bool {
	if o != nil && o.BackupPointInTimeRestoreWindow != nil {
		return true
	}

	return false
}

// SetBackupPointInTimeRestoreWindow gets a reference to the given BackupPointInTimeRestoreWindow and assigns it to the BackupPointInTimeRestoreWindow field.
func (o *BackupTableParams) SetBackupPointInTimeRestoreWindow(v BackupPointInTimeRestoreWindow) {
	o.BackupPointInTimeRestoreWindow = &v
}

// GetBackupSizeInBytes returns the BackupSizeInBytes field value if set, zero value otherwise.
func (o *BackupTableParams) GetBackupSizeInBytes() int64 {
	if o == nil || o.BackupSizeInBytes == nil {
		var ret int64
		return ret
	}
	return *o.BackupSizeInBytes
}

// GetBackupSizeInBytesOk returns a tuple with the BackupSizeInBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetBackupSizeInBytesOk() (*int64, bool) {
	if o == nil || o.BackupSizeInBytes == nil {
		return nil, false
	}
	return o.BackupSizeInBytes, true
}

// HasBackupSizeInBytes returns a boolean if a field has been set.
func (o *BackupTableParams) HasBackupSizeInBytes() bool {
	if o != nil && o.BackupSizeInBytes != nil {
		return true
	}

	return false
}

// SetBackupSizeInBytes gets a reference to the given int64 and assigns it to the BackupSizeInBytes field.
func (o *BackupTableParams) SetBackupSizeInBytes(v int64) {
	o.BackupSizeInBytes = &v
}

// GetBackupType returns the BackupType field value if set, zero value otherwise.
func (o *BackupTableParams) GetBackupType() string {
	if o == nil || o.BackupType == nil {
		var ret string
		return ret
	}
	return *o.BackupType
}

// GetBackupTypeOk returns a tuple with the BackupType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetBackupTypeOk() (*string, bool) {
	if o == nil || o.BackupType == nil {
		return nil, false
	}
	return o.BackupType, true
}

// HasBackupType returns a boolean if a field has been set.
func (o *BackupTableParams) HasBackupType() bool {
	if o != nil && o.BackupType != nil {
		return true
	}

	return false
}

// SetBackupType gets a reference to the given string and assigns it to the BackupType field.
func (o *BackupTableParams) SetBackupType(v string) {
	o.BackupType = &v
}

// GetBackupUuid returns the BackupUuid field value if set, zero value otherwise.
func (o *BackupTableParams) GetBackupUuid() string {
	if o == nil || o.BackupUuid == nil {
		var ret string
		return ret
	}
	return *o.BackupUuid
}

// GetBackupUuidOk returns a tuple with the BackupUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetBackupUuidOk() (*string, bool) {
	if o == nil || o.BackupUuid == nil {
		return nil, false
	}
	return o.BackupUuid, true
}

// HasBackupUuid returns a boolean if a field has been set.
func (o *BackupTableParams) HasBackupUuid() bool {
	if o != nil && o.BackupUuid != nil {
		return true
	}

	return false
}

// SetBackupUuid gets a reference to the given string and assigns it to the BackupUuid field.
func (o *BackupTableParams) SetBackupUuid(v string) {
	o.BackupUuid = &v
}

// GetBaseBackupUUID returns the BaseBackupUUID field value if set, zero value otherwise.
func (o *BackupTableParams) GetBaseBackupUUID() string {
	if o == nil || o.BaseBackupUUID == nil {
		var ret string
		return ret
	}
	return *o.BaseBackupUUID
}

// GetBaseBackupUUIDOk returns a tuple with the BaseBackupUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetBaseBackupUUIDOk() (*string, bool) {
	if o == nil || o.BaseBackupUUID == nil {
		return nil, false
	}
	return o.BaseBackupUUID, true
}

// HasBaseBackupUUID returns a boolean if a field has been set.
func (o *BackupTableParams) HasBaseBackupUUID() bool {
	if o != nil && o.BaseBackupUUID != nil {
		return true
	}

	return false
}

// SetBaseBackupUUID gets a reference to the given string and assigns it to the BaseBackupUUID field.
func (o *BackupTableParams) SetBaseBackupUUID(v string) {
	o.BaseBackupUUID = &v
}

// GetCmkArn returns the CmkArn field value if set, zero value otherwise.
func (o *BackupTableParams) GetCmkArn() string {
	if o == nil || o.CmkArn == nil {
		var ret string
		return ret
	}
	return *o.CmkArn
}

// GetCmkArnOk returns a tuple with the CmkArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetCmkArnOk() (*string, bool) {
	if o == nil || o.CmkArn == nil {
		return nil, false
	}
	return o.CmkArn, true
}

// HasCmkArn returns a boolean if a field has been set.
func (o *BackupTableParams) HasCmkArn() bool {
	if o != nil && o.CmkArn != nil {
		return true
	}

	return false
}

// SetCmkArn gets a reference to the given string and assigns it to the CmkArn field.
func (o *BackupTableParams) SetCmkArn(v string) {
	o.CmkArn = &v
}

// GetCommunicationPorts returns the CommunicationPorts field value if set, zero value otherwise.
func (o *BackupTableParams) GetCommunicationPorts() CommunicationPorts {
	if o == nil || o.CommunicationPorts == nil {
		var ret CommunicationPorts
		return ret
	}
	return *o.CommunicationPorts
}

// GetCommunicationPortsOk returns a tuple with the CommunicationPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetCommunicationPortsOk() (*CommunicationPorts, bool) {
	if o == nil || o.CommunicationPorts == nil {
		return nil, false
	}
	return o.CommunicationPorts, true
}

// HasCommunicationPorts returns a boolean if a field has been set.
func (o *BackupTableParams) HasCommunicationPorts() bool {
	if o != nil && o.CommunicationPorts != nil {
		return true
	}

	return false
}

// SetCommunicationPorts gets a reference to the given CommunicationPorts and assigns it to the CommunicationPorts field.
func (o *BackupTableParams) SetCommunicationPorts(v CommunicationPorts) {
	o.CommunicationPorts = &v
}

// GetCreatingUser returns the CreatingUser field value
func (o *BackupTableParams) GetCreatingUser() Users {
	if o == nil {
		var ret Users
		return ret
	}

	return o.CreatingUser
}

// GetCreatingUserOk returns a tuple with the CreatingUser field value
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetCreatingUserOk() (*Users, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreatingUser, true
}

// SetCreatingUser sets field value
func (o *BackupTableParams) SetCreatingUser(v Users) {
	o.CreatingUser = v
}

// GetCronExpression returns the CronExpression field value if set, zero value otherwise.
func (o *BackupTableParams) GetCronExpression() string {
	if o == nil || o.CronExpression == nil {
		var ret string
		return ret
	}
	return *o.CronExpression
}

// GetCronExpressionOk returns a tuple with the CronExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetCronExpressionOk() (*string, bool) {
	if o == nil || o.CronExpression == nil {
		return nil, false
	}
	return o.CronExpression, true
}

// HasCronExpression returns a boolean if a field has been set.
func (o *BackupTableParams) HasCronExpression() bool {
	if o != nil && o.CronExpression != nil {
		return true
	}

	return false
}

// SetCronExpression gets a reference to the given string and assigns it to the CronExpression field.
func (o *BackupTableParams) SetCronExpression(v string) {
	o.CronExpression = &v
}

// GetCustomerUuid returns the CustomerUuid field value if set, zero value otherwise.
func (o *BackupTableParams) GetCustomerUuid() string {
	if o == nil || o.CustomerUuid == nil {
		var ret string
		return ret
	}
	return *o.CustomerUuid
}

// GetCustomerUuidOk returns a tuple with the CustomerUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetCustomerUuidOk() (*string, bool) {
	if o == nil || o.CustomerUuid == nil {
		return nil, false
	}
	return o.CustomerUuid, true
}

// HasCustomerUuid returns a boolean if a field has been set.
func (o *BackupTableParams) HasCustomerUuid() bool {
	if o != nil && o.CustomerUuid != nil {
		return true
	}

	return false
}

// SetCustomerUuid gets a reference to the given string and assigns it to the CustomerUuid field.
func (o *BackupTableParams) SetCustomerUuid(v string) {
	o.CustomerUuid = &v
}

// GetDeviceInfo returns the DeviceInfo field value if set, zero value otherwise.
func (o *BackupTableParams) GetDeviceInfo() DeviceInfo {
	if o == nil || o.DeviceInfo == nil {
		var ret DeviceInfo
		return ret
	}
	return *o.DeviceInfo
}

// GetDeviceInfoOk returns a tuple with the DeviceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetDeviceInfoOk() (*DeviceInfo, bool) {
	if o == nil || o.DeviceInfo == nil {
		return nil, false
	}
	return o.DeviceInfo, true
}

// HasDeviceInfo returns a boolean if a field has been set.
func (o *BackupTableParams) HasDeviceInfo() bool {
	if o != nil && o.DeviceInfo != nil {
		return true
	}

	return false
}

// SetDeviceInfo gets a reference to the given DeviceInfo and assigns it to the DeviceInfo field.
func (o *BackupTableParams) SetDeviceInfo(v DeviceInfo) {
	o.DeviceInfo = &v
}

// GetDisableChecksum returns the DisableChecksum field value if set, zero value otherwise.
func (o *BackupTableParams) GetDisableChecksum() bool {
	if o == nil || o.DisableChecksum == nil {
		var ret bool
		return ret
	}
	return *o.DisableChecksum
}

// GetDisableChecksumOk returns a tuple with the DisableChecksum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetDisableChecksumOk() (*bool, bool) {
	if o == nil || o.DisableChecksum == nil {
		return nil, false
	}
	return o.DisableChecksum, true
}

// HasDisableChecksum returns a boolean if a field has been set.
func (o *BackupTableParams) HasDisableChecksum() bool {
	if o != nil && o.DisableChecksum != nil {
		return true
	}

	return false
}

// SetDisableChecksum gets a reference to the given bool and assigns it to the DisableChecksum field.
func (o *BackupTableParams) SetDisableChecksum(v bool) {
	o.DisableChecksum = &v
}

// GetDisableMultipart returns the DisableMultipart field value if set, zero value otherwise.
func (o *BackupTableParams) GetDisableMultipart() bool {
	if o == nil || o.DisableMultipart == nil {
		var ret bool
		return ret
	}
	return *o.DisableMultipart
}

// GetDisableMultipartOk returns a tuple with the DisableMultipart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetDisableMultipartOk() (*bool, bool) {
	if o == nil || o.DisableMultipart == nil {
		return nil, false
	}
	return o.DisableMultipart, true
}

// HasDisableMultipart returns a boolean if a field has been set.
func (o *BackupTableParams) HasDisableMultipart() bool {
	if o != nil && o.DisableMultipart != nil {
		return true
	}

	return false
}

// SetDisableMultipart gets a reference to the given bool and assigns it to the DisableMultipart field.
func (o *BackupTableParams) SetDisableMultipart(v bool) {
	o.DisableMultipart = &v
}

// GetDisableParallelism returns the DisableParallelism field value if set, zero value otherwise.
func (o *BackupTableParams) GetDisableParallelism() bool {
	if o == nil || o.DisableParallelism == nil {
		var ret bool
		return ret
	}
	return *o.DisableParallelism
}

// GetDisableParallelismOk returns a tuple with the DisableParallelism field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetDisableParallelismOk() (*bool, bool) {
	if o == nil || o.DisableParallelism == nil {
		return nil, false
	}
	return o.DisableParallelism, true
}

// HasDisableParallelism returns a boolean if a field has been set.
func (o *BackupTableParams) HasDisableParallelism() bool {
	if o != nil && o.DisableParallelism != nil {
		return true
	}

	return false
}

// SetDisableParallelism gets a reference to the given bool and assigns it to the DisableParallelism field.
func (o *BackupTableParams) SetDisableParallelism(v bool) {
	o.DisableParallelism = &v
}

// GetEnableVerboseLogs returns the EnableVerboseLogs field value if set, zero value otherwise.
func (o *BackupTableParams) GetEnableVerboseLogs() bool {
	if o == nil || o.EnableVerboseLogs == nil {
		var ret bool
		return ret
	}
	return *o.EnableVerboseLogs
}

// GetEnableVerboseLogsOk returns a tuple with the EnableVerboseLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetEnableVerboseLogsOk() (*bool, bool) {
	if o == nil || o.EnableVerboseLogs == nil {
		return nil, false
	}
	return o.EnableVerboseLogs, true
}

// HasEnableVerboseLogs returns a boolean if a field has been set.
func (o *BackupTableParams) HasEnableVerboseLogs() bool {
	if o != nil && o.EnableVerboseLogs != nil {
		return true
	}

	return false
}

// SetEnableVerboseLogs gets a reference to the given bool and assigns it to the EnableVerboseLogs field.
func (o *BackupTableParams) SetEnableVerboseLogs(v bool) {
	o.EnableVerboseLogs = &v
}

// GetEnableYbc returns the EnableYbc field value if set, zero value otherwise.
func (o *BackupTableParams) GetEnableYbc() bool {
	if o == nil || o.EnableYbc == nil {
		var ret bool
		return ret
	}
	return *o.EnableYbc
}

// GetEnableYbcOk returns a tuple with the EnableYbc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetEnableYbcOk() (*bool, bool) {
	if o == nil || o.EnableYbc == nil {
		return nil, false
	}
	return o.EnableYbc, true
}

// HasEnableYbc returns a boolean if a field has been set.
func (o *BackupTableParams) HasEnableYbc() bool {
	if o != nil && o.EnableYbc != nil {
		return true
	}

	return false
}

// SetEnableYbc gets a reference to the given bool and assigns it to the EnableYbc field.
func (o *BackupTableParams) SetEnableYbc(v bool) {
	o.EnableYbc = &v
}

// GetEncryptionAtRestConfig returns the EncryptionAtRestConfig field value if set, zero value otherwise.
func (o *BackupTableParams) GetEncryptionAtRestConfig() EncryptionAtRestConfig {
	if o == nil || o.EncryptionAtRestConfig == nil {
		var ret EncryptionAtRestConfig
		return ret
	}
	return *o.EncryptionAtRestConfig
}

// GetEncryptionAtRestConfigOk returns a tuple with the EncryptionAtRestConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetEncryptionAtRestConfigOk() (*EncryptionAtRestConfig, bool) {
	if o == nil || o.EncryptionAtRestConfig == nil {
		return nil, false
	}
	return o.EncryptionAtRestConfig, true
}

// HasEncryptionAtRestConfig returns a boolean if a field has been set.
func (o *BackupTableParams) HasEncryptionAtRestConfig() bool {
	if o != nil && o.EncryptionAtRestConfig != nil {
		return true
	}

	return false
}

// SetEncryptionAtRestConfig gets a reference to the given EncryptionAtRestConfig and assigns it to the EncryptionAtRestConfig field.
func (o *BackupTableParams) SetEncryptionAtRestConfig(v EncryptionAtRestConfig) {
	o.EncryptionAtRestConfig = &v
}

// GetErrorString returns the ErrorString field value if set, zero value otherwise.
func (o *BackupTableParams) GetErrorString() string {
	if o == nil || o.ErrorString == nil {
		var ret string
		return ret
	}
	return *o.ErrorString
}

// GetErrorStringOk returns a tuple with the ErrorString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetErrorStringOk() (*string, bool) {
	if o == nil || o.ErrorString == nil {
		return nil, false
	}
	return o.ErrorString, true
}

// HasErrorString returns a boolean if a field has been set.
func (o *BackupTableParams) HasErrorString() bool {
	if o != nil && o.ErrorString != nil {
		return true
	}

	return false
}

// SetErrorString gets a reference to the given string and assigns it to the ErrorString field.
func (o *BackupTableParams) SetErrorString(v string) {
	o.ErrorString = &v
}

// GetExpectedUniverseVersion returns the ExpectedUniverseVersion field value if set, zero value otherwise.
func (o *BackupTableParams) GetExpectedUniverseVersion() int32 {
	if o == nil || o.ExpectedUniverseVersion == nil {
		var ret int32
		return ret
	}
	return *o.ExpectedUniverseVersion
}

// GetExpectedUniverseVersionOk returns a tuple with the ExpectedUniverseVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetExpectedUniverseVersionOk() (*int32, bool) {
	if o == nil || o.ExpectedUniverseVersion == nil {
		return nil, false
	}
	return o.ExpectedUniverseVersion, true
}

// HasExpectedUniverseVersion returns a boolean if a field has been set.
func (o *BackupTableParams) HasExpectedUniverseVersion() bool {
	if o != nil && o.ExpectedUniverseVersion != nil {
		return true
	}

	return false
}

// SetExpectedUniverseVersion gets a reference to the given int32 and assigns it to the ExpectedUniverseVersion field.
func (o *BackupTableParams) SetExpectedUniverseVersion(v int32) {
	o.ExpectedUniverseVersion = &v
}

// GetExpiryTimeUnit returns the ExpiryTimeUnit field value if set, zero value otherwise.
func (o *BackupTableParams) GetExpiryTimeUnit() string {
	if o == nil || o.ExpiryTimeUnit == nil {
		var ret string
		return ret
	}
	return *o.ExpiryTimeUnit
}

// GetExpiryTimeUnitOk returns a tuple with the ExpiryTimeUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetExpiryTimeUnitOk() (*string, bool) {
	if o == nil || o.ExpiryTimeUnit == nil {
		return nil, false
	}
	return o.ExpiryTimeUnit, true
}

// HasExpiryTimeUnit returns a boolean if a field has been set.
func (o *BackupTableParams) HasExpiryTimeUnit() bool {
	if o != nil && o.ExpiryTimeUnit != nil {
		return true
	}

	return false
}

// SetExpiryTimeUnit gets a reference to the given string and assigns it to the ExpiryTimeUnit field.
func (o *BackupTableParams) SetExpiryTimeUnit(v string) {
	o.ExpiryTimeUnit = &v
}

// GetExtraDependencies returns the ExtraDependencies field value if set, zero value otherwise.
func (o *BackupTableParams) GetExtraDependencies() ExtraDependencies {
	if o == nil || o.ExtraDependencies == nil {
		var ret ExtraDependencies
		return ret
	}
	return *o.ExtraDependencies
}

// GetExtraDependenciesOk returns a tuple with the ExtraDependencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetExtraDependenciesOk() (*ExtraDependencies, bool) {
	if o == nil || o.ExtraDependencies == nil {
		return nil, false
	}
	return o.ExtraDependencies, true
}

// HasExtraDependencies returns a boolean if a field has been set.
func (o *BackupTableParams) HasExtraDependencies() bool {
	if o != nil && o.ExtraDependencies != nil {
		return true
	}

	return false
}

// SetExtraDependencies gets a reference to the given ExtraDependencies and assigns it to the ExtraDependencies field.
func (o *BackupTableParams) SetExtraDependencies(v ExtraDependencies) {
	o.ExtraDependencies = &v
}

// GetFullBackup returns the FullBackup field value
func (o *BackupTableParams) GetFullBackup() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.FullBackup
}

// GetFullBackupOk returns a tuple with the FullBackup field value
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetFullBackupOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FullBackup, true
}

// SetFullBackup sets field value
func (o *BackupTableParams) SetFullBackup(v bool) {
	o.FullBackup = v
}

// GetFullChainSizeInBytes returns the FullChainSizeInBytes field value if set, zero value otherwise.
func (o *BackupTableParams) GetFullChainSizeInBytes() int64 {
	if o == nil || o.FullChainSizeInBytes == nil {
		var ret int64
		return ret
	}
	return *o.FullChainSizeInBytes
}

// GetFullChainSizeInBytesOk returns a tuple with the FullChainSizeInBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetFullChainSizeInBytesOk() (*int64, bool) {
	if o == nil || o.FullChainSizeInBytes == nil {
		return nil, false
	}
	return o.FullChainSizeInBytes, true
}

// HasFullChainSizeInBytes returns a boolean if a field has been set.
func (o *BackupTableParams) HasFullChainSizeInBytes() bool {
	if o != nil && o.FullChainSizeInBytes != nil {
		return true
	}

	return false
}

// SetFullChainSizeInBytes gets a reference to the given int64 and assigns it to the FullChainSizeInBytes field.
func (o *BackupTableParams) SetFullChainSizeInBytes(v int64) {
	o.FullChainSizeInBytes = &v
}

// GetIgnoreErrors returns the IgnoreErrors field value if set, zero value otherwise.
func (o *BackupTableParams) GetIgnoreErrors() bool {
	if o == nil || o.IgnoreErrors == nil {
		var ret bool
		return ret
	}
	return *o.IgnoreErrors
}

// GetIgnoreErrorsOk returns a tuple with the IgnoreErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetIgnoreErrorsOk() (*bool, bool) {
	if o == nil || o.IgnoreErrors == nil {
		return nil, false
	}
	return o.IgnoreErrors, true
}

// HasIgnoreErrors returns a boolean if a field has been set.
func (o *BackupTableParams) HasIgnoreErrors() bool {
	if o != nil && o.IgnoreErrors != nil {
		return true
	}

	return false
}

// SetIgnoreErrors gets a reference to the given bool and assigns it to the IgnoreErrors field.
func (o *BackupTableParams) SetIgnoreErrors(v bool) {
	o.IgnoreErrors = &v
}

// GetInstallYbc returns the InstallYbc field value if set, zero value otherwise.
func (o *BackupTableParams) GetInstallYbc() bool {
	if o == nil || o.InstallYbc == nil {
		var ret bool
		return ret
	}
	return *o.InstallYbc
}

// GetInstallYbcOk returns a tuple with the InstallYbc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetInstallYbcOk() (*bool, bool) {
	if o == nil || o.InstallYbc == nil {
		return nil, false
	}
	return o.InstallYbc, true
}

// HasInstallYbc returns a boolean if a field has been set.
func (o *BackupTableParams) HasInstallYbc() bool {
	if o != nil && o.InstallYbc != nil {
		return true
	}

	return false
}

// SetInstallYbc gets a reference to the given bool and assigns it to the InstallYbc field.
func (o *BackupTableParams) SetInstallYbc(v bool) {
	o.InstallYbc = &v
}

// GetIsFullBackup returns the IsFullBackup field value if set, zero value otherwise.
func (o *BackupTableParams) GetIsFullBackup() bool {
	if o == nil || o.IsFullBackup == nil {
		var ret bool
		return ret
	}
	return *o.IsFullBackup
}

// GetIsFullBackupOk returns a tuple with the IsFullBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetIsFullBackupOk() (*bool, bool) {
	if o == nil || o.IsFullBackup == nil {
		return nil, false
	}
	return o.IsFullBackup, true
}

// HasIsFullBackup returns a boolean if a field has been set.
func (o *BackupTableParams) HasIsFullBackup() bool {
	if o != nil && o.IsFullBackup != nil {
		return true
	}

	return false
}

// SetIsFullBackup gets a reference to the given bool and assigns it to the IsFullBackup field.
func (o *BackupTableParams) SetIsFullBackup(v bool) {
	o.IsFullBackup = &v
}

// GetKeyspace returns the Keyspace field value if set, zero value otherwise.
func (o *BackupTableParams) GetKeyspace() string {
	if o == nil || o.Keyspace == nil {
		var ret string
		return ret
	}
	return *o.Keyspace
}

// GetKeyspaceOk returns a tuple with the Keyspace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetKeyspaceOk() (*string, bool) {
	if o == nil || o.Keyspace == nil {
		return nil, false
	}
	return o.Keyspace, true
}

// HasKeyspace returns a boolean if a field has been set.
func (o *BackupTableParams) HasKeyspace() bool {
	if o != nil && o.Keyspace != nil {
		return true
	}

	return false
}

// SetKeyspace gets a reference to the given string and assigns it to the Keyspace field.
func (o *BackupTableParams) SetKeyspace(v string) {
	o.Keyspace = &v
}

// GetKmsConfigUUID returns the KmsConfigUUID field value if set, zero value otherwise.
func (o *BackupTableParams) GetKmsConfigUUID() string {
	if o == nil || o.KmsConfigUUID == nil {
		var ret string
		return ret
	}
	return *o.KmsConfigUUID
}

// GetKmsConfigUUIDOk returns a tuple with the KmsConfigUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetKmsConfigUUIDOk() (*string, bool) {
	if o == nil || o.KmsConfigUUID == nil {
		return nil, false
	}
	return o.KmsConfigUUID, true
}

// HasKmsConfigUUID returns a boolean if a field has been set.
func (o *BackupTableParams) HasKmsConfigUUID() bool {
	if o != nil && o.KmsConfigUUID != nil {
		return true
	}

	return false
}

// SetKmsConfigUUID gets a reference to the given string and assigns it to the KmsConfigUUID field.
func (o *BackupTableParams) SetKmsConfigUUID(v string) {
	o.KmsConfigUUID = &v
}

// GetMinNumBackupsToRetain returns the MinNumBackupsToRetain field value if set, zero value otherwise.
func (o *BackupTableParams) GetMinNumBackupsToRetain() int32 {
	if o == nil || o.MinNumBackupsToRetain == nil {
		var ret int32
		return ret
	}
	return *o.MinNumBackupsToRetain
}

// GetMinNumBackupsToRetainOk returns a tuple with the MinNumBackupsToRetain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetMinNumBackupsToRetainOk() (*int32, bool) {
	if o == nil || o.MinNumBackupsToRetain == nil {
		return nil, false
	}
	return o.MinNumBackupsToRetain, true
}

// HasMinNumBackupsToRetain returns a boolean if a field has been set.
func (o *BackupTableParams) HasMinNumBackupsToRetain() bool {
	if o != nil && o.MinNumBackupsToRetain != nil {
		return true
	}

	return false
}

// SetMinNumBackupsToRetain gets a reference to the given int32 and assigns it to the MinNumBackupsToRetain field.
func (o *BackupTableParams) SetMinNumBackupsToRetain(v int32) {
	o.MinNumBackupsToRetain = &v
}

// GetNewOwner returns the NewOwner field value if set, zero value otherwise.
func (o *BackupTableParams) GetNewOwner() string {
	if o == nil || o.NewOwner == nil {
		var ret string
		return ret
	}
	return *o.NewOwner
}

// GetNewOwnerOk returns a tuple with the NewOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetNewOwnerOk() (*string, bool) {
	if o == nil || o.NewOwner == nil {
		return nil, false
	}
	return o.NewOwner, true
}

// HasNewOwner returns a boolean if a field has been set.
func (o *BackupTableParams) HasNewOwner() bool {
	if o != nil && o.NewOwner != nil {
		return true
	}

	return false
}

// SetNewOwner gets a reference to the given string and assigns it to the NewOwner field.
func (o *BackupTableParams) SetNewOwner(v string) {
	o.NewOwner = &v
}

// GetNodeDetailsSet returns the NodeDetailsSet field value if set, zero value otherwise.
func (o *BackupTableParams) GetNodeDetailsSet() []NodeDetails {
	if o == nil || o.NodeDetailsSet == nil {
		var ret []NodeDetails
		return ret
	}
	return *o.NodeDetailsSet
}

// GetNodeDetailsSetOk returns a tuple with the NodeDetailsSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetNodeDetailsSetOk() (*[]NodeDetails, bool) {
	if o == nil || o.NodeDetailsSet == nil {
		return nil, false
	}
	return o.NodeDetailsSet, true
}

// HasNodeDetailsSet returns a boolean if a field has been set.
func (o *BackupTableParams) HasNodeDetailsSet() bool {
	if o != nil && o.NodeDetailsSet != nil {
		return true
	}

	return false
}

// SetNodeDetailsSet gets a reference to the given []NodeDetails and assigns it to the NodeDetailsSet field.
func (o *BackupTableParams) SetNodeDetailsSet(v []NodeDetails) {
	o.NodeDetailsSet = &v
}

// GetNodeExporterUser returns the NodeExporterUser field value if set, zero value otherwise.
func (o *BackupTableParams) GetNodeExporterUser() string {
	if o == nil || o.NodeExporterUser == nil {
		var ret string
		return ret
	}
	return *o.NodeExporterUser
}

// GetNodeExporterUserOk returns a tuple with the NodeExporterUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetNodeExporterUserOk() (*string, bool) {
	if o == nil || o.NodeExporterUser == nil {
		return nil, false
	}
	return o.NodeExporterUser, true
}

// HasNodeExporterUser returns a boolean if a field has been set.
func (o *BackupTableParams) HasNodeExporterUser() bool {
	if o != nil && o.NodeExporterUser != nil {
		return true
	}

	return false
}

// SetNodeExporterUser gets a reference to the given string and assigns it to the NodeExporterUser field.
func (o *BackupTableParams) SetNodeExporterUser(v string) {
	o.NodeExporterUser = &v
}

// GetOldOwner returns the OldOwner field value if set, zero value otherwise.
func (o *BackupTableParams) GetOldOwner() string {
	if o == nil || o.OldOwner == nil {
		var ret string
		return ret
	}
	return *o.OldOwner
}

// GetOldOwnerOk returns a tuple with the OldOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetOldOwnerOk() (*string, bool) {
	if o == nil || o.OldOwner == nil {
		return nil, false
	}
	return o.OldOwner, true
}

// HasOldOwner returns a boolean if a field has been set.
func (o *BackupTableParams) HasOldOwner() bool {
	if o != nil && o.OldOwner != nil {
		return true
	}

	return false
}

// SetOldOwner gets a reference to the given string and assigns it to the OldOwner field.
func (o *BackupTableParams) SetOldOwner(v string) {
	o.OldOwner = &v
}

// GetParallelism returns the Parallelism field value if set, zero value otherwise.
func (o *BackupTableParams) GetParallelism() int32 {
	if o == nil || o.Parallelism == nil {
		var ret int32
		return ret
	}
	return *o.Parallelism
}

// GetParallelismOk returns a tuple with the Parallelism field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetParallelismOk() (*int32, bool) {
	if o == nil || o.Parallelism == nil {
		return nil, false
	}
	return o.Parallelism, true
}

// HasParallelism returns a boolean if a field has been set.
func (o *BackupTableParams) HasParallelism() bool {
	if o != nil && o.Parallelism != nil {
		return true
	}

	return false
}

// SetParallelism gets a reference to the given int32 and assigns it to the Parallelism field.
func (o *BackupTableParams) SetParallelism(v int32) {
	o.Parallelism = &v
}

// GetPlatformUrl returns the PlatformUrl field value
func (o *BackupTableParams) GetPlatformUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlatformUrl
}

// GetPlatformUrlOk returns a tuple with the PlatformUrl field value
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetPlatformUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PlatformUrl, true
}

// SetPlatformUrl sets field value
func (o *BackupTableParams) SetPlatformUrl(v string) {
	o.PlatformUrl = v
}

// GetPlatformVersion returns the PlatformVersion field value
func (o *BackupTableParams) GetPlatformVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlatformVersion
}

// GetPlatformVersionOk returns a tuple with the PlatformVersion field value
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetPlatformVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PlatformVersion, true
}

// SetPlatformVersion sets field value
func (o *BackupTableParams) SetPlatformVersion(v string) {
	o.PlatformVersion = v
}

// GetPointInTimeRestoreEnabled returns the PointInTimeRestoreEnabled field value if set, zero value otherwise.
func (o *BackupTableParams) GetPointInTimeRestoreEnabled() bool {
	if o == nil || o.PointInTimeRestoreEnabled == nil {
		var ret bool
		return ret
	}
	return *o.PointInTimeRestoreEnabled
}

// GetPointInTimeRestoreEnabledOk returns a tuple with the PointInTimeRestoreEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetPointInTimeRestoreEnabledOk() (*bool, bool) {
	if o == nil || o.PointInTimeRestoreEnabled == nil {
		return nil, false
	}
	return o.PointInTimeRestoreEnabled, true
}

// HasPointInTimeRestoreEnabled returns a boolean if a field has been set.
func (o *BackupTableParams) HasPointInTimeRestoreEnabled() bool {
	if o != nil && o.PointInTimeRestoreEnabled != nil {
		return true
	}

	return false
}

// SetPointInTimeRestoreEnabled gets a reference to the given bool and assigns it to the PointInTimeRestoreEnabled field.
func (o *BackupTableParams) SetPointInTimeRestoreEnabled(v bool) {
	o.PointInTimeRestoreEnabled = &v
}

// GetPreviousTaskUUID returns the PreviousTaskUUID field value if set, zero value otherwise.
func (o *BackupTableParams) GetPreviousTaskUUID() string {
	if o == nil || o.PreviousTaskUUID == nil {
		var ret string
		return ret
	}
	return *o.PreviousTaskUUID
}

// GetPreviousTaskUUIDOk returns a tuple with the PreviousTaskUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetPreviousTaskUUIDOk() (*string, bool) {
	if o == nil || o.PreviousTaskUUID == nil {
		return nil, false
	}
	return o.PreviousTaskUUID, true
}

// HasPreviousTaskUUID returns a boolean if a field has been set.
func (o *BackupTableParams) HasPreviousTaskUUID() bool {
	if o != nil && o.PreviousTaskUUID != nil {
		return true
	}

	return false
}

// SetPreviousTaskUUID gets a reference to the given string and assigns it to the PreviousTaskUUID field.
func (o *BackupTableParams) SetPreviousTaskUUID(v string) {
	o.PreviousTaskUUID = &v
}

// GetRegionLocations returns the RegionLocations field value if set, zero value otherwise.
func (o *BackupTableParams) GetRegionLocations() []RegionLocations {
	if o == nil || o.RegionLocations == nil {
		var ret []RegionLocations
		return ret
	}
	return *o.RegionLocations
}

// GetRegionLocationsOk returns a tuple with the RegionLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetRegionLocationsOk() (*[]RegionLocations, bool) {
	if o == nil || o.RegionLocations == nil {
		return nil, false
	}
	return o.RegionLocations, true
}

// HasRegionLocations returns a boolean if a field has been set.
func (o *BackupTableParams) HasRegionLocations() bool {
	if o != nil && o.RegionLocations != nil {
		return true
	}

	return false
}

// SetRegionLocations gets a reference to the given []RegionLocations and assigns it to the RegionLocations field.
func (o *BackupTableParams) SetRegionLocations(v []RegionLocations) {
	o.RegionLocations = &v
}

// GetRestoreTimeStamp returns the RestoreTimeStamp field value if set, zero value otherwise.
func (o *BackupTableParams) GetRestoreTimeStamp() string {
	if o == nil || o.RestoreTimeStamp == nil {
		var ret string
		return ret
	}
	return *o.RestoreTimeStamp
}

// GetRestoreTimeStampOk returns a tuple with the RestoreTimeStamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetRestoreTimeStampOk() (*string, bool) {
	if o == nil || o.RestoreTimeStamp == nil {
		return nil, false
	}
	return o.RestoreTimeStamp, true
}

// HasRestoreTimeStamp returns a boolean if a field has been set.
func (o *BackupTableParams) HasRestoreTimeStamp() bool {
	if o != nil && o.RestoreTimeStamp != nil {
		return true
	}

	return false
}

// SetRestoreTimeStamp gets a reference to the given string and assigns it to the RestoreTimeStamp field.
func (o *BackupTableParams) SetRestoreTimeStamp(v string) {
	o.RestoreTimeStamp = &v
}

// GetScheduleName returns the ScheduleName field value if set, zero value otherwise.
func (o *BackupTableParams) GetScheduleName() string {
	if o == nil || o.ScheduleName == nil {
		var ret string
		return ret
	}
	return *o.ScheduleName
}

// GetScheduleNameOk returns a tuple with the ScheduleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetScheduleNameOk() (*string, bool) {
	if o == nil || o.ScheduleName == nil {
		return nil, false
	}
	return o.ScheduleName, true
}

// HasScheduleName returns a boolean if a field has been set.
func (o *BackupTableParams) HasScheduleName() bool {
	if o != nil && o.ScheduleName != nil {
		return true
	}

	return false
}

// SetScheduleName gets a reference to the given string and assigns it to the ScheduleName field.
func (o *BackupTableParams) SetScheduleName(v string) {
	o.ScheduleName = &v
}

// GetScheduleUUID returns the ScheduleUUID field value if set, zero value otherwise.
func (o *BackupTableParams) GetScheduleUUID() string {
	if o == nil || o.ScheduleUUID == nil {
		var ret string
		return ret
	}
	return *o.ScheduleUUID
}

// GetScheduleUUIDOk returns a tuple with the ScheduleUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetScheduleUUIDOk() (*string, bool) {
	if o == nil || o.ScheduleUUID == nil {
		return nil, false
	}
	return o.ScheduleUUID, true
}

// HasScheduleUUID returns a boolean if a field has been set.
func (o *BackupTableParams) HasScheduleUUID() bool {
	if o != nil && o.ScheduleUUID != nil {
		return true
	}

	return false
}

// SetScheduleUUID gets a reference to the given string and assigns it to the ScheduleUUID field.
func (o *BackupTableParams) SetScheduleUUID(v string) {
	o.ScheduleUUID = &v
}

// GetSchedulingFrequency returns the SchedulingFrequency field value if set, zero value otherwise.
func (o *BackupTableParams) GetSchedulingFrequency() int64 {
	if o == nil || o.SchedulingFrequency == nil {
		var ret int64
		return ret
	}
	return *o.SchedulingFrequency
}

// GetSchedulingFrequencyOk returns a tuple with the SchedulingFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetSchedulingFrequencyOk() (*int64, bool) {
	if o == nil || o.SchedulingFrequency == nil {
		return nil, false
	}
	return o.SchedulingFrequency, true
}

// HasSchedulingFrequency returns a boolean if a field has been set.
func (o *BackupTableParams) HasSchedulingFrequency() bool {
	if o != nil && o.SchedulingFrequency != nil {
		return true
	}

	return false
}

// SetSchedulingFrequency gets a reference to the given int64 and assigns it to the SchedulingFrequency field.
func (o *BackupTableParams) SetSchedulingFrequency(v int64) {
	o.SchedulingFrequency = &v
}

// GetSleepAfterMasterRestartMillis returns the SleepAfterMasterRestartMillis field value
func (o *BackupTableParams) GetSleepAfterMasterRestartMillis() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SleepAfterMasterRestartMillis
}

// GetSleepAfterMasterRestartMillisOk returns a tuple with the SleepAfterMasterRestartMillis field value
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetSleepAfterMasterRestartMillisOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SleepAfterMasterRestartMillis, true
}

// SetSleepAfterMasterRestartMillis sets field value
func (o *BackupTableParams) SetSleepAfterMasterRestartMillis(v int32) {
	o.SleepAfterMasterRestartMillis = v
}

// GetSleepAfterTServerRestartMillis returns the SleepAfterTServerRestartMillis field value
func (o *BackupTableParams) GetSleepAfterTServerRestartMillis() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SleepAfterTServerRestartMillis
}

// GetSleepAfterTServerRestartMillisOk returns a tuple with the SleepAfterTServerRestartMillis field value
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetSleepAfterTServerRestartMillisOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SleepAfterTServerRestartMillis, true
}

// SetSleepAfterTServerRestartMillis sets field value
func (o *BackupTableParams) SetSleepAfterTServerRestartMillis(v int32) {
	o.SleepAfterTServerRestartMillis = v
}

// GetSourceXClusterConfigs returns the SourceXClusterConfigs field value if set, zero value otherwise.
func (o *BackupTableParams) GetSourceXClusterConfigs() []string {
	if o == nil || o.SourceXClusterConfigs == nil {
		var ret []string
		return ret
	}
	return *o.SourceXClusterConfigs
}

// GetSourceXClusterConfigsOk returns a tuple with the SourceXClusterConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetSourceXClusterConfigsOk() (*[]string, bool) {
	if o == nil || o.SourceXClusterConfigs == nil {
		return nil, false
	}
	return o.SourceXClusterConfigs, true
}

// HasSourceXClusterConfigs returns a boolean if a field has been set.
func (o *BackupTableParams) HasSourceXClusterConfigs() bool {
	if o != nil && o.SourceXClusterConfigs != nil {
		return true
	}

	return false
}

// SetSourceXClusterConfigs gets a reference to the given []string and assigns it to the SourceXClusterConfigs field.
func (o *BackupTableParams) SetSourceXClusterConfigs(v []string) {
	o.SourceXClusterConfigs = &v
}

// GetSse returns the Sse field value if set, zero value otherwise.
func (o *BackupTableParams) GetSse() bool {
	if o == nil || o.Sse == nil {
		var ret bool
		return ret
	}
	return *o.Sse
}

// GetSseOk returns a tuple with the Sse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetSseOk() (*bool, bool) {
	if o == nil || o.Sse == nil {
		return nil, false
	}
	return o.Sse, true
}

// HasSse returns a boolean if a field has been set.
func (o *BackupTableParams) HasSse() bool {
	if o != nil && o.Sse != nil {
		return true
	}

	return false
}

// SetSse gets a reference to the given bool and assigns it to the Sse field.
func (o *BackupTableParams) SetSse(v bool) {
	o.Sse = &v
}

// GetStorageConfigType returns the StorageConfigType field value if set, zero value otherwise.
func (o *BackupTableParams) GetStorageConfigType() string {
	if o == nil || o.StorageConfigType == nil {
		var ret string
		return ret
	}
	return *o.StorageConfigType
}

// GetStorageConfigTypeOk returns a tuple with the StorageConfigType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetStorageConfigTypeOk() (*string, bool) {
	if o == nil || o.StorageConfigType == nil {
		return nil, false
	}
	return o.StorageConfigType, true
}

// HasStorageConfigType returns a boolean if a field has been set.
func (o *BackupTableParams) HasStorageConfigType() bool {
	if o != nil && o.StorageConfigType != nil {
		return true
	}

	return false
}

// SetStorageConfigType gets a reference to the given string and assigns it to the StorageConfigType field.
func (o *BackupTableParams) SetStorageConfigType(v string) {
	o.StorageConfigType = &v
}

// GetStorageConfigUUID returns the StorageConfigUUID field value
func (o *BackupTableParams) GetStorageConfigUUID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StorageConfigUUID
}

// GetStorageConfigUUIDOk returns a tuple with the StorageConfigUUID field value
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetStorageConfigUUIDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StorageConfigUUID, true
}

// SetStorageConfigUUID sets field value
func (o *BackupTableParams) SetStorageConfigUUID(v string) {
	o.StorageConfigUUID = v
}

// GetStorageLocation returns the StorageLocation field value if set, zero value otherwise.
func (o *BackupTableParams) GetStorageLocation() string {
	if o == nil || o.StorageLocation == nil {
		var ret string
		return ret
	}
	return *o.StorageLocation
}

// GetStorageLocationOk returns a tuple with the StorageLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetStorageLocationOk() (*string, bool) {
	if o == nil || o.StorageLocation == nil {
		return nil, false
	}
	return o.StorageLocation, true
}

// HasStorageLocation returns a boolean if a field has been set.
func (o *BackupTableParams) HasStorageLocation() bool {
	if o != nil && o.StorageLocation != nil {
		return true
	}

	return false
}

// SetStorageLocation gets a reference to the given string and assigns it to the StorageLocation field.
func (o *BackupTableParams) SetStorageLocation(v string) {
	o.StorageLocation = &v
}

// GetTableByTableBackup returns the TableByTableBackup field value if set, zero value otherwise.
func (o *BackupTableParams) GetTableByTableBackup() bool {
	if o == nil || o.TableByTableBackup == nil {
		var ret bool
		return ret
	}
	return *o.TableByTableBackup
}

// GetTableByTableBackupOk returns a tuple with the TableByTableBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetTableByTableBackupOk() (*bool, bool) {
	if o == nil || o.TableByTableBackup == nil {
		return nil, false
	}
	return o.TableByTableBackup, true
}

// HasTableByTableBackup returns a boolean if a field has been set.
func (o *BackupTableParams) HasTableByTableBackup() bool {
	if o != nil && o.TableByTableBackup != nil {
		return true
	}

	return false
}

// SetTableByTableBackup gets a reference to the given bool and assigns it to the TableByTableBackup field.
func (o *BackupTableParams) SetTableByTableBackup(v bool) {
	o.TableByTableBackup = &v
}

// GetTableName returns the TableName field value if set, zero value otherwise.
func (o *BackupTableParams) GetTableName() string {
	if o == nil || o.TableName == nil {
		var ret string
		return ret
	}
	return *o.TableName
}

// GetTableNameOk returns a tuple with the TableName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetTableNameOk() (*string, bool) {
	if o == nil || o.TableName == nil {
		return nil, false
	}
	return o.TableName, true
}

// HasTableName returns a boolean if a field has been set.
func (o *BackupTableParams) HasTableName() bool {
	if o != nil && o.TableName != nil {
		return true
	}

	return false
}

// SetTableName gets a reference to the given string and assigns it to the TableName field.
func (o *BackupTableParams) SetTableName(v string) {
	o.TableName = &v
}

// GetTableNameList returns the TableNameList field value if set, zero value otherwise.
func (o *BackupTableParams) GetTableNameList() []string {
	if o == nil || o.TableNameList == nil {
		var ret []string
		return ret
	}
	return *o.TableNameList
}

// GetTableNameListOk returns a tuple with the TableNameList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetTableNameListOk() (*[]string, bool) {
	if o == nil || o.TableNameList == nil {
		return nil, false
	}
	return o.TableNameList, true
}

// HasTableNameList returns a boolean if a field has been set.
func (o *BackupTableParams) HasTableNameList() bool {
	if o != nil && o.TableNameList != nil {
		return true
	}

	return false
}

// SetTableNameList gets a reference to the given []string and assigns it to the TableNameList field.
func (o *BackupTableParams) SetTableNameList(v []string) {
	o.TableNameList = &v
}

// GetTableUUID returns the TableUUID field value if set, zero value otherwise.
func (o *BackupTableParams) GetTableUUID() string {
	if o == nil || o.TableUUID == nil {
		var ret string
		return ret
	}
	return *o.TableUUID
}

// GetTableUUIDOk returns a tuple with the TableUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetTableUUIDOk() (*string, bool) {
	if o == nil || o.TableUUID == nil {
		return nil, false
	}
	return o.TableUUID, true
}

// HasTableUUID returns a boolean if a field has been set.
func (o *BackupTableParams) HasTableUUID() bool {
	if o != nil && o.TableUUID != nil {
		return true
	}

	return false
}

// SetTableUUID gets a reference to the given string and assigns it to the TableUUID field.
func (o *BackupTableParams) SetTableUUID(v string) {
	o.TableUUID = &v
}

// GetTableUUIDList returns the TableUUIDList field value if set, zero value otherwise.
func (o *BackupTableParams) GetTableUUIDList() []string {
	if o == nil || o.TableUUIDList == nil {
		var ret []string
		return ret
	}
	return *o.TableUUIDList
}

// GetTableUUIDListOk returns a tuple with the TableUUIDList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetTableUUIDListOk() (*[]string, bool) {
	if o == nil || o.TableUUIDList == nil {
		return nil, false
	}
	return o.TableUUIDList, true
}

// HasTableUUIDList returns a boolean if a field has been set.
func (o *BackupTableParams) HasTableUUIDList() bool {
	if o != nil && o.TableUUIDList != nil {
		return true
	}

	return false
}

// SetTableUUIDList gets a reference to the given []string and assigns it to the TableUUIDList field.
func (o *BackupTableParams) SetTableUUIDList(v []string) {
	o.TableUUIDList = &v
}

// GetTablespacesList returns the TablespacesList field value if set, zero value otherwise.
func (o *BackupTableParams) GetTablespacesList() []Tablespace {
	if o == nil || o.TablespacesList == nil {
		var ret []Tablespace
		return ret
	}
	return *o.TablespacesList
}

// GetTablespacesListOk returns a tuple with the TablespacesList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetTablespacesListOk() (*[]Tablespace, bool) {
	if o == nil || o.TablespacesList == nil {
		return nil, false
	}
	return o.TablespacesList, true
}

// HasTablespacesList returns a boolean if a field has been set.
func (o *BackupTableParams) HasTablespacesList() bool {
	if o != nil && o.TablespacesList != nil {
		return true
	}

	return false
}

// SetTablespacesList gets a reference to the given []Tablespace and assigns it to the TablespacesList field.
func (o *BackupTableParams) SetTablespacesList(v []Tablespace) {
	o.TablespacesList = &v
}

// GetTargetXClusterConfigs returns the TargetXClusterConfigs field value if set, zero value otherwise.
func (o *BackupTableParams) GetTargetXClusterConfigs() []string {
	if o == nil || o.TargetXClusterConfigs == nil {
		var ret []string
		return ret
	}
	return *o.TargetXClusterConfigs
}

// GetTargetXClusterConfigsOk returns a tuple with the TargetXClusterConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetTargetXClusterConfigsOk() (*[]string, bool) {
	if o == nil || o.TargetXClusterConfigs == nil {
		return nil, false
	}
	return o.TargetXClusterConfigs, true
}

// HasTargetXClusterConfigs returns a boolean if a field has been set.
func (o *BackupTableParams) HasTargetXClusterConfigs() bool {
	if o != nil && o.TargetXClusterConfigs != nil {
		return true
	}

	return false
}

// SetTargetXClusterConfigs gets a reference to the given []string and assigns it to the TargetXClusterConfigs field.
func (o *BackupTableParams) SetTargetXClusterConfigs(v []string) {
	o.TargetXClusterConfigs = &v
}

// GetTimeBeforeDelete returns the TimeBeforeDelete field value if set, zero value otherwise.
func (o *BackupTableParams) GetTimeBeforeDelete() int64 {
	if o == nil || o.TimeBeforeDelete == nil {
		var ret int64
		return ret
	}
	return *o.TimeBeforeDelete
}

// GetTimeBeforeDeleteOk returns a tuple with the TimeBeforeDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetTimeBeforeDeleteOk() (*int64, bool) {
	if o == nil || o.TimeBeforeDelete == nil {
		return nil, false
	}
	return o.TimeBeforeDelete, true
}

// HasTimeBeforeDelete returns a boolean if a field has been set.
func (o *BackupTableParams) HasTimeBeforeDelete() bool {
	if o != nil && o.TimeBeforeDelete != nil {
		return true
	}

	return false
}

// SetTimeBeforeDelete gets a reference to the given int64 and assigns it to the TimeBeforeDelete field.
func (o *BackupTableParams) SetTimeBeforeDelete(v int64) {
	o.TimeBeforeDelete = &v
}

// GetTimeTakenPartial returns the TimeTakenPartial field value
func (o *BackupTableParams) GetTimeTakenPartial() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TimeTakenPartial
}

// GetTimeTakenPartialOk returns a tuple with the TimeTakenPartial field value
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetTimeTakenPartialOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TimeTakenPartial, true
}

// SetTimeTakenPartial sets field value
func (o *BackupTableParams) SetTimeTakenPartial(v int64) {
	o.TimeTakenPartial = v
}

// GetTransactionalBackup returns the TransactionalBackup field value if set, zero value otherwise.
func (o *BackupTableParams) GetTransactionalBackup() bool {
	if o == nil || o.TransactionalBackup == nil {
		var ret bool
		return ret
	}
	return *o.TransactionalBackup
}

// GetTransactionalBackupOk returns a tuple with the TransactionalBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetTransactionalBackupOk() (*bool, bool) {
	if o == nil || o.TransactionalBackup == nil {
		return nil, false
	}
	return o.TransactionalBackup, true
}

// HasTransactionalBackup returns a boolean if a field has been set.
func (o *BackupTableParams) HasTransactionalBackup() bool {
	if o != nil && o.TransactionalBackup != nil {
		return true
	}

	return false
}

// SetTransactionalBackup gets a reference to the given bool and assigns it to the TransactionalBackup field.
func (o *BackupTableParams) SetTransactionalBackup(v bool) {
	o.TransactionalBackup = &v
}

// GetUniverseUUID returns the UniverseUUID field value if set, zero value otherwise.
func (o *BackupTableParams) GetUniverseUUID() string {
	if o == nil || o.UniverseUUID == nil {
		var ret string
		return ret
	}
	return *o.UniverseUUID
}

// GetUniverseUUIDOk returns a tuple with the UniverseUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetUniverseUUIDOk() (*string, bool) {
	if o == nil || o.UniverseUUID == nil {
		return nil, false
	}
	return o.UniverseUUID, true
}

// HasUniverseUUID returns a boolean if a field has been set.
func (o *BackupTableParams) HasUniverseUUID() bool {
	if o != nil && o.UniverseUUID != nil {
		return true
	}

	return false
}

// SetUniverseUUID gets a reference to the given string and assigns it to the UniverseUUID field.
func (o *BackupTableParams) SetUniverseUUID(v string) {
	o.UniverseUUID = &v
}

// GetUseTablespaces returns the UseTablespaces field value if set, zero value otherwise.
func (o *BackupTableParams) GetUseTablespaces() bool {
	if o == nil || o.UseTablespaces == nil {
		var ret bool
		return ret
	}
	return *o.UseTablespaces
}

// GetUseTablespacesOk returns a tuple with the UseTablespaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetUseTablespacesOk() (*bool, bool) {
	if o == nil || o.UseTablespaces == nil {
		return nil, false
	}
	return o.UseTablespaces, true
}

// HasUseTablespaces returns a boolean if a field has been set.
func (o *BackupTableParams) HasUseTablespaces() bool {
	if o != nil && o.UseTablespaces != nil {
		return true
	}

	return false
}

// SetUseTablespaces gets a reference to the given bool and assigns it to the UseTablespaces field.
func (o *BackupTableParams) SetUseTablespaces(v bool) {
	o.UseTablespaces = &v
}

// GetYbPrevSoftwareVersion returns the YbPrevSoftwareVersion field value if set, zero value otherwise.
func (o *BackupTableParams) GetYbPrevSoftwareVersion() string {
	if o == nil || o.YbPrevSoftwareVersion == nil {
		var ret string
		return ret
	}
	return *o.YbPrevSoftwareVersion
}

// GetYbPrevSoftwareVersionOk returns a tuple with the YbPrevSoftwareVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetYbPrevSoftwareVersionOk() (*string, bool) {
	if o == nil || o.YbPrevSoftwareVersion == nil {
		return nil, false
	}
	return o.YbPrevSoftwareVersion, true
}

// HasYbPrevSoftwareVersion returns a boolean if a field has been set.
func (o *BackupTableParams) HasYbPrevSoftwareVersion() bool {
	if o != nil && o.YbPrevSoftwareVersion != nil {
		return true
	}

	return false
}

// SetYbPrevSoftwareVersion gets a reference to the given string and assigns it to the YbPrevSoftwareVersion field.
func (o *BackupTableParams) SetYbPrevSoftwareVersion(v string) {
	o.YbPrevSoftwareVersion = &v
}

// GetYbcInstalled returns the YbcInstalled field value if set, zero value otherwise.
func (o *BackupTableParams) GetYbcInstalled() bool {
	if o == nil || o.YbcInstalled == nil {
		var ret bool
		return ret
	}
	return *o.YbcInstalled
}

// GetYbcInstalledOk returns a tuple with the YbcInstalled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetYbcInstalledOk() (*bool, bool) {
	if o == nil || o.YbcInstalled == nil {
		return nil, false
	}
	return o.YbcInstalled, true
}

// HasYbcInstalled returns a boolean if a field has been set.
func (o *BackupTableParams) HasYbcInstalled() bool {
	if o != nil && o.YbcInstalled != nil {
		return true
	}

	return false
}

// SetYbcInstalled gets a reference to the given bool and assigns it to the YbcInstalled field.
func (o *BackupTableParams) SetYbcInstalled(v bool) {
	o.YbcInstalled = &v
}

// GetYbcSoftwareVersion returns the YbcSoftwareVersion field value if set, zero value otherwise.
func (o *BackupTableParams) GetYbcSoftwareVersion() string {
	if o == nil || o.YbcSoftwareVersion == nil {
		var ret string
		return ret
	}
	return *o.YbcSoftwareVersion
}

// GetYbcSoftwareVersionOk returns a tuple with the YbcSoftwareVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupTableParams) GetYbcSoftwareVersionOk() (*string, bool) {
	if o == nil || o.YbcSoftwareVersion == nil {
		return nil, false
	}
	return o.YbcSoftwareVersion, true
}

// HasYbcSoftwareVersion returns a boolean if a field has been set.
func (o *BackupTableParams) HasYbcSoftwareVersion() bool {
	if o != nil && o.YbcSoftwareVersion != nil {
		return true
	}

	return false
}

// SetYbcSoftwareVersion gets a reference to the given string and assigns it to the YbcSoftwareVersion field.
func (o *BackupTableParams) SetYbcSoftwareVersion(v string) {
	o.YbcSoftwareVersion = &v
}

func (o BackupTableParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ActionType != nil {
		toSerialize["actionType"] = o.ActionType
	}
	if o.AllTables != nil {
		toSerialize["allTables"] = o.AllTables
	}
	if o.AlterLoadBalancer != nil {
		toSerialize["alterLoadBalancer"] = o.AlterLoadBalancer
	}
	if o.BackupList != nil {
		toSerialize["backupList"] = o.BackupList
	}
	if o.BackupPointInTimeRestoreWindow != nil {
		toSerialize["backupPointInTimeRestoreWindow"] = o.BackupPointInTimeRestoreWindow
	}
	if o.BackupSizeInBytes != nil {
		toSerialize["backupSizeInBytes"] = o.BackupSizeInBytes
	}
	if o.BackupType != nil {
		toSerialize["backupType"] = o.BackupType
	}
	if o.BackupUuid != nil {
		toSerialize["backupUuid"] = o.BackupUuid
	}
	if o.BaseBackupUUID != nil {
		toSerialize["baseBackupUUID"] = o.BaseBackupUUID
	}
	if o.CmkArn != nil {
		toSerialize["cmkArn"] = o.CmkArn
	}
	if o.CommunicationPorts != nil {
		toSerialize["communicationPorts"] = o.CommunicationPorts
	}
	if true {
		toSerialize["creatingUser"] = o.CreatingUser
	}
	if o.CronExpression != nil {
		toSerialize["cronExpression"] = o.CronExpression
	}
	if o.CustomerUuid != nil {
		toSerialize["customerUuid"] = o.CustomerUuid
	}
	if o.DeviceInfo != nil {
		toSerialize["deviceInfo"] = o.DeviceInfo
	}
	if o.DisableChecksum != nil {
		toSerialize["disableChecksum"] = o.DisableChecksum
	}
	if o.DisableMultipart != nil {
		toSerialize["disableMultipart"] = o.DisableMultipart
	}
	if o.DisableParallelism != nil {
		toSerialize["disableParallelism"] = o.DisableParallelism
	}
	if o.EnableVerboseLogs != nil {
		toSerialize["enableVerboseLogs"] = o.EnableVerboseLogs
	}
	if o.EnableYbc != nil {
		toSerialize["enableYbc"] = o.EnableYbc
	}
	if o.EncryptionAtRestConfig != nil {
		toSerialize["encryptionAtRestConfig"] = o.EncryptionAtRestConfig
	}
	if o.ErrorString != nil {
		toSerialize["errorString"] = o.ErrorString
	}
	if o.ExpectedUniverseVersion != nil {
		toSerialize["expectedUniverseVersion"] = o.ExpectedUniverseVersion
	}
	if o.ExpiryTimeUnit != nil {
		toSerialize["expiryTimeUnit"] = o.ExpiryTimeUnit
	}
	if o.ExtraDependencies != nil {
		toSerialize["extraDependencies"] = o.ExtraDependencies
	}
	if true {
		toSerialize["fullBackup"] = o.FullBackup
	}
	if o.FullChainSizeInBytes != nil {
		toSerialize["fullChainSizeInBytes"] = o.FullChainSizeInBytes
	}
	if o.IgnoreErrors != nil {
		toSerialize["ignoreErrors"] = o.IgnoreErrors
	}
	if o.InstallYbc != nil {
		toSerialize["installYbc"] = o.InstallYbc
	}
	if o.IsFullBackup != nil {
		toSerialize["isFullBackup"] = o.IsFullBackup
	}
	if o.Keyspace != nil {
		toSerialize["keyspace"] = o.Keyspace
	}
	if o.KmsConfigUUID != nil {
		toSerialize["kmsConfigUUID"] = o.KmsConfigUUID
	}
	if o.MinNumBackupsToRetain != nil {
		toSerialize["minNumBackupsToRetain"] = o.MinNumBackupsToRetain
	}
	if o.NewOwner != nil {
		toSerialize["newOwner"] = o.NewOwner
	}
	if o.NodeDetailsSet != nil {
		toSerialize["nodeDetailsSet"] = o.NodeDetailsSet
	}
	if o.NodeExporterUser != nil {
		toSerialize["nodeExporterUser"] = o.NodeExporterUser
	}
	if o.OldOwner != nil {
		toSerialize["oldOwner"] = o.OldOwner
	}
	if o.Parallelism != nil {
		toSerialize["parallelism"] = o.Parallelism
	}
	if true {
		toSerialize["platformUrl"] = o.PlatformUrl
	}
	if true {
		toSerialize["platformVersion"] = o.PlatformVersion
	}
	if o.PointInTimeRestoreEnabled != nil {
		toSerialize["pointInTimeRestoreEnabled"] = o.PointInTimeRestoreEnabled
	}
	if o.PreviousTaskUUID != nil {
		toSerialize["previousTaskUUID"] = o.PreviousTaskUUID
	}
	if o.RegionLocations != nil {
		toSerialize["regionLocations"] = o.RegionLocations
	}
	if o.RestoreTimeStamp != nil {
		toSerialize["restoreTimeStamp"] = o.RestoreTimeStamp
	}
	if o.ScheduleName != nil {
		toSerialize["scheduleName"] = o.ScheduleName
	}
	if o.ScheduleUUID != nil {
		toSerialize["scheduleUUID"] = o.ScheduleUUID
	}
	if o.SchedulingFrequency != nil {
		toSerialize["schedulingFrequency"] = o.SchedulingFrequency
	}
	if true {
		toSerialize["sleepAfterMasterRestartMillis"] = o.SleepAfterMasterRestartMillis
	}
	if true {
		toSerialize["sleepAfterTServerRestartMillis"] = o.SleepAfterTServerRestartMillis
	}
	if o.SourceXClusterConfigs != nil {
		toSerialize["sourceXClusterConfigs"] = o.SourceXClusterConfigs
	}
	if o.Sse != nil {
		toSerialize["sse"] = o.Sse
	}
	if o.StorageConfigType != nil {
		toSerialize["storageConfigType"] = o.StorageConfigType
	}
	if true {
		toSerialize["storageConfigUUID"] = o.StorageConfigUUID
	}
	if o.StorageLocation != nil {
		toSerialize["storageLocation"] = o.StorageLocation
	}
	if o.TableByTableBackup != nil {
		toSerialize["tableByTableBackup"] = o.TableByTableBackup
	}
	if o.TableName != nil {
		toSerialize["tableName"] = o.TableName
	}
	if o.TableNameList != nil {
		toSerialize["tableNameList"] = o.TableNameList
	}
	if o.TableUUID != nil {
		toSerialize["tableUUID"] = o.TableUUID
	}
	if o.TableUUIDList != nil {
		toSerialize["tableUUIDList"] = o.TableUUIDList
	}
	if o.TablespacesList != nil {
		toSerialize["tablespacesList"] = o.TablespacesList
	}
	if o.TargetXClusterConfigs != nil {
		toSerialize["targetXClusterConfigs"] = o.TargetXClusterConfigs
	}
	if o.TimeBeforeDelete != nil {
		toSerialize["timeBeforeDelete"] = o.TimeBeforeDelete
	}
	if true {
		toSerialize["timeTakenPartial"] = o.TimeTakenPartial
	}
	if o.TransactionalBackup != nil {
		toSerialize["transactionalBackup"] = o.TransactionalBackup
	}
	if o.UniverseUUID != nil {
		toSerialize["universeUUID"] = o.UniverseUUID
	}
	if o.UseTablespaces != nil {
		toSerialize["useTablespaces"] = o.UseTablespaces
	}
	if o.YbPrevSoftwareVersion != nil {
		toSerialize["ybPrevSoftwareVersion"] = o.YbPrevSoftwareVersion
	}
	if o.YbcInstalled != nil {
		toSerialize["ybcInstalled"] = o.YbcInstalled
	}
	if o.YbcSoftwareVersion != nil {
		toSerialize["ybcSoftwareVersion"] = o.YbcSoftwareVersion
	}
	return json.Marshal(toSerialize)
}

type NullableBackupTableParams struct {
	value *BackupTableParams
	isSet bool
}

func (v NullableBackupTableParams) Get() *BackupTableParams {
	return v.value
}

func (v *NullableBackupTableParams) Set(val *BackupTableParams) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupTableParams) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupTableParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupTableParams(val *BackupTableParams) *NullableBackupTableParams {
	return &NullableBackupTableParams{value: val, isSet: true}
}

func (v NullableBackupTableParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupTableParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


