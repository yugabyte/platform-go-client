/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// PerLocationBackupInfo struct for PerLocationBackupInfo
type PerLocationBackupInfo struct {
	// Backup location
	BackupLocation *string `json:"backupLocation,omitempty"`
	// Whether selective table restore is supported for this backup
	IsSelectiveRestoreSupported *bool `json:"isSelectiveRestoreSupported,omitempty"`
	// Whether backup type is YSQL
	IsYSQLBackup *bool `json:"isYSQLBackup,omitempty"`
	PerBackupLocationKeyspaceTables *PerBackupLocationKeyspaceTables `json:"perBackupLocationKeyspaceTables,omitempty"`
	PointInTimeRestoreWindow *BackupPointInTimeRestoreWindow `json:"pointInTimeRestoreWindow,omitempty"`
	TablespaceResponse *TablespaceResponse `json:"tablespaceResponse,omitempty"`
}

// NewPerLocationBackupInfo instantiates a new PerLocationBackupInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPerLocationBackupInfo() *PerLocationBackupInfo {
	this := PerLocationBackupInfo{}
	return &this
}

// NewPerLocationBackupInfoWithDefaults instantiates a new PerLocationBackupInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPerLocationBackupInfoWithDefaults() *PerLocationBackupInfo {
	this := PerLocationBackupInfo{}
	return &this
}

// GetBackupLocation returns the BackupLocation field value if set, zero value otherwise.
func (o *PerLocationBackupInfo) GetBackupLocation() string {
	if o == nil || o.BackupLocation == nil {
		var ret string
		return ret
	}
	return *o.BackupLocation
}

// GetBackupLocationOk returns a tuple with the BackupLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerLocationBackupInfo) GetBackupLocationOk() (*string, bool) {
	if o == nil || o.BackupLocation == nil {
		return nil, false
	}
	return o.BackupLocation, true
}

// HasBackupLocation returns a boolean if a field has been set.
func (o *PerLocationBackupInfo) HasBackupLocation() bool {
	if o != nil && o.BackupLocation != nil {
		return true
	}

	return false
}

// SetBackupLocation gets a reference to the given string and assigns it to the BackupLocation field.
func (o *PerLocationBackupInfo) SetBackupLocation(v string) {
	o.BackupLocation = &v
}

// GetIsSelectiveRestoreSupported returns the IsSelectiveRestoreSupported field value if set, zero value otherwise.
func (o *PerLocationBackupInfo) GetIsSelectiveRestoreSupported() bool {
	if o == nil || o.IsSelectiveRestoreSupported == nil {
		var ret bool
		return ret
	}
	return *o.IsSelectiveRestoreSupported
}

// GetIsSelectiveRestoreSupportedOk returns a tuple with the IsSelectiveRestoreSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerLocationBackupInfo) GetIsSelectiveRestoreSupportedOk() (*bool, bool) {
	if o == nil || o.IsSelectiveRestoreSupported == nil {
		return nil, false
	}
	return o.IsSelectiveRestoreSupported, true
}

// HasIsSelectiveRestoreSupported returns a boolean if a field has been set.
func (o *PerLocationBackupInfo) HasIsSelectiveRestoreSupported() bool {
	if o != nil && o.IsSelectiveRestoreSupported != nil {
		return true
	}

	return false
}

// SetIsSelectiveRestoreSupported gets a reference to the given bool and assigns it to the IsSelectiveRestoreSupported field.
func (o *PerLocationBackupInfo) SetIsSelectiveRestoreSupported(v bool) {
	o.IsSelectiveRestoreSupported = &v
}

// GetIsYSQLBackup returns the IsYSQLBackup field value if set, zero value otherwise.
func (o *PerLocationBackupInfo) GetIsYSQLBackup() bool {
	if o == nil || o.IsYSQLBackup == nil {
		var ret bool
		return ret
	}
	return *o.IsYSQLBackup
}

// GetIsYSQLBackupOk returns a tuple with the IsYSQLBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerLocationBackupInfo) GetIsYSQLBackupOk() (*bool, bool) {
	if o == nil || o.IsYSQLBackup == nil {
		return nil, false
	}
	return o.IsYSQLBackup, true
}

// HasIsYSQLBackup returns a boolean if a field has been set.
func (o *PerLocationBackupInfo) HasIsYSQLBackup() bool {
	if o != nil && o.IsYSQLBackup != nil {
		return true
	}

	return false
}

// SetIsYSQLBackup gets a reference to the given bool and assigns it to the IsYSQLBackup field.
func (o *PerLocationBackupInfo) SetIsYSQLBackup(v bool) {
	o.IsYSQLBackup = &v
}

// GetPerBackupLocationKeyspaceTables returns the PerBackupLocationKeyspaceTables field value if set, zero value otherwise.
func (o *PerLocationBackupInfo) GetPerBackupLocationKeyspaceTables() PerBackupLocationKeyspaceTables {
	if o == nil || o.PerBackupLocationKeyspaceTables == nil {
		var ret PerBackupLocationKeyspaceTables
		return ret
	}
	return *o.PerBackupLocationKeyspaceTables
}

// GetPerBackupLocationKeyspaceTablesOk returns a tuple with the PerBackupLocationKeyspaceTables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerLocationBackupInfo) GetPerBackupLocationKeyspaceTablesOk() (*PerBackupLocationKeyspaceTables, bool) {
	if o == nil || o.PerBackupLocationKeyspaceTables == nil {
		return nil, false
	}
	return o.PerBackupLocationKeyspaceTables, true
}

// HasPerBackupLocationKeyspaceTables returns a boolean if a field has been set.
func (o *PerLocationBackupInfo) HasPerBackupLocationKeyspaceTables() bool {
	if o != nil && o.PerBackupLocationKeyspaceTables != nil {
		return true
	}

	return false
}

// SetPerBackupLocationKeyspaceTables gets a reference to the given PerBackupLocationKeyspaceTables and assigns it to the PerBackupLocationKeyspaceTables field.
func (o *PerLocationBackupInfo) SetPerBackupLocationKeyspaceTables(v PerBackupLocationKeyspaceTables) {
	o.PerBackupLocationKeyspaceTables = &v
}

// GetPointInTimeRestoreWindow returns the PointInTimeRestoreWindow field value if set, zero value otherwise.
func (o *PerLocationBackupInfo) GetPointInTimeRestoreWindow() BackupPointInTimeRestoreWindow {
	if o == nil || o.PointInTimeRestoreWindow == nil {
		var ret BackupPointInTimeRestoreWindow
		return ret
	}
	return *o.PointInTimeRestoreWindow
}

// GetPointInTimeRestoreWindowOk returns a tuple with the PointInTimeRestoreWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerLocationBackupInfo) GetPointInTimeRestoreWindowOk() (*BackupPointInTimeRestoreWindow, bool) {
	if o == nil || o.PointInTimeRestoreWindow == nil {
		return nil, false
	}
	return o.PointInTimeRestoreWindow, true
}

// HasPointInTimeRestoreWindow returns a boolean if a field has been set.
func (o *PerLocationBackupInfo) HasPointInTimeRestoreWindow() bool {
	if o != nil && o.PointInTimeRestoreWindow != nil {
		return true
	}

	return false
}

// SetPointInTimeRestoreWindow gets a reference to the given BackupPointInTimeRestoreWindow and assigns it to the PointInTimeRestoreWindow field.
func (o *PerLocationBackupInfo) SetPointInTimeRestoreWindow(v BackupPointInTimeRestoreWindow) {
	o.PointInTimeRestoreWindow = &v
}

// GetTablespaceResponse returns the TablespaceResponse field value if set, zero value otherwise.
func (o *PerLocationBackupInfo) GetTablespaceResponse() TablespaceResponse {
	if o == nil || o.TablespaceResponse == nil {
		var ret TablespaceResponse
		return ret
	}
	return *o.TablespaceResponse
}

// GetTablespaceResponseOk returns a tuple with the TablespaceResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerLocationBackupInfo) GetTablespaceResponseOk() (*TablespaceResponse, bool) {
	if o == nil || o.TablespaceResponse == nil {
		return nil, false
	}
	return o.TablespaceResponse, true
}

// HasTablespaceResponse returns a boolean if a field has been set.
func (o *PerLocationBackupInfo) HasTablespaceResponse() bool {
	if o != nil && o.TablespaceResponse != nil {
		return true
	}

	return false
}

// SetTablespaceResponse gets a reference to the given TablespaceResponse and assigns it to the TablespaceResponse field.
func (o *PerLocationBackupInfo) SetTablespaceResponse(v TablespaceResponse) {
	o.TablespaceResponse = &v
}

func (o PerLocationBackupInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BackupLocation != nil {
		toSerialize["backupLocation"] = o.BackupLocation
	}
	if o.IsSelectiveRestoreSupported != nil {
		toSerialize["isSelectiveRestoreSupported"] = o.IsSelectiveRestoreSupported
	}
	if o.IsYSQLBackup != nil {
		toSerialize["isYSQLBackup"] = o.IsYSQLBackup
	}
	if o.PerBackupLocationKeyspaceTables != nil {
		toSerialize["perBackupLocationKeyspaceTables"] = o.PerBackupLocationKeyspaceTables
	}
	if o.PointInTimeRestoreWindow != nil {
		toSerialize["pointInTimeRestoreWindow"] = o.PointInTimeRestoreWindow
	}
	if o.TablespaceResponse != nil {
		toSerialize["tablespaceResponse"] = o.TablespaceResponse
	}
	return json.Marshal(toSerialize)
}

type NullablePerLocationBackupInfo struct {
	value *PerLocationBackupInfo
	isSet bool
}

func (v NullablePerLocationBackupInfo) Get() *PerLocationBackupInfo {
	return v.value
}

func (v *NullablePerLocationBackupInfo) Set(val *PerLocationBackupInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePerLocationBackupInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePerLocationBackupInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePerLocationBackupInfo(val *PerLocationBackupInfo) *NullablePerLocationBackupInfo {
	return &NullablePerLocationBackupInfo{value: val, isSet: true}
}

func (v NullablePerLocationBackupInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePerLocationBackupInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


