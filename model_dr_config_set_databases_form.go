/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// DrConfigSetDatabasesForm dr config set databases form
type DrConfigSetDatabasesForm struct {
	// WARNING: This is a preview API that could change. Source universe database IDs
	Databases *[]string `json:"databases,omitempty"`
}

// NewDrConfigSetDatabasesForm instantiates a new DrConfigSetDatabasesForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDrConfigSetDatabasesForm() *DrConfigSetDatabasesForm {
	this := DrConfigSetDatabasesForm{}
	return &this
}

// NewDrConfigSetDatabasesFormWithDefaults instantiates a new DrConfigSetDatabasesForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDrConfigSetDatabasesFormWithDefaults() *DrConfigSetDatabasesForm {
	this := DrConfigSetDatabasesForm{}
	return &this
}

// GetDatabases returns the Databases field value if set, zero value otherwise.
func (o *DrConfigSetDatabasesForm) GetDatabases() []string {
	if o == nil || o.Databases == nil {
		var ret []string
		return ret
	}
	return *o.Databases
}

// GetDatabasesOk returns a tuple with the Databases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DrConfigSetDatabasesForm) GetDatabasesOk() (*[]string, bool) {
	if o == nil || o.Databases == nil {
		return nil, false
	}
	return o.Databases, true
}

// HasDatabases returns a boolean if a field has been set.
func (o *DrConfigSetDatabasesForm) HasDatabases() bool {
	if o != nil && o.Databases != nil {
		return true
	}

	return false
}

// SetDatabases gets a reference to the given []string and assigns it to the Databases field.
func (o *DrConfigSetDatabasesForm) SetDatabases(v []string) {
	o.Databases = &v
}

func (o DrConfigSetDatabasesForm) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Databases != nil {
		toSerialize["databases"] = o.Databases
	}
	return json.Marshal(toSerialize)
}

type NullableDrConfigSetDatabasesForm struct {
	value *DrConfigSetDatabasesForm
	isSet bool
}

func (v NullableDrConfigSetDatabasesForm) Get() *DrConfigSetDatabasesForm {
	return v.value
}

func (v *NullableDrConfigSetDatabasesForm) Set(val *DrConfigSetDatabasesForm) {
	v.value = val
	v.isSet = true
}

func (v NullableDrConfigSetDatabasesForm) IsSet() bool {
	return v.isSet
}

func (v *NullableDrConfigSetDatabasesForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDrConfigSetDatabasesForm(val *DrConfigSetDatabasesForm) *NullableDrConfigSetDatabasesForm {
	return &NullableDrConfigSetDatabasesForm{value: val, isSet: true}
}

func (v NullableDrConfigSetDatabasesForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDrConfigSetDatabasesForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


