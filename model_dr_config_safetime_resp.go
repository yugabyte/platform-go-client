/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// DrConfigSafetimeResp Get DR config safetime response
type DrConfigSafetimeResp struct {
	// The list of current safetime for each database
	Safetimes *[]NamespaceSafetime `json:"safetimes,omitempty"`
}

// NewDrConfigSafetimeResp instantiates a new DrConfigSafetimeResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDrConfigSafetimeResp() *DrConfigSafetimeResp {
	this := DrConfigSafetimeResp{}
	return &this
}

// NewDrConfigSafetimeRespWithDefaults instantiates a new DrConfigSafetimeResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDrConfigSafetimeRespWithDefaults() *DrConfigSafetimeResp {
	this := DrConfigSafetimeResp{}
	return &this
}

// GetSafetimes returns the Safetimes field value if set, zero value otherwise.
func (o *DrConfigSafetimeResp) GetSafetimes() []NamespaceSafetime {
	if o == nil || o.Safetimes == nil {
		var ret []NamespaceSafetime
		return ret
	}
	return *o.Safetimes
}

// GetSafetimesOk returns a tuple with the Safetimes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DrConfigSafetimeResp) GetSafetimesOk() (*[]NamespaceSafetime, bool) {
	if o == nil || o.Safetimes == nil {
		return nil, false
	}
	return o.Safetimes, true
}

// HasSafetimes returns a boolean if a field has been set.
func (o *DrConfigSafetimeResp) HasSafetimes() bool {
	if o != nil && o.Safetimes != nil {
		return true
	}

	return false
}

// SetSafetimes gets a reference to the given []NamespaceSafetime and assigns it to the Safetimes field.
func (o *DrConfigSafetimeResp) SetSafetimes(v []NamespaceSafetime) {
	o.Safetimes = &v
}

func (o DrConfigSafetimeResp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Safetimes != nil {
		toSerialize["safetimes"] = o.Safetimes
	}
	return json.Marshal(toSerialize)
}

type NullableDrConfigSafetimeResp struct {
	value *DrConfigSafetimeResp
	isSet bool
}

func (v NullableDrConfigSafetimeResp) Get() *DrConfigSafetimeResp {
	return v.value
}

func (v *NullableDrConfigSafetimeResp) Set(val *DrConfigSafetimeResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDrConfigSafetimeResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDrConfigSafetimeResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDrConfigSafetimeResp(val *DrConfigSafetimeResp) *NullableDrConfigSafetimeResp {
	return &NullableDrConfigSafetimeResp{value: val, isSet: true}
}

func (v NullableDrConfigSafetimeResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDrConfigSafetimeResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


