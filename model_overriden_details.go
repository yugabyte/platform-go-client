/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// OverridenDetails struct for OverridenDetails
type OverridenDetails struct {
	CgroupSize *int32 `json:"cgroupSize,omitempty"`
	DeviceInfo *DeviceInfo `json:"deviceInfo,omitempty"`
	InstanceType *string `json:"instanceType,omitempty"`
}

// NewOverridenDetails instantiates a new OverridenDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOverridenDetails() *OverridenDetails {
	this := OverridenDetails{}
	return &this
}

// NewOverridenDetailsWithDefaults instantiates a new OverridenDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOverridenDetailsWithDefaults() *OverridenDetails {
	this := OverridenDetails{}
	return &this
}

// GetCgroupSize returns the CgroupSize field value if set, zero value otherwise.
func (o *OverridenDetails) GetCgroupSize() int32 {
	if o == nil || o.CgroupSize == nil {
		var ret int32
		return ret
	}
	return *o.CgroupSize
}

// GetCgroupSizeOk returns a tuple with the CgroupSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OverridenDetails) GetCgroupSizeOk() (*int32, bool) {
	if o == nil || o.CgroupSize == nil {
		return nil, false
	}
	return o.CgroupSize, true
}

// HasCgroupSize returns a boolean if a field has been set.
func (o *OverridenDetails) HasCgroupSize() bool {
	if o != nil && o.CgroupSize != nil {
		return true
	}

	return false
}

// SetCgroupSize gets a reference to the given int32 and assigns it to the CgroupSize field.
func (o *OverridenDetails) SetCgroupSize(v int32) {
	o.CgroupSize = &v
}

// GetDeviceInfo returns the DeviceInfo field value if set, zero value otherwise.
func (o *OverridenDetails) GetDeviceInfo() DeviceInfo {
	if o == nil || o.DeviceInfo == nil {
		var ret DeviceInfo
		return ret
	}
	return *o.DeviceInfo
}

// GetDeviceInfoOk returns a tuple with the DeviceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OverridenDetails) GetDeviceInfoOk() (*DeviceInfo, bool) {
	if o == nil || o.DeviceInfo == nil {
		return nil, false
	}
	return o.DeviceInfo, true
}

// HasDeviceInfo returns a boolean if a field has been set.
func (o *OverridenDetails) HasDeviceInfo() bool {
	if o != nil && o.DeviceInfo != nil {
		return true
	}

	return false
}

// SetDeviceInfo gets a reference to the given DeviceInfo and assigns it to the DeviceInfo field.
func (o *OverridenDetails) SetDeviceInfo(v DeviceInfo) {
	o.DeviceInfo = &v
}

// GetInstanceType returns the InstanceType field value if set, zero value otherwise.
func (o *OverridenDetails) GetInstanceType() string {
	if o == nil || o.InstanceType == nil {
		var ret string
		return ret
	}
	return *o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OverridenDetails) GetInstanceTypeOk() (*string, bool) {
	if o == nil || o.InstanceType == nil {
		return nil, false
	}
	return o.InstanceType, true
}

// HasInstanceType returns a boolean if a field has been set.
func (o *OverridenDetails) HasInstanceType() bool {
	if o != nil && o.InstanceType != nil {
		return true
	}

	return false
}

// SetInstanceType gets a reference to the given string and assigns it to the InstanceType field.
func (o *OverridenDetails) SetInstanceType(v string) {
	o.InstanceType = &v
}

func (o OverridenDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CgroupSize != nil {
		toSerialize["cgroupSize"] = o.CgroupSize
	}
	if o.DeviceInfo != nil {
		toSerialize["deviceInfo"] = o.DeviceInfo
	}
	if o.InstanceType != nil {
		toSerialize["instanceType"] = o.InstanceType
	}
	return json.Marshal(toSerialize)
}

type NullableOverridenDetails struct {
	value *OverridenDetails
	isSet bool
}

func (v NullableOverridenDetails) Get() *OverridenDetails {
	return v.value
}

func (v *NullableOverridenDetails) Set(val *OverridenDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableOverridenDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableOverridenDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOverridenDetails(val *OverridenDetails) *NullableOverridenDetails {
	return &NullableOverridenDetails{value: val, isSet: true}
}

func (v NullableOverridenDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOverridenDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


