/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// XClusterConfigRestartFormData xcluster restart form
type XClusterConfigRestartFormData struct {
	BootstrapParams *RestartBootstrapParams `json:"bootstrapParams,omitempty"`
	// Run the pre-checks without actually running the subtasks
	DryRun *bool `json:"dryRun,omitempty"`
	// Source Universe table IDs; if empty, the whole config will restart
	Tables []string `json:"tables"`
}

// NewXClusterConfigRestartFormData instantiates a new XClusterConfigRestartFormData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewXClusterConfigRestartFormData(tables []string) *XClusterConfigRestartFormData {
	this := XClusterConfigRestartFormData{}
	this.Tables = tables
	return &this
}

// NewXClusterConfigRestartFormDataWithDefaults instantiates a new XClusterConfigRestartFormData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewXClusterConfigRestartFormDataWithDefaults() *XClusterConfigRestartFormData {
	this := XClusterConfigRestartFormData{}
	return &this
}

// GetBootstrapParams returns the BootstrapParams field value if set, zero value otherwise.
func (o *XClusterConfigRestartFormData) GetBootstrapParams() RestartBootstrapParams {
	if o == nil || o.BootstrapParams == nil {
		var ret RestartBootstrapParams
		return ret
	}
	return *o.BootstrapParams
}

// GetBootstrapParamsOk returns a tuple with the BootstrapParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XClusterConfigRestartFormData) GetBootstrapParamsOk() (*RestartBootstrapParams, bool) {
	if o == nil || o.BootstrapParams == nil {
		return nil, false
	}
	return o.BootstrapParams, true
}

// HasBootstrapParams returns a boolean if a field has been set.
func (o *XClusterConfigRestartFormData) HasBootstrapParams() bool {
	if o != nil && o.BootstrapParams != nil {
		return true
	}

	return false
}

// SetBootstrapParams gets a reference to the given RestartBootstrapParams and assigns it to the BootstrapParams field.
func (o *XClusterConfigRestartFormData) SetBootstrapParams(v RestartBootstrapParams) {
	o.BootstrapParams = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *XClusterConfigRestartFormData) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XClusterConfigRestartFormData) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *XClusterConfigRestartFormData) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *XClusterConfigRestartFormData) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetTables returns the Tables field value
func (o *XClusterConfigRestartFormData) GetTables() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tables
}

// GetTablesOk returns a tuple with the Tables field value
// and a boolean to check if the value has been set.
func (o *XClusterConfigRestartFormData) GetTablesOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Tables, true
}

// SetTables sets field value
func (o *XClusterConfigRestartFormData) SetTables(v []string) {
	o.Tables = v
}

func (o XClusterConfigRestartFormData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BootstrapParams != nil {
		toSerialize["bootstrapParams"] = o.BootstrapParams
	}
	if o.DryRun != nil {
		toSerialize["dryRun"] = o.DryRun
	}
	if true {
		toSerialize["tables"] = o.Tables
	}
	return json.Marshal(toSerialize)
}

type NullableXClusterConfigRestartFormData struct {
	value *XClusterConfigRestartFormData
	isSet bool
}

func (v NullableXClusterConfigRestartFormData) Get() *XClusterConfigRestartFormData {
	return v.value
}

func (v *NullableXClusterConfigRestartFormData) Set(val *XClusterConfigRestartFormData) {
	v.value = val
	v.isSet = true
}

func (v NullableXClusterConfigRestartFormData) IsSet() bool {
	return v.isSet
}

func (v *NullableXClusterConfigRestartFormData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableXClusterConfigRestartFormData(val *XClusterConfigRestartFormData) *NullableXClusterConfigRestartFormData {
	return &NullableXClusterConfigRestartFormData{value: val, isSet: true}
}

func (v NullableXClusterConfigRestartFormData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableXClusterConfigRestartFormData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


