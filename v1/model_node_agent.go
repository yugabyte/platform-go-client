/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"time"
)

// NodeAgent Node agent details
type NodeAgent struct {
	// Node agent host machine arch
	ArchType *string `json:"archType,omitempty"`
	Config *Config `json:"config,omitempty"`
	// Customer UUID
	CustomerUuid *string `json:"customerUuid,omitempty"`
	// Node agent installation directory
	Home *string `json:"home,omitempty"`
	// Node agent server IP
	Ip *string `json:"ip,omitempty"`
	// Node agent name
	Name *string `json:"name,omitempty"`
	// Node agent host OS
	OsType *string `json:"osType,omitempty"`
	// Node agent server port
	Port *int32 `json:"port,omitempty"`
	// Node agent state
	State *string `json:"state,omitempty"`
	// Updated time
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	// Node agent UUID
	Uuid *string `json:"uuid,omitempty"`
	// Node agent installed version
	Version *string `json:"version,omitempty"`
}

// NewNodeAgent instantiates a new NodeAgent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodeAgent() *NodeAgent {
	this := NodeAgent{}
	return &this
}

// NewNodeAgentWithDefaults instantiates a new NodeAgent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeAgentWithDefaults() *NodeAgent {
	this := NodeAgent{}
	return &this
}

// GetArchType returns the ArchType field value if set, zero value otherwise.
func (o *NodeAgent) GetArchType() string {
	if o == nil || o.ArchType == nil {
		var ret string
		return ret
	}
	return *o.ArchType
}

// GetArchTypeOk returns a tuple with the ArchType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeAgent) GetArchTypeOk() (*string, bool) {
	if o == nil || o.ArchType == nil {
		return nil, false
	}
	return o.ArchType, true
}

// HasArchType returns a boolean if a field has been set.
func (o *NodeAgent) HasArchType() bool {
	if o != nil && o.ArchType != nil {
		return true
	}

	return false
}

// SetArchType gets a reference to the given string and assigns it to the ArchType field.
func (o *NodeAgent) SetArchType(v string) {
	o.ArchType = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *NodeAgent) GetConfig() Config {
	if o == nil || o.Config == nil {
		var ret Config
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeAgent) GetConfigOk() (*Config, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *NodeAgent) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given Config and assigns it to the Config field.
func (o *NodeAgent) SetConfig(v Config) {
	o.Config = &v
}

// GetCustomerUuid returns the CustomerUuid field value if set, zero value otherwise.
func (o *NodeAgent) GetCustomerUuid() string {
	if o == nil || o.CustomerUuid == nil {
		var ret string
		return ret
	}
	return *o.CustomerUuid
}

// GetCustomerUuidOk returns a tuple with the CustomerUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeAgent) GetCustomerUuidOk() (*string, bool) {
	if o == nil || o.CustomerUuid == nil {
		return nil, false
	}
	return o.CustomerUuid, true
}

// HasCustomerUuid returns a boolean if a field has been set.
func (o *NodeAgent) HasCustomerUuid() bool {
	if o != nil && o.CustomerUuid != nil {
		return true
	}

	return false
}

// SetCustomerUuid gets a reference to the given string and assigns it to the CustomerUuid field.
func (o *NodeAgent) SetCustomerUuid(v string) {
	o.CustomerUuid = &v
}

// GetHome returns the Home field value if set, zero value otherwise.
func (o *NodeAgent) GetHome() string {
	if o == nil || o.Home == nil {
		var ret string
		return ret
	}
	return *o.Home
}

// GetHomeOk returns a tuple with the Home field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeAgent) GetHomeOk() (*string, bool) {
	if o == nil || o.Home == nil {
		return nil, false
	}
	return o.Home, true
}

// HasHome returns a boolean if a field has been set.
func (o *NodeAgent) HasHome() bool {
	if o != nil && o.Home != nil {
		return true
	}

	return false
}

// SetHome gets a reference to the given string and assigns it to the Home field.
func (o *NodeAgent) SetHome(v string) {
	o.Home = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *NodeAgent) GetIp() string {
	if o == nil || o.Ip == nil {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeAgent) GetIpOk() (*string, bool) {
	if o == nil || o.Ip == nil {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *NodeAgent) HasIp() bool {
	if o != nil && o.Ip != nil {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *NodeAgent) SetIp(v string) {
	o.Ip = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NodeAgent) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeAgent) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NodeAgent) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NodeAgent) SetName(v string) {
	o.Name = &v
}

// GetOsType returns the OsType field value if set, zero value otherwise.
func (o *NodeAgent) GetOsType() string {
	if o == nil || o.OsType == nil {
		var ret string
		return ret
	}
	return *o.OsType
}

// GetOsTypeOk returns a tuple with the OsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeAgent) GetOsTypeOk() (*string, bool) {
	if o == nil || o.OsType == nil {
		return nil, false
	}
	return o.OsType, true
}

// HasOsType returns a boolean if a field has been set.
func (o *NodeAgent) HasOsType() bool {
	if o != nil && o.OsType != nil {
		return true
	}

	return false
}

// SetOsType gets a reference to the given string and assigns it to the OsType field.
func (o *NodeAgent) SetOsType(v string) {
	o.OsType = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *NodeAgent) GetPort() int32 {
	if o == nil || o.Port == nil {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeAgent) GetPortOk() (*int32, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *NodeAgent) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *NodeAgent) SetPort(v int32) {
	o.Port = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *NodeAgent) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeAgent) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *NodeAgent) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *NodeAgent) SetState(v string) {
	o.State = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *NodeAgent) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeAgent) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *NodeAgent) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *NodeAgent) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *NodeAgent) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeAgent) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *NodeAgent) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *NodeAgent) SetUuid(v string) {
	o.Uuid = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *NodeAgent) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeAgent) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *NodeAgent) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *NodeAgent) SetVersion(v string) {
	o.Version = &v
}

func (o NodeAgent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ArchType != nil {
		toSerialize["archType"] = o.ArchType
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.CustomerUuid != nil {
		toSerialize["customerUuid"] = o.CustomerUuid
	}
	if o.Home != nil {
		toSerialize["home"] = o.Home
	}
	if o.Ip != nil {
		toSerialize["ip"] = o.Ip
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.OsType != nil {
		toSerialize["osType"] = o.OsType
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableNodeAgent struct {
	value *NodeAgent
	isSet bool
}

func (v NullableNodeAgent) Get() *NodeAgent {
	return v.value
}

func (v *NullableNodeAgent) Set(val *NodeAgent) {
	v.value = val
	v.isSet = true
}

func (v NullableNodeAgent) IsSet() bool {
	return v.isSet
}

func (v *NullableNodeAgent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodeAgent(val *NodeAgent) *NullableNodeAgent {
	return &NullableNodeAgent{value: val, isSet: true}
}

func (v NullableNodeAgent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodeAgent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


