/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// CloudInfo struct for CloudInfo
type CloudInfo struct {
	Aws *AWSCloudInfo `json:"aws,omitempty"`
	Azu *AzureCloudInfo `json:"azu,omitempty"`
	Gcp *GCPCloudInfo `json:"gcp,omitempty"`
	Kubernetes *KubernetesInfo `json:"kubernetes,omitempty"`
	Local *LocalCloudInfo `json:"local,omitempty"`
	Onprem *OnPremCloudInfo `json:"onprem,omitempty"`
}

// NewCloudInfo instantiates a new CloudInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudInfo() *CloudInfo {
	this := CloudInfo{}
	return &this
}

// NewCloudInfoWithDefaults instantiates a new CloudInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudInfoWithDefaults() *CloudInfo {
	this := CloudInfo{}
	return &this
}

// GetAws returns the Aws field value if set, zero value otherwise.
func (o *CloudInfo) GetAws() AWSCloudInfo {
	if o == nil || o.Aws == nil {
		var ret AWSCloudInfo
		return ret
	}
	return *o.Aws
}

// GetAwsOk returns a tuple with the Aws field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudInfo) GetAwsOk() (*AWSCloudInfo, bool) {
	if o == nil || o.Aws == nil {
		return nil, false
	}
	return o.Aws, true
}

// HasAws returns a boolean if a field has been set.
func (o *CloudInfo) HasAws() bool {
	if o != nil && o.Aws != nil {
		return true
	}

	return false
}

// SetAws gets a reference to the given AWSCloudInfo and assigns it to the Aws field.
func (o *CloudInfo) SetAws(v AWSCloudInfo) {
	o.Aws = &v
}

// GetAzu returns the Azu field value if set, zero value otherwise.
func (o *CloudInfo) GetAzu() AzureCloudInfo {
	if o == nil || o.Azu == nil {
		var ret AzureCloudInfo
		return ret
	}
	return *o.Azu
}

// GetAzuOk returns a tuple with the Azu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudInfo) GetAzuOk() (*AzureCloudInfo, bool) {
	if o == nil || o.Azu == nil {
		return nil, false
	}
	return o.Azu, true
}

// HasAzu returns a boolean if a field has been set.
func (o *CloudInfo) HasAzu() bool {
	if o != nil && o.Azu != nil {
		return true
	}

	return false
}

// SetAzu gets a reference to the given AzureCloudInfo and assigns it to the Azu field.
func (o *CloudInfo) SetAzu(v AzureCloudInfo) {
	o.Azu = &v
}

// GetGcp returns the Gcp field value if set, zero value otherwise.
func (o *CloudInfo) GetGcp() GCPCloudInfo {
	if o == nil || o.Gcp == nil {
		var ret GCPCloudInfo
		return ret
	}
	return *o.Gcp
}

// GetGcpOk returns a tuple with the Gcp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudInfo) GetGcpOk() (*GCPCloudInfo, bool) {
	if o == nil || o.Gcp == nil {
		return nil, false
	}
	return o.Gcp, true
}

// HasGcp returns a boolean if a field has been set.
func (o *CloudInfo) HasGcp() bool {
	if o != nil && o.Gcp != nil {
		return true
	}

	return false
}

// SetGcp gets a reference to the given GCPCloudInfo and assigns it to the Gcp field.
func (o *CloudInfo) SetGcp(v GCPCloudInfo) {
	o.Gcp = &v
}

// GetKubernetes returns the Kubernetes field value if set, zero value otherwise.
func (o *CloudInfo) GetKubernetes() KubernetesInfo {
	if o == nil || o.Kubernetes == nil {
		var ret KubernetesInfo
		return ret
	}
	return *o.Kubernetes
}

// GetKubernetesOk returns a tuple with the Kubernetes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudInfo) GetKubernetesOk() (*KubernetesInfo, bool) {
	if o == nil || o.Kubernetes == nil {
		return nil, false
	}
	return o.Kubernetes, true
}

// HasKubernetes returns a boolean if a field has been set.
func (o *CloudInfo) HasKubernetes() bool {
	if o != nil && o.Kubernetes != nil {
		return true
	}

	return false
}

// SetKubernetes gets a reference to the given KubernetesInfo and assigns it to the Kubernetes field.
func (o *CloudInfo) SetKubernetes(v KubernetesInfo) {
	o.Kubernetes = &v
}

// GetLocal returns the Local field value if set, zero value otherwise.
func (o *CloudInfo) GetLocal() LocalCloudInfo {
	if o == nil || o.Local == nil {
		var ret LocalCloudInfo
		return ret
	}
	return *o.Local
}

// GetLocalOk returns a tuple with the Local field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudInfo) GetLocalOk() (*LocalCloudInfo, bool) {
	if o == nil || o.Local == nil {
		return nil, false
	}
	return o.Local, true
}

// HasLocal returns a boolean if a field has been set.
func (o *CloudInfo) HasLocal() bool {
	if o != nil && o.Local != nil {
		return true
	}

	return false
}

// SetLocal gets a reference to the given LocalCloudInfo and assigns it to the Local field.
func (o *CloudInfo) SetLocal(v LocalCloudInfo) {
	o.Local = &v
}

// GetOnprem returns the Onprem field value if set, zero value otherwise.
func (o *CloudInfo) GetOnprem() OnPremCloudInfo {
	if o == nil || o.Onprem == nil {
		var ret OnPremCloudInfo
		return ret
	}
	return *o.Onprem
}

// GetOnpremOk returns a tuple with the Onprem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudInfo) GetOnpremOk() (*OnPremCloudInfo, bool) {
	if o == nil || o.Onprem == nil {
		return nil, false
	}
	return o.Onprem, true
}

// HasOnprem returns a boolean if a field has been set.
func (o *CloudInfo) HasOnprem() bool {
	if o != nil && o.Onprem != nil {
		return true
	}

	return false
}

// SetOnprem gets a reference to the given OnPremCloudInfo and assigns it to the Onprem field.
func (o *CloudInfo) SetOnprem(v OnPremCloudInfo) {
	o.Onprem = &v
}

func (o CloudInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Aws != nil {
		toSerialize["aws"] = o.Aws
	}
	if o.Azu != nil {
		toSerialize["azu"] = o.Azu
	}
	if o.Gcp != nil {
		toSerialize["gcp"] = o.Gcp
	}
	if o.Kubernetes != nil {
		toSerialize["kubernetes"] = o.Kubernetes
	}
	if o.Local != nil {
		toSerialize["local"] = o.Local
	}
	if o.Onprem != nil {
		toSerialize["onprem"] = o.Onprem
	}
	return json.Marshal(toSerialize)
}

type NullableCloudInfo struct {
	value *CloudInfo
	isSet bool
}

func (v NullableCloudInfo) Get() *CloudInfo {
	return v.value
}

func (v *NullableCloudInfo) Set(val *CloudInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudInfo(val *CloudInfo) *NullableCloudInfo {
	return &NullableCloudInfo{value: val, isSet: true}
}

func (v NullableCloudInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


