/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// ImageBundleDetails struct for ImageBundleDetails
type ImageBundleDetails struct {
	// Architecture type for the image bundle
	Arch *string `json:"arch,omitempty"`
	// Global YB image for the bundle
	GlobalYbImage *string `json:"globalYbImage,omitempty"`
	// Regions override for image bundle
	Regions *map[string]BundleInfo `json:"regions,omitempty"`
	SshPort *int32 `json:"sshPort,omitempty"`
	SshUser *string `json:"sshUser,omitempty"`
	UseIMDSv2 *bool `json:"useIMDSv2,omitempty"`
}

// NewImageBundleDetails instantiates a new ImageBundleDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageBundleDetails() *ImageBundleDetails {
	this := ImageBundleDetails{}
	return &this
}

// NewImageBundleDetailsWithDefaults instantiates a new ImageBundleDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageBundleDetailsWithDefaults() *ImageBundleDetails {
	this := ImageBundleDetails{}
	return &this
}

// GetArch returns the Arch field value if set, zero value otherwise.
func (o *ImageBundleDetails) GetArch() string {
	if o == nil || o.Arch == nil {
		var ret string
		return ret
	}
	return *o.Arch
}

// GetArchOk returns a tuple with the Arch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBundleDetails) GetArchOk() (*string, bool) {
	if o == nil || o.Arch == nil {
		return nil, false
	}
	return o.Arch, true
}

// HasArch returns a boolean if a field has been set.
func (o *ImageBundleDetails) HasArch() bool {
	if o != nil && o.Arch != nil {
		return true
	}

	return false
}

// SetArch gets a reference to the given string and assigns it to the Arch field.
func (o *ImageBundleDetails) SetArch(v string) {
	o.Arch = &v
}

// GetGlobalYbImage returns the GlobalYbImage field value if set, zero value otherwise.
func (o *ImageBundleDetails) GetGlobalYbImage() string {
	if o == nil || o.GlobalYbImage == nil {
		var ret string
		return ret
	}
	return *o.GlobalYbImage
}

// GetGlobalYbImageOk returns a tuple with the GlobalYbImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBundleDetails) GetGlobalYbImageOk() (*string, bool) {
	if o == nil || o.GlobalYbImage == nil {
		return nil, false
	}
	return o.GlobalYbImage, true
}

// HasGlobalYbImage returns a boolean if a field has been set.
func (o *ImageBundleDetails) HasGlobalYbImage() bool {
	if o != nil && o.GlobalYbImage != nil {
		return true
	}

	return false
}

// SetGlobalYbImage gets a reference to the given string and assigns it to the GlobalYbImage field.
func (o *ImageBundleDetails) SetGlobalYbImage(v string) {
	o.GlobalYbImage = &v
}

// GetRegions returns the Regions field value if set, zero value otherwise.
func (o *ImageBundleDetails) GetRegions() map[string]BundleInfo {
	if o == nil || o.Regions == nil {
		var ret map[string]BundleInfo
		return ret
	}
	return *o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBundleDetails) GetRegionsOk() (*map[string]BundleInfo, bool) {
	if o == nil || o.Regions == nil {
		return nil, false
	}
	return o.Regions, true
}

// HasRegions returns a boolean if a field has been set.
func (o *ImageBundleDetails) HasRegions() bool {
	if o != nil && o.Regions != nil {
		return true
	}

	return false
}

// SetRegions gets a reference to the given map[string]BundleInfo and assigns it to the Regions field.
func (o *ImageBundleDetails) SetRegions(v map[string]BundleInfo) {
	o.Regions = &v
}

// GetSshPort returns the SshPort field value if set, zero value otherwise.
func (o *ImageBundleDetails) GetSshPort() int32 {
	if o == nil || o.SshPort == nil {
		var ret int32
		return ret
	}
	return *o.SshPort
}

// GetSshPortOk returns a tuple with the SshPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBundleDetails) GetSshPortOk() (*int32, bool) {
	if o == nil || o.SshPort == nil {
		return nil, false
	}
	return o.SshPort, true
}

// HasSshPort returns a boolean if a field has been set.
func (o *ImageBundleDetails) HasSshPort() bool {
	if o != nil && o.SshPort != nil {
		return true
	}

	return false
}

// SetSshPort gets a reference to the given int32 and assigns it to the SshPort field.
func (o *ImageBundleDetails) SetSshPort(v int32) {
	o.SshPort = &v
}

// GetSshUser returns the SshUser field value if set, zero value otherwise.
func (o *ImageBundleDetails) GetSshUser() string {
	if o == nil || o.SshUser == nil {
		var ret string
		return ret
	}
	return *o.SshUser
}

// GetSshUserOk returns a tuple with the SshUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBundleDetails) GetSshUserOk() (*string, bool) {
	if o == nil || o.SshUser == nil {
		return nil, false
	}
	return o.SshUser, true
}

// HasSshUser returns a boolean if a field has been set.
func (o *ImageBundleDetails) HasSshUser() bool {
	if o != nil && o.SshUser != nil {
		return true
	}

	return false
}

// SetSshUser gets a reference to the given string and assigns it to the SshUser field.
func (o *ImageBundleDetails) SetSshUser(v string) {
	o.SshUser = &v
}

// GetUseIMDSv2 returns the UseIMDSv2 field value if set, zero value otherwise.
func (o *ImageBundleDetails) GetUseIMDSv2() bool {
	if o == nil || o.UseIMDSv2 == nil {
		var ret bool
		return ret
	}
	return *o.UseIMDSv2
}

// GetUseIMDSv2Ok returns a tuple with the UseIMDSv2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBundleDetails) GetUseIMDSv2Ok() (*bool, bool) {
	if o == nil || o.UseIMDSv2 == nil {
		return nil, false
	}
	return o.UseIMDSv2, true
}

// HasUseIMDSv2 returns a boolean if a field has been set.
func (o *ImageBundleDetails) HasUseIMDSv2() bool {
	if o != nil && o.UseIMDSv2 != nil {
		return true
	}

	return false
}

// SetUseIMDSv2 gets a reference to the given bool and assigns it to the UseIMDSv2 field.
func (o *ImageBundleDetails) SetUseIMDSv2(v bool) {
	o.UseIMDSv2 = &v
}

func (o ImageBundleDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Arch != nil {
		toSerialize["arch"] = o.Arch
	}
	if o.GlobalYbImage != nil {
		toSerialize["globalYbImage"] = o.GlobalYbImage
	}
	if o.Regions != nil {
		toSerialize["regions"] = o.Regions
	}
	if o.SshPort != nil {
		toSerialize["sshPort"] = o.SshPort
	}
	if o.SshUser != nil {
		toSerialize["sshUser"] = o.SshUser
	}
	if o.UseIMDSv2 != nil {
		toSerialize["useIMDSv2"] = o.UseIMDSv2
	}
	return json.Marshal(toSerialize)
}

type NullableImageBundleDetails struct {
	value *ImageBundleDetails
	isSet bool
}

func (v NullableImageBundleDetails) Get() *ImageBundleDetails {
	return v.value
}

func (v *NullableImageBundleDetails) Set(val *ImageBundleDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableImageBundleDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableImageBundleDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageBundleDetails(val *ImageBundleDetails) *NullableImageBundleDetails {
	return &NullableImageBundleDetails{value: val, isSet: true}
}

func (v NullableImageBundleDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageBundleDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


