/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// KubernetesOverrideError struct for KubernetesOverrideError
type KubernetesOverrideError struct {
	ErrorString *string `json:"errorString,omitempty"`
}

// NewKubernetesOverrideError instantiates a new KubernetesOverrideError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesOverrideError() *KubernetesOverrideError {
	this := KubernetesOverrideError{}
	return &this
}

// NewKubernetesOverrideErrorWithDefaults instantiates a new KubernetesOverrideError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesOverrideErrorWithDefaults() *KubernetesOverrideError {
	this := KubernetesOverrideError{}
	return &this
}

// GetErrorString returns the ErrorString field value if set, zero value otherwise.
func (o *KubernetesOverrideError) GetErrorString() string {
	if o == nil || o.ErrorString == nil {
		var ret string
		return ret
	}
	return *o.ErrorString
}

// GetErrorStringOk returns a tuple with the ErrorString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverrideError) GetErrorStringOk() (*string, bool) {
	if o == nil || o.ErrorString == nil {
		return nil, false
	}
	return o.ErrorString, true
}

// HasErrorString returns a boolean if a field has been set.
func (o *KubernetesOverrideError) HasErrorString() bool {
	if o != nil && o.ErrorString != nil {
		return true
	}

	return false
}

// SetErrorString gets a reference to the given string and assigns it to the ErrorString field.
func (o *KubernetesOverrideError) SetErrorString(v string) {
	o.ErrorString = &v
}

func (o KubernetesOverrideError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ErrorString != nil {
		toSerialize["errorString"] = o.ErrorString
	}
	return json.Marshal(toSerialize)
}

type NullableKubernetesOverrideError struct {
	value *KubernetesOverrideError
	isSet bool
}

func (v NullableKubernetesOverrideError) Get() *KubernetesOverrideError {
	return v.value
}

func (v *NullableKubernetesOverrideError) Set(val *KubernetesOverrideError) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesOverrideError) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesOverrideError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesOverrideError(val *KubernetesOverrideError) *NullableKubernetesOverrideError {
	return &NullableKubernetesOverrideError{value: val, isSet: true}
}

func (v NullableKubernetesOverrideError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesOverrideError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


