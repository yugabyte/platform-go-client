/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// ParametersForRestorePreflightChecks struct for ParametersForRestorePreflightChecks
type ParametersForRestorePreflightChecks struct {
	// UUID of the backup being restored
	BackupUUID string `json:"backupUUID"`
	// List of keyspace(s) and tables to be restored
	KeyspaceTables *[]KeyspaceTables `json:"keyspaceTables,omitempty"`
	// Point in restore timestamp in millis
	RestoreToPointInTimeMillis *int64 `json:"restoreToPointInTimeMillis,omitempty"`
	// Target universe UUID
	UniverseUUID string `json:"universeUUID"`
}

// NewParametersForRestorePreflightChecks instantiates a new ParametersForRestorePreflightChecks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParametersForRestorePreflightChecks(backupUUID string, universeUUID string) *ParametersForRestorePreflightChecks {
	this := ParametersForRestorePreflightChecks{}
	this.BackupUUID = backupUUID
	this.UniverseUUID = universeUUID
	return &this
}

// NewParametersForRestorePreflightChecksWithDefaults instantiates a new ParametersForRestorePreflightChecks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParametersForRestorePreflightChecksWithDefaults() *ParametersForRestorePreflightChecks {
	this := ParametersForRestorePreflightChecks{}
	return &this
}

// GetBackupUUID returns the BackupUUID field value
func (o *ParametersForRestorePreflightChecks) GetBackupUUID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackupUUID
}

// GetBackupUUIDOk returns a tuple with the BackupUUID field value
// and a boolean to check if the value has been set.
func (o *ParametersForRestorePreflightChecks) GetBackupUUIDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BackupUUID, true
}

// SetBackupUUID sets field value
func (o *ParametersForRestorePreflightChecks) SetBackupUUID(v string) {
	o.BackupUUID = v
}

// GetKeyspaceTables returns the KeyspaceTables field value if set, zero value otherwise.
func (o *ParametersForRestorePreflightChecks) GetKeyspaceTables() []KeyspaceTables {
	if o == nil || o.KeyspaceTables == nil {
		var ret []KeyspaceTables
		return ret
	}
	return *o.KeyspaceTables
}

// GetKeyspaceTablesOk returns a tuple with the KeyspaceTables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParametersForRestorePreflightChecks) GetKeyspaceTablesOk() (*[]KeyspaceTables, bool) {
	if o == nil || o.KeyspaceTables == nil {
		return nil, false
	}
	return o.KeyspaceTables, true
}

// HasKeyspaceTables returns a boolean if a field has been set.
func (o *ParametersForRestorePreflightChecks) HasKeyspaceTables() bool {
	if o != nil && o.KeyspaceTables != nil {
		return true
	}

	return false
}

// SetKeyspaceTables gets a reference to the given []KeyspaceTables and assigns it to the KeyspaceTables field.
func (o *ParametersForRestorePreflightChecks) SetKeyspaceTables(v []KeyspaceTables) {
	o.KeyspaceTables = &v
}

// GetRestoreToPointInTimeMillis returns the RestoreToPointInTimeMillis field value if set, zero value otherwise.
func (o *ParametersForRestorePreflightChecks) GetRestoreToPointInTimeMillis() int64 {
	if o == nil || o.RestoreToPointInTimeMillis == nil {
		var ret int64
		return ret
	}
	return *o.RestoreToPointInTimeMillis
}

// GetRestoreToPointInTimeMillisOk returns a tuple with the RestoreToPointInTimeMillis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParametersForRestorePreflightChecks) GetRestoreToPointInTimeMillisOk() (*int64, bool) {
	if o == nil || o.RestoreToPointInTimeMillis == nil {
		return nil, false
	}
	return o.RestoreToPointInTimeMillis, true
}

// HasRestoreToPointInTimeMillis returns a boolean if a field has been set.
func (o *ParametersForRestorePreflightChecks) HasRestoreToPointInTimeMillis() bool {
	if o != nil && o.RestoreToPointInTimeMillis != nil {
		return true
	}

	return false
}

// SetRestoreToPointInTimeMillis gets a reference to the given int64 and assigns it to the RestoreToPointInTimeMillis field.
func (o *ParametersForRestorePreflightChecks) SetRestoreToPointInTimeMillis(v int64) {
	o.RestoreToPointInTimeMillis = &v
}

// GetUniverseUUID returns the UniverseUUID field value
func (o *ParametersForRestorePreflightChecks) GetUniverseUUID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UniverseUUID
}

// GetUniverseUUIDOk returns a tuple with the UniverseUUID field value
// and a boolean to check if the value has been set.
func (o *ParametersForRestorePreflightChecks) GetUniverseUUIDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UniverseUUID, true
}

// SetUniverseUUID sets field value
func (o *ParametersForRestorePreflightChecks) SetUniverseUUID(v string) {
	o.UniverseUUID = v
}

func (o ParametersForRestorePreflightChecks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["backupUUID"] = o.BackupUUID
	}
	if o.KeyspaceTables != nil {
		toSerialize["keyspaceTables"] = o.KeyspaceTables
	}
	if o.RestoreToPointInTimeMillis != nil {
		toSerialize["restoreToPointInTimeMillis"] = o.RestoreToPointInTimeMillis
	}
	if true {
		toSerialize["universeUUID"] = o.UniverseUUID
	}
	return json.Marshal(toSerialize)
}

type NullableParametersForRestorePreflightChecks struct {
	value *ParametersForRestorePreflightChecks
	isSet bool
}

func (v NullableParametersForRestorePreflightChecks) Get() *ParametersForRestorePreflightChecks {
	return v.value
}

func (v *NullableParametersForRestorePreflightChecks) Set(val *ParametersForRestorePreflightChecks) {
	v.value = val
	v.isSet = true
}

func (v NullableParametersForRestorePreflightChecks) IsSet() bool {
	return v.isSet
}

func (v *NullableParametersForRestorePreflightChecks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParametersForRestorePreflightChecks(val *ParametersForRestorePreflightChecks) *NullableParametersForRestorePreflightChecks {
	return &NullableParametersForRestorePreflightChecks{value: val, isSet: true}
}

func (v NullableParametersForRestorePreflightChecks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParametersForRestorePreflightChecks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


