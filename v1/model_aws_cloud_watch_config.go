/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// AWSCloudWatchConfig struct for AWSCloudWatchConfig
type AWSCloudWatchConfig struct {
	TelemetryProviderConfig
	// Access Key
	AccessKey *string `json:"accessKey,omitempty"`
	// End Point
	Endpoint *string `json:"endpoint,omitempty"`
	// Log Group
	LogGroup *string `json:"logGroup,omitempty"`
	// Log Stream
	LogStream *string `json:"logStream,omitempty"`
	// Region
	Region *string `json:"region,omitempty"`
	// Role ARN
	RoleARN *string `json:"roleARN,omitempty"`
	// Secret Key
	SecretKey *string `json:"secretKey,omitempty"`
}

// NewAWSCloudWatchConfig instantiates a new AWSCloudWatchConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAWSCloudWatchConfig() *AWSCloudWatchConfig {
	this := AWSCloudWatchConfig{}
	return &this
}

// NewAWSCloudWatchConfigWithDefaults instantiates a new AWSCloudWatchConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSCloudWatchConfigWithDefaults() *AWSCloudWatchConfig {
	this := AWSCloudWatchConfig{}
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *AWSCloudWatchConfig) GetAccessKey() string {
	if o == nil || o.AccessKey == nil {
		var ret string
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AWSCloudWatchConfig) GetAccessKeyOk() (*string, bool) {
	if o == nil || o.AccessKey == nil {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *AWSCloudWatchConfig) HasAccessKey() bool {
	if o != nil && o.AccessKey != nil {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given string and assigns it to the AccessKey field.
func (o *AWSCloudWatchConfig) SetAccessKey(v string) {
	o.AccessKey = &v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *AWSCloudWatchConfig) GetEndpoint() string {
	if o == nil || o.Endpoint == nil {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AWSCloudWatchConfig) GetEndpointOk() (*string, bool) {
	if o == nil || o.Endpoint == nil {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *AWSCloudWatchConfig) HasEndpoint() bool {
	if o != nil && o.Endpoint != nil {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *AWSCloudWatchConfig) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetLogGroup returns the LogGroup field value if set, zero value otherwise.
func (o *AWSCloudWatchConfig) GetLogGroup() string {
	if o == nil || o.LogGroup == nil {
		var ret string
		return ret
	}
	return *o.LogGroup
}

// GetLogGroupOk returns a tuple with the LogGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AWSCloudWatchConfig) GetLogGroupOk() (*string, bool) {
	if o == nil || o.LogGroup == nil {
		return nil, false
	}
	return o.LogGroup, true
}

// HasLogGroup returns a boolean if a field has been set.
func (o *AWSCloudWatchConfig) HasLogGroup() bool {
	if o != nil && o.LogGroup != nil {
		return true
	}

	return false
}

// SetLogGroup gets a reference to the given string and assigns it to the LogGroup field.
func (o *AWSCloudWatchConfig) SetLogGroup(v string) {
	o.LogGroup = &v
}

// GetLogStream returns the LogStream field value if set, zero value otherwise.
func (o *AWSCloudWatchConfig) GetLogStream() string {
	if o == nil || o.LogStream == nil {
		var ret string
		return ret
	}
	return *o.LogStream
}

// GetLogStreamOk returns a tuple with the LogStream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AWSCloudWatchConfig) GetLogStreamOk() (*string, bool) {
	if o == nil || o.LogStream == nil {
		return nil, false
	}
	return o.LogStream, true
}

// HasLogStream returns a boolean if a field has been set.
func (o *AWSCloudWatchConfig) HasLogStream() bool {
	if o != nil && o.LogStream != nil {
		return true
	}

	return false
}

// SetLogStream gets a reference to the given string and assigns it to the LogStream field.
func (o *AWSCloudWatchConfig) SetLogStream(v string) {
	o.LogStream = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *AWSCloudWatchConfig) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AWSCloudWatchConfig) GetRegionOk() (*string, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *AWSCloudWatchConfig) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *AWSCloudWatchConfig) SetRegion(v string) {
	o.Region = &v
}

// GetRoleARN returns the RoleARN field value if set, zero value otherwise.
func (o *AWSCloudWatchConfig) GetRoleARN() string {
	if o == nil || o.RoleARN == nil {
		var ret string
		return ret
	}
	return *o.RoleARN
}

// GetRoleARNOk returns a tuple with the RoleARN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AWSCloudWatchConfig) GetRoleARNOk() (*string, bool) {
	if o == nil || o.RoleARN == nil {
		return nil, false
	}
	return o.RoleARN, true
}

// HasRoleARN returns a boolean if a field has been set.
func (o *AWSCloudWatchConfig) HasRoleARN() bool {
	if o != nil && o.RoleARN != nil {
		return true
	}

	return false
}

// SetRoleARN gets a reference to the given string and assigns it to the RoleARN field.
func (o *AWSCloudWatchConfig) SetRoleARN(v string) {
	o.RoleARN = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *AWSCloudWatchConfig) GetSecretKey() string {
	if o == nil || o.SecretKey == nil {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AWSCloudWatchConfig) GetSecretKeyOk() (*string, bool) {
	if o == nil || o.SecretKey == nil {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *AWSCloudWatchConfig) HasSecretKey() bool {
	if o != nil && o.SecretKey != nil {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *AWSCloudWatchConfig) SetSecretKey(v string) {
	o.SecretKey = &v
}

func (o AWSCloudWatchConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedTelemetryProviderConfig, errTelemetryProviderConfig := json.Marshal(o.TelemetryProviderConfig)
	if errTelemetryProviderConfig != nil {
		return []byte{}, errTelemetryProviderConfig
	}
	errTelemetryProviderConfig = json.Unmarshal([]byte(serializedTelemetryProviderConfig), &toSerialize)
	if errTelemetryProviderConfig != nil {
		return []byte{}, errTelemetryProviderConfig
	}
	if o.AccessKey != nil {
		toSerialize["accessKey"] = o.AccessKey
	}
	if o.Endpoint != nil {
		toSerialize["endpoint"] = o.Endpoint
	}
	if o.LogGroup != nil {
		toSerialize["logGroup"] = o.LogGroup
	}
	if o.LogStream != nil {
		toSerialize["logStream"] = o.LogStream
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.RoleARN != nil {
		toSerialize["roleARN"] = o.RoleARN
	}
	if o.SecretKey != nil {
		toSerialize["secretKey"] = o.SecretKey
	}
	return json.Marshal(toSerialize)
}

type NullableAWSCloudWatchConfig struct {
	value *AWSCloudWatchConfig
	isSet bool
}

func (v NullableAWSCloudWatchConfig) Get() *AWSCloudWatchConfig {
	return v.value
}

func (v *NullableAWSCloudWatchConfig) Set(val *AWSCloudWatchConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAWSCloudWatchConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAWSCloudWatchConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAWSCloudWatchConfig(val *AWSCloudWatchConfig) *NullableAWSCloudWatchConfig {
	return &NullableAWSCloudWatchConfig{value: val, isSet: true}
}

func (v NullableAWSCloudWatchConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAWSCloudWatchConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


