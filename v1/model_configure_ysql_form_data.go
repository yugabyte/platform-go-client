/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// ConfigureYSQLFormData YSQL properties
type ConfigureYSQLFormData struct {
	CommunicationPorts *CommunicationPorts `json:"communicationPorts,omitempty"`
	// Enable Connection Pooling for the universe
	EnableConnectionPooling *bool `json:"enableConnectionPooling,omitempty"`
	// Enable YSQL Api for the universe
	EnableYSQL *bool `json:"enableYSQL,omitempty"`
	// Enable YSQL Auth for the universe
	EnableYSQLAuth *bool `json:"enableYSQLAuth,omitempty"`
	// YSQL Auth password
	YsqlPassword *string `json:"ysqlPassword,omitempty"`
}

// NewConfigureYSQLFormData instantiates a new ConfigureYSQLFormData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigureYSQLFormData() *ConfigureYSQLFormData {
	this := ConfigureYSQLFormData{}
	return &this
}

// NewConfigureYSQLFormDataWithDefaults instantiates a new ConfigureYSQLFormData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigureYSQLFormDataWithDefaults() *ConfigureYSQLFormData {
	this := ConfigureYSQLFormData{}
	return &this
}

// GetCommunicationPorts returns the CommunicationPorts field value if set, zero value otherwise.
func (o *ConfigureYSQLFormData) GetCommunicationPorts() CommunicationPorts {
	if o == nil || o.CommunicationPorts == nil {
		var ret CommunicationPorts
		return ret
	}
	return *o.CommunicationPorts
}

// GetCommunicationPortsOk returns a tuple with the CommunicationPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigureYSQLFormData) GetCommunicationPortsOk() (*CommunicationPorts, bool) {
	if o == nil || o.CommunicationPorts == nil {
		return nil, false
	}
	return o.CommunicationPorts, true
}

// HasCommunicationPorts returns a boolean if a field has been set.
func (o *ConfigureYSQLFormData) HasCommunicationPorts() bool {
	if o != nil && o.CommunicationPorts != nil {
		return true
	}

	return false
}

// SetCommunicationPorts gets a reference to the given CommunicationPorts and assigns it to the CommunicationPorts field.
func (o *ConfigureYSQLFormData) SetCommunicationPorts(v CommunicationPorts) {
	o.CommunicationPorts = &v
}

// GetEnableConnectionPooling returns the EnableConnectionPooling field value if set, zero value otherwise.
func (o *ConfigureYSQLFormData) GetEnableConnectionPooling() bool {
	if o == nil || o.EnableConnectionPooling == nil {
		var ret bool
		return ret
	}
	return *o.EnableConnectionPooling
}

// GetEnableConnectionPoolingOk returns a tuple with the EnableConnectionPooling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigureYSQLFormData) GetEnableConnectionPoolingOk() (*bool, bool) {
	if o == nil || o.EnableConnectionPooling == nil {
		return nil, false
	}
	return o.EnableConnectionPooling, true
}

// HasEnableConnectionPooling returns a boolean if a field has been set.
func (o *ConfigureYSQLFormData) HasEnableConnectionPooling() bool {
	if o != nil && o.EnableConnectionPooling != nil {
		return true
	}

	return false
}

// SetEnableConnectionPooling gets a reference to the given bool and assigns it to the EnableConnectionPooling field.
func (o *ConfigureYSQLFormData) SetEnableConnectionPooling(v bool) {
	o.EnableConnectionPooling = &v
}

// GetEnableYSQL returns the EnableYSQL field value if set, zero value otherwise.
func (o *ConfigureYSQLFormData) GetEnableYSQL() bool {
	if o == nil || o.EnableYSQL == nil {
		var ret bool
		return ret
	}
	return *o.EnableYSQL
}

// GetEnableYSQLOk returns a tuple with the EnableYSQL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigureYSQLFormData) GetEnableYSQLOk() (*bool, bool) {
	if o == nil || o.EnableYSQL == nil {
		return nil, false
	}
	return o.EnableYSQL, true
}

// HasEnableYSQL returns a boolean if a field has been set.
func (o *ConfigureYSQLFormData) HasEnableYSQL() bool {
	if o != nil && o.EnableYSQL != nil {
		return true
	}

	return false
}

// SetEnableYSQL gets a reference to the given bool and assigns it to the EnableYSQL field.
func (o *ConfigureYSQLFormData) SetEnableYSQL(v bool) {
	o.EnableYSQL = &v
}

// GetEnableYSQLAuth returns the EnableYSQLAuth field value if set, zero value otherwise.
func (o *ConfigureYSQLFormData) GetEnableYSQLAuth() bool {
	if o == nil || o.EnableYSQLAuth == nil {
		var ret bool
		return ret
	}
	return *o.EnableYSQLAuth
}

// GetEnableYSQLAuthOk returns a tuple with the EnableYSQLAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigureYSQLFormData) GetEnableYSQLAuthOk() (*bool, bool) {
	if o == nil || o.EnableYSQLAuth == nil {
		return nil, false
	}
	return o.EnableYSQLAuth, true
}

// HasEnableYSQLAuth returns a boolean if a field has been set.
func (o *ConfigureYSQLFormData) HasEnableYSQLAuth() bool {
	if o != nil && o.EnableYSQLAuth != nil {
		return true
	}

	return false
}

// SetEnableYSQLAuth gets a reference to the given bool and assigns it to the EnableYSQLAuth field.
func (o *ConfigureYSQLFormData) SetEnableYSQLAuth(v bool) {
	o.EnableYSQLAuth = &v
}

// GetYsqlPassword returns the YsqlPassword field value if set, zero value otherwise.
func (o *ConfigureYSQLFormData) GetYsqlPassword() string {
	if o == nil || o.YsqlPassword == nil {
		var ret string
		return ret
	}
	return *o.YsqlPassword
}

// GetYsqlPasswordOk returns a tuple with the YsqlPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigureYSQLFormData) GetYsqlPasswordOk() (*string, bool) {
	if o == nil || o.YsqlPassword == nil {
		return nil, false
	}
	return o.YsqlPassword, true
}

// HasYsqlPassword returns a boolean if a field has been set.
func (o *ConfigureYSQLFormData) HasYsqlPassword() bool {
	if o != nil && o.YsqlPassword != nil {
		return true
	}

	return false
}

// SetYsqlPassword gets a reference to the given string and assigns it to the YsqlPassword field.
func (o *ConfigureYSQLFormData) SetYsqlPassword(v string) {
	o.YsqlPassword = &v
}

func (o ConfigureYSQLFormData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CommunicationPorts != nil {
		toSerialize["communicationPorts"] = o.CommunicationPorts
	}
	if o.EnableConnectionPooling != nil {
		toSerialize["enableConnectionPooling"] = o.EnableConnectionPooling
	}
	if o.EnableYSQL != nil {
		toSerialize["enableYSQL"] = o.EnableYSQL
	}
	if o.EnableYSQLAuth != nil {
		toSerialize["enableYSQLAuth"] = o.EnableYSQLAuth
	}
	if o.YsqlPassword != nil {
		toSerialize["ysqlPassword"] = o.YsqlPassword
	}
	return json.Marshal(toSerialize)
}

type NullableConfigureYSQLFormData struct {
	value *ConfigureYSQLFormData
	isSet bool
}

func (v NullableConfigureYSQLFormData) Get() *ConfigureYSQLFormData {
	return v.value
}

func (v *NullableConfigureYSQLFormData) Set(val *ConfigureYSQLFormData) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigureYSQLFormData) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigureYSQLFormData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigureYSQLFormData(val *ConfigureYSQLFormData) *NullableConfigureYSQLFormData {
	return &NullableConfigureYSQLFormData{value: val, isSet: true}
}

func (v NullableConfigureYSQLFormData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigureYSQLFormData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


