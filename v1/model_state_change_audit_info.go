/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// StateChangeAuditInfo struct for StateChangeAuditInfo
type StateChangeAuditInfo struct {
	CustomerId string `json:"customerId"`
	FieldName string `json:"fieldName"`
	Id string `json:"id"`
	New bool `json:"new"`
	PreviousValue string `json:"previousValue"`
	Timestamp int64 `json:"timestamp"`
	UpdatedValue string `json:"updatedValue"`
	UserId string `json:"userId"`
}

// NewStateChangeAuditInfo instantiates a new StateChangeAuditInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStateChangeAuditInfo(customerId string, fieldName string, id string, new bool, previousValue string, timestamp int64, updatedValue string, userId string) *StateChangeAuditInfo {
	this := StateChangeAuditInfo{}
	this.CustomerId = customerId
	this.FieldName = fieldName
	this.Id = id
	this.New = new
	this.PreviousValue = previousValue
	this.Timestamp = timestamp
	this.UpdatedValue = updatedValue
	this.UserId = userId
	return &this
}

// NewStateChangeAuditInfoWithDefaults instantiates a new StateChangeAuditInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStateChangeAuditInfoWithDefaults() *StateChangeAuditInfo {
	this := StateChangeAuditInfo{}
	return &this
}

// GetCustomerId returns the CustomerId field value
func (o *StateChangeAuditInfo) GetCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
func (o *StateChangeAuditInfo) GetCustomerIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CustomerId, true
}

// SetCustomerId sets field value
func (o *StateChangeAuditInfo) SetCustomerId(v string) {
	o.CustomerId = v
}

// GetFieldName returns the FieldName field value
func (o *StateChangeAuditInfo) GetFieldName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FieldName
}

// GetFieldNameOk returns a tuple with the FieldName field value
// and a boolean to check if the value has been set.
func (o *StateChangeAuditInfo) GetFieldNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FieldName, true
}

// SetFieldName sets field value
func (o *StateChangeAuditInfo) SetFieldName(v string) {
	o.FieldName = v
}

// GetId returns the Id field value
func (o *StateChangeAuditInfo) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *StateChangeAuditInfo) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *StateChangeAuditInfo) SetId(v string) {
	o.Id = v
}

// GetNew returns the New field value
func (o *StateChangeAuditInfo) GetNew() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.New
}

// GetNewOk returns a tuple with the New field value
// and a boolean to check if the value has been set.
func (o *StateChangeAuditInfo) GetNewOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.New, true
}

// SetNew sets field value
func (o *StateChangeAuditInfo) SetNew(v bool) {
	o.New = v
}

// GetPreviousValue returns the PreviousValue field value
func (o *StateChangeAuditInfo) GetPreviousValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PreviousValue
}

// GetPreviousValueOk returns a tuple with the PreviousValue field value
// and a boolean to check if the value has been set.
func (o *StateChangeAuditInfo) GetPreviousValueOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PreviousValue, true
}

// SetPreviousValue sets field value
func (o *StateChangeAuditInfo) SetPreviousValue(v string) {
	o.PreviousValue = v
}

// GetTimestamp returns the Timestamp field value
func (o *StateChangeAuditInfo) GetTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *StateChangeAuditInfo) GetTimestampOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *StateChangeAuditInfo) SetTimestamp(v int64) {
	o.Timestamp = v
}

// GetUpdatedValue returns the UpdatedValue field value
func (o *StateChangeAuditInfo) GetUpdatedValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedValue
}

// GetUpdatedValueOk returns a tuple with the UpdatedValue field value
// and a boolean to check if the value has been set.
func (o *StateChangeAuditInfo) GetUpdatedValueOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UpdatedValue, true
}

// SetUpdatedValue sets field value
func (o *StateChangeAuditInfo) SetUpdatedValue(v string) {
	o.UpdatedValue = v
}

// GetUserId returns the UserId field value
func (o *StateChangeAuditInfo) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *StateChangeAuditInfo) GetUserIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *StateChangeAuditInfo) SetUserId(v string) {
	o.UserId = v
}

func (o StateChangeAuditInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["customerId"] = o.CustomerId
	}
	if true {
		toSerialize["fieldName"] = o.FieldName
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["new"] = o.New
	}
	if true {
		toSerialize["previousValue"] = o.PreviousValue
	}
	if true {
		toSerialize["timestamp"] = o.Timestamp
	}
	if true {
		toSerialize["updatedValue"] = o.UpdatedValue
	}
	if true {
		toSerialize["userId"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableStateChangeAuditInfo struct {
	value *StateChangeAuditInfo
	isSet bool
}

func (v NullableStateChangeAuditInfo) Get() *StateChangeAuditInfo {
	return v.value
}

func (v *NullableStateChangeAuditInfo) Set(val *StateChangeAuditInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableStateChangeAuditInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableStateChangeAuditInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStateChangeAuditInfo(val *StateChangeAuditInfo) *NullableStateChangeAuditInfo {
	return &NullableStateChangeAuditInfo{value: val, isSet: true}
}

func (v NullableStateChangeAuditInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStateChangeAuditInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


