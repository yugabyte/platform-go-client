/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// BackupRequestParams Backup table parameters
type BackupRequestParams struct {
	// Alter load balancer state
	AlterLoadBalancer *bool `json:"alterLoadBalancer,omitempty"`
	// Overrides whether you want to use YBC based or script based backup.
	BackupCategory *string `json:"backupCategory,omitempty"`
	// Backup type
	BackupType *string `json:"backupType,omitempty"`
	BackupUUID string `json:"backupUUID"`
	// UUID of the parent backup
	BaseBackupUUID *string `json:"baseBackupUUID,omitempty"`
	// Amazon Resource Name (ARN) of the CMK
	CmkArn *string `json:"cmkArn,omitempty"`
	CommunicationPorts *CommunicationPorts `json:"communicationPorts,omitempty"`
	CreatingUser Users `json:"creatingUser"`
	// Cron expression for a recurring backup
	CronExpression *string `json:"cronExpression,omitempty"`
	// Customer UUID
	CustomerUUID *string `json:"customerUUID,omitempty"`
	DeviceInfo *DeviceInfo `json:"deviceInfo,omitempty"`
	// Disable checksum
	DisableChecksum *bool `json:"disableChecksum,omitempty"`
	// Disable multipart upload
	DisableMultipart *bool `json:"disableMultipart,omitempty"`
	// Don't add -m flag during gsutil upload dir command
	DisableParallelism *bool `json:"disableParallelism,omitempty"`
	// Enable Point-In-Time-Restore capability on backup schedules with a limited restore window. Only applicable for YB-Controller enabled universes
	EnablePointInTimeRestore *bool `json:"enablePointInTimeRestore,omitempty"`
	// Is verbose logging enabled
	EnableVerboseLogs *bool `json:"enableVerboseLogs,omitempty"`
	EnableYbc *bool `json:"enableYbc,omitempty"`
	EncryptionAtRestConfig *EncryptionAtRestConfig `json:"encryptionAtRestConfig,omitempty"`
	// Error message
	ErrorString *string `json:"errorString,omitempty"`
	// Expected universe version
	ExpectedUniverseVersion *int32 `json:"expectedUniverseVersion,omitempty"`
	// Time unit for backup expiry time
	ExpiryTimeUnit *string `json:"expiryTimeUnit,omitempty"`
	ExtraDependencies *ExtraDependencies `json:"extraDependencies,omitempty"`
	// Time unit for user input schedule frequency
	FrequencyTimeUnit *string `json:"frequencyTimeUnit,omitempty"`
	// Should table backup errors be ignored
	IgnoreErrors *bool `json:"ignoreErrors,omitempty"`
	// Frequency of incremental backups
	IncrementalBackupFrequency *int64 `json:"incrementalBackupFrequency,omitempty"`
	// Time unit for user input incremental backup schedule frequency
	IncrementalBackupFrequencyTimeUnit *string `json:"incrementalBackupFrequencyTimeUnit,omitempty"`
	InstallYbc *bool `json:"installYbc,omitempty"`
	// Backup info
	KeyspaceTableList *[]KeyspaceTable `json:"keyspaceTableList,omitempty"`
	// KMS configuration UUID
	KmsConfigUUID *string `json:"kmsConfigUUID,omitempty"`
	// Minimum number of backups to retain for a particular backup schedule
	MinNumBackupsToRetain *int32 `json:"minNumBackupsToRetain,omitempty"`
	// Node details
	NodeDetailsSet *[]NodeDetails `json:"nodeDetailsSet,omitempty"`
	// Node exporter user
	NodeExporterUser *string `json:"nodeExporterUser,omitempty"`
	// Parallel DB backups
	ParallelDBBackups *int32 `json:"parallelDBBackups,omitempty"`
	// Number of concurrent commands to run on nodes over SSH
	Parallelism *int32 `json:"parallelism,omitempty"`
	PlatformUrl string `json:"platformUrl"`
	PlatformVersion string `json:"platformVersion"`
	// Previous task UUID of a retry
	PreviousTaskUUID *string `json:"previousTaskUUID,omitempty"`
	// Schedule Name
	ScheduleName *string `json:"scheduleName,omitempty"`
	// Schedule UUID
	ScheduleUUID *string `json:"scheduleUUID,omitempty"`
	// Frequency to run the backup, in milliseconds
	SchedulingFrequency *int64 `json:"schedulingFrequency,omitempty"`
	SleepAfterMasterRestartMillis int32 `json:"sleepAfterMasterRestartMillis"`
	SleepAfterTServerRestartMillis int32 `json:"sleepAfterTServerRestartMillis"`
	// The source universe's xcluster replication relationships
	SourceXClusterConfigs *[]string `json:"sourceXClusterConfigs,omitempty"`
	// Is SSE
	Sse *bool `json:"sse,omitempty"`
	// Storage configuration UUID
	StorageConfigUUID string `json:"storageConfigUUID"`
	// Take table by table backups
	TableByTableBackup *bool `json:"tableByTableBackup,omitempty"`
	// The target universe's xcluster replication relationships
	TargetXClusterConfigs *[]string `json:"targetXClusterConfigs,omitempty"`
	// Time before deleting the backup from storage, in milliseconds
	TimeBeforeDelete *int64 `json:"timeBeforeDelete,omitempty"`
	// Universe UUID
	UniverseUUID string `json:"universeUUID"`
	// Is tablespaces information included
	UseTablespaces *bool `json:"useTablespaces,omitempty"`
	// Previous software version
	YbPrevSoftwareVersion *string `json:"ybPrevSoftwareVersion,omitempty"`
	YbcInstalled *bool `json:"ybcInstalled,omitempty"`
	YbcSoftwareVersion *string `json:"ybcSoftwareVersion,omitempty"`
}

// NewBackupRequestParams instantiates a new BackupRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupRequestParams(backupUUID string, creatingUser Users, platformUrl string, platformVersion string, sleepAfterMasterRestartMillis int32, sleepAfterTServerRestartMillis int32, storageConfigUUID string, universeUUID string) *BackupRequestParams {
	this := BackupRequestParams{}
	this.BackupUUID = backupUUID
	this.CreatingUser = creatingUser
	this.PlatformUrl = platformUrl
	this.PlatformVersion = platformVersion
	this.SleepAfterMasterRestartMillis = sleepAfterMasterRestartMillis
	this.SleepAfterTServerRestartMillis = sleepAfterTServerRestartMillis
	this.StorageConfigUUID = storageConfigUUID
	this.UniverseUUID = universeUUID
	return &this
}

// NewBackupRequestParamsWithDefaults instantiates a new BackupRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupRequestParamsWithDefaults() *BackupRequestParams {
	this := BackupRequestParams{}
	return &this
}

// GetAlterLoadBalancer returns the AlterLoadBalancer field value if set, zero value otherwise.
func (o *BackupRequestParams) GetAlterLoadBalancer() bool {
	if o == nil || o.AlterLoadBalancer == nil {
		var ret bool
		return ret
	}
	return *o.AlterLoadBalancer
}

// GetAlterLoadBalancerOk returns a tuple with the AlterLoadBalancer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetAlterLoadBalancerOk() (*bool, bool) {
	if o == nil || o.AlterLoadBalancer == nil {
		return nil, false
	}
	return o.AlterLoadBalancer, true
}

// HasAlterLoadBalancer returns a boolean if a field has been set.
func (o *BackupRequestParams) HasAlterLoadBalancer() bool {
	if o != nil && o.AlterLoadBalancer != nil {
		return true
	}

	return false
}

// SetAlterLoadBalancer gets a reference to the given bool and assigns it to the AlterLoadBalancer field.
func (o *BackupRequestParams) SetAlterLoadBalancer(v bool) {
	o.AlterLoadBalancer = &v
}

// GetBackupCategory returns the BackupCategory field value if set, zero value otherwise.
func (o *BackupRequestParams) GetBackupCategory() string {
	if o == nil || o.BackupCategory == nil {
		var ret string
		return ret
	}
	return *o.BackupCategory
}

// GetBackupCategoryOk returns a tuple with the BackupCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetBackupCategoryOk() (*string, bool) {
	if o == nil || o.BackupCategory == nil {
		return nil, false
	}
	return o.BackupCategory, true
}

// HasBackupCategory returns a boolean if a field has been set.
func (o *BackupRequestParams) HasBackupCategory() bool {
	if o != nil && o.BackupCategory != nil {
		return true
	}

	return false
}

// SetBackupCategory gets a reference to the given string and assigns it to the BackupCategory field.
func (o *BackupRequestParams) SetBackupCategory(v string) {
	o.BackupCategory = &v
}

// GetBackupType returns the BackupType field value if set, zero value otherwise.
func (o *BackupRequestParams) GetBackupType() string {
	if o == nil || o.BackupType == nil {
		var ret string
		return ret
	}
	return *o.BackupType
}

// GetBackupTypeOk returns a tuple with the BackupType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetBackupTypeOk() (*string, bool) {
	if o == nil || o.BackupType == nil {
		return nil, false
	}
	return o.BackupType, true
}

// HasBackupType returns a boolean if a field has been set.
func (o *BackupRequestParams) HasBackupType() bool {
	if o != nil && o.BackupType != nil {
		return true
	}

	return false
}

// SetBackupType gets a reference to the given string and assigns it to the BackupType field.
func (o *BackupRequestParams) SetBackupType(v string) {
	o.BackupType = &v
}

// GetBackupUUID returns the BackupUUID field value
func (o *BackupRequestParams) GetBackupUUID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackupUUID
}

// GetBackupUUIDOk returns a tuple with the BackupUUID field value
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetBackupUUIDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BackupUUID, true
}

// SetBackupUUID sets field value
func (o *BackupRequestParams) SetBackupUUID(v string) {
	o.BackupUUID = v
}

// GetBaseBackupUUID returns the BaseBackupUUID field value if set, zero value otherwise.
func (o *BackupRequestParams) GetBaseBackupUUID() string {
	if o == nil || o.BaseBackupUUID == nil {
		var ret string
		return ret
	}
	return *o.BaseBackupUUID
}

// GetBaseBackupUUIDOk returns a tuple with the BaseBackupUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetBaseBackupUUIDOk() (*string, bool) {
	if o == nil || o.BaseBackupUUID == nil {
		return nil, false
	}
	return o.BaseBackupUUID, true
}

// HasBaseBackupUUID returns a boolean if a field has been set.
func (o *BackupRequestParams) HasBaseBackupUUID() bool {
	if o != nil && o.BaseBackupUUID != nil {
		return true
	}

	return false
}

// SetBaseBackupUUID gets a reference to the given string and assigns it to the BaseBackupUUID field.
func (o *BackupRequestParams) SetBaseBackupUUID(v string) {
	o.BaseBackupUUID = &v
}

// GetCmkArn returns the CmkArn field value if set, zero value otherwise.
func (o *BackupRequestParams) GetCmkArn() string {
	if o == nil || o.CmkArn == nil {
		var ret string
		return ret
	}
	return *o.CmkArn
}

// GetCmkArnOk returns a tuple with the CmkArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetCmkArnOk() (*string, bool) {
	if o == nil || o.CmkArn == nil {
		return nil, false
	}
	return o.CmkArn, true
}

// HasCmkArn returns a boolean if a field has been set.
func (o *BackupRequestParams) HasCmkArn() bool {
	if o != nil && o.CmkArn != nil {
		return true
	}

	return false
}

// SetCmkArn gets a reference to the given string and assigns it to the CmkArn field.
func (o *BackupRequestParams) SetCmkArn(v string) {
	o.CmkArn = &v
}

// GetCommunicationPorts returns the CommunicationPorts field value if set, zero value otherwise.
func (o *BackupRequestParams) GetCommunicationPorts() CommunicationPorts {
	if o == nil || o.CommunicationPorts == nil {
		var ret CommunicationPorts
		return ret
	}
	return *o.CommunicationPorts
}

// GetCommunicationPortsOk returns a tuple with the CommunicationPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetCommunicationPortsOk() (*CommunicationPorts, bool) {
	if o == nil || o.CommunicationPorts == nil {
		return nil, false
	}
	return o.CommunicationPorts, true
}

// HasCommunicationPorts returns a boolean if a field has been set.
func (o *BackupRequestParams) HasCommunicationPorts() bool {
	if o != nil && o.CommunicationPorts != nil {
		return true
	}

	return false
}

// SetCommunicationPorts gets a reference to the given CommunicationPorts and assigns it to the CommunicationPorts field.
func (o *BackupRequestParams) SetCommunicationPorts(v CommunicationPorts) {
	o.CommunicationPorts = &v
}

// GetCreatingUser returns the CreatingUser field value
func (o *BackupRequestParams) GetCreatingUser() Users {
	if o == nil {
		var ret Users
		return ret
	}

	return o.CreatingUser
}

// GetCreatingUserOk returns a tuple with the CreatingUser field value
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetCreatingUserOk() (*Users, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreatingUser, true
}

// SetCreatingUser sets field value
func (o *BackupRequestParams) SetCreatingUser(v Users) {
	o.CreatingUser = v
}

// GetCronExpression returns the CronExpression field value if set, zero value otherwise.
func (o *BackupRequestParams) GetCronExpression() string {
	if o == nil || o.CronExpression == nil {
		var ret string
		return ret
	}
	return *o.CronExpression
}

// GetCronExpressionOk returns a tuple with the CronExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetCronExpressionOk() (*string, bool) {
	if o == nil || o.CronExpression == nil {
		return nil, false
	}
	return o.CronExpression, true
}

// HasCronExpression returns a boolean if a field has been set.
func (o *BackupRequestParams) HasCronExpression() bool {
	if o != nil && o.CronExpression != nil {
		return true
	}

	return false
}

// SetCronExpression gets a reference to the given string and assigns it to the CronExpression field.
func (o *BackupRequestParams) SetCronExpression(v string) {
	o.CronExpression = &v
}

// GetCustomerUUID returns the CustomerUUID field value if set, zero value otherwise.
func (o *BackupRequestParams) GetCustomerUUID() string {
	if o == nil || o.CustomerUUID == nil {
		var ret string
		return ret
	}
	return *o.CustomerUUID
}

// GetCustomerUUIDOk returns a tuple with the CustomerUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetCustomerUUIDOk() (*string, bool) {
	if o == nil || o.CustomerUUID == nil {
		return nil, false
	}
	return o.CustomerUUID, true
}

// HasCustomerUUID returns a boolean if a field has been set.
func (o *BackupRequestParams) HasCustomerUUID() bool {
	if o != nil && o.CustomerUUID != nil {
		return true
	}

	return false
}

// SetCustomerUUID gets a reference to the given string and assigns it to the CustomerUUID field.
func (o *BackupRequestParams) SetCustomerUUID(v string) {
	o.CustomerUUID = &v
}

// GetDeviceInfo returns the DeviceInfo field value if set, zero value otherwise.
func (o *BackupRequestParams) GetDeviceInfo() DeviceInfo {
	if o == nil || o.DeviceInfo == nil {
		var ret DeviceInfo
		return ret
	}
	return *o.DeviceInfo
}

// GetDeviceInfoOk returns a tuple with the DeviceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetDeviceInfoOk() (*DeviceInfo, bool) {
	if o == nil || o.DeviceInfo == nil {
		return nil, false
	}
	return o.DeviceInfo, true
}

// HasDeviceInfo returns a boolean if a field has been set.
func (o *BackupRequestParams) HasDeviceInfo() bool {
	if o != nil && o.DeviceInfo != nil {
		return true
	}

	return false
}

// SetDeviceInfo gets a reference to the given DeviceInfo and assigns it to the DeviceInfo field.
func (o *BackupRequestParams) SetDeviceInfo(v DeviceInfo) {
	o.DeviceInfo = &v
}

// GetDisableChecksum returns the DisableChecksum field value if set, zero value otherwise.
func (o *BackupRequestParams) GetDisableChecksum() bool {
	if o == nil || o.DisableChecksum == nil {
		var ret bool
		return ret
	}
	return *o.DisableChecksum
}

// GetDisableChecksumOk returns a tuple with the DisableChecksum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetDisableChecksumOk() (*bool, bool) {
	if o == nil || o.DisableChecksum == nil {
		return nil, false
	}
	return o.DisableChecksum, true
}

// HasDisableChecksum returns a boolean if a field has been set.
func (o *BackupRequestParams) HasDisableChecksum() bool {
	if o != nil && o.DisableChecksum != nil {
		return true
	}

	return false
}

// SetDisableChecksum gets a reference to the given bool and assigns it to the DisableChecksum field.
func (o *BackupRequestParams) SetDisableChecksum(v bool) {
	o.DisableChecksum = &v
}

// GetDisableMultipart returns the DisableMultipart field value if set, zero value otherwise.
func (o *BackupRequestParams) GetDisableMultipart() bool {
	if o == nil || o.DisableMultipart == nil {
		var ret bool
		return ret
	}
	return *o.DisableMultipart
}

// GetDisableMultipartOk returns a tuple with the DisableMultipart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetDisableMultipartOk() (*bool, bool) {
	if o == nil || o.DisableMultipart == nil {
		return nil, false
	}
	return o.DisableMultipart, true
}

// HasDisableMultipart returns a boolean if a field has been set.
func (o *BackupRequestParams) HasDisableMultipart() bool {
	if o != nil && o.DisableMultipart != nil {
		return true
	}

	return false
}

// SetDisableMultipart gets a reference to the given bool and assigns it to the DisableMultipart field.
func (o *BackupRequestParams) SetDisableMultipart(v bool) {
	o.DisableMultipart = &v
}

// GetDisableParallelism returns the DisableParallelism field value if set, zero value otherwise.
func (o *BackupRequestParams) GetDisableParallelism() bool {
	if o == nil || o.DisableParallelism == nil {
		var ret bool
		return ret
	}
	return *o.DisableParallelism
}

// GetDisableParallelismOk returns a tuple with the DisableParallelism field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetDisableParallelismOk() (*bool, bool) {
	if o == nil || o.DisableParallelism == nil {
		return nil, false
	}
	return o.DisableParallelism, true
}

// HasDisableParallelism returns a boolean if a field has been set.
func (o *BackupRequestParams) HasDisableParallelism() bool {
	if o != nil && o.DisableParallelism != nil {
		return true
	}

	return false
}

// SetDisableParallelism gets a reference to the given bool and assigns it to the DisableParallelism field.
func (o *BackupRequestParams) SetDisableParallelism(v bool) {
	o.DisableParallelism = &v
}

// GetEnablePointInTimeRestore returns the EnablePointInTimeRestore field value if set, zero value otherwise.
func (o *BackupRequestParams) GetEnablePointInTimeRestore() bool {
	if o == nil || o.EnablePointInTimeRestore == nil {
		var ret bool
		return ret
	}
	return *o.EnablePointInTimeRestore
}

// GetEnablePointInTimeRestoreOk returns a tuple with the EnablePointInTimeRestore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetEnablePointInTimeRestoreOk() (*bool, bool) {
	if o == nil || o.EnablePointInTimeRestore == nil {
		return nil, false
	}
	return o.EnablePointInTimeRestore, true
}

// HasEnablePointInTimeRestore returns a boolean if a field has been set.
func (o *BackupRequestParams) HasEnablePointInTimeRestore() bool {
	if o != nil && o.EnablePointInTimeRestore != nil {
		return true
	}

	return false
}

// SetEnablePointInTimeRestore gets a reference to the given bool and assigns it to the EnablePointInTimeRestore field.
func (o *BackupRequestParams) SetEnablePointInTimeRestore(v bool) {
	o.EnablePointInTimeRestore = &v
}

// GetEnableVerboseLogs returns the EnableVerboseLogs field value if set, zero value otherwise.
func (o *BackupRequestParams) GetEnableVerboseLogs() bool {
	if o == nil || o.EnableVerboseLogs == nil {
		var ret bool
		return ret
	}
	return *o.EnableVerboseLogs
}

// GetEnableVerboseLogsOk returns a tuple with the EnableVerboseLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetEnableVerboseLogsOk() (*bool, bool) {
	if o == nil || o.EnableVerboseLogs == nil {
		return nil, false
	}
	return o.EnableVerboseLogs, true
}

// HasEnableVerboseLogs returns a boolean if a field has been set.
func (o *BackupRequestParams) HasEnableVerboseLogs() bool {
	if o != nil && o.EnableVerboseLogs != nil {
		return true
	}

	return false
}

// SetEnableVerboseLogs gets a reference to the given bool and assigns it to the EnableVerboseLogs field.
func (o *BackupRequestParams) SetEnableVerboseLogs(v bool) {
	o.EnableVerboseLogs = &v
}

// GetEnableYbc returns the EnableYbc field value if set, zero value otherwise.
func (o *BackupRequestParams) GetEnableYbc() bool {
	if o == nil || o.EnableYbc == nil {
		var ret bool
		return ret
	}
	return *o.EnableYbc
}

// GetEnableYbcOk returns a tuple with the EnableYbc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetEnableYbcOk() (*bool, bool) {
	if o == nil || o.EnableYbc == nil {
		return nil, false
	}
	return o.EnableYbc, true
}

// HasEnableYbc returns a boolean if a field has been set.
func (o *BackupRequestParams) HasEnableYbc() bool {
	if o != nil && o.EnableYbc != nil {
		return true
	}

	return false
}

// SetEnableYbc gets a reference to the given bool and assigns it to the EnableYbc field.
func (o *BackupRequestParams) SetEnableYbc(v bool) {
	o.EnableYbc = &v
}

// GetEncryptionAtRestConfig returns the EncryptionAtRestConfig field value if set, zero value otherwise.
func (o *BackupRequestParams) GetEncryptionAtRestConfig() EncryptionAtRestConfig {
	if o == nil || o.EncryptionAtRestConfig == nil {
		var ret EncryptionAtRestConfig
		return ret
	}
	return *o.EncryptionAtRestConfig
}

// GetEncryptionAtRestConfigOk returns a tuple with the EncryptionAtRestConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetEncryptionAtRestConfigOk() (*EncryptionAtRestConfig, bool) {
	if o == nil || o.EncryptionAtRestConfig == nil {
		return nil, false
	}
	return o.EncryptionAtRestConfig, true
}

// HasEncryptionAtRestConfig returns a boolean if a field has been set.
func (o *BackupRequestParams) HasEncryptionAtRestConfig() bool {
	if o != nil && o.EncryptionAtRestConfig != nil {
		return true
	}

	return false
}

// SetEncryptionAtRestConfig gets a reference to the given EncryptionAtRestConfig and assigns it to the EncryptionAtRestConfig field.
func (o *BackupRequestParams) SetEncryptionAtRestConfig(v EncryptionAtRestConfig) {
	o.EncryptionAtRestConfig = &v
}

// GetErrorString returns the ErrorString field value if set, zero value otherwise.
func (o *BackupRequestParams) GetErrorString() string {
	if o == nil || o.ErrorString == nil {
		var ret string
		return ret
	}
	return *o.ErrorString
}

// GetErrorStringOk returns a tuple with the ErrorString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetErrorStringOk() (*string, bool) {
	if o == nil || o.ErrorString == nil {
		return nil, false
	}
	return o.ErrorString, true
}

// HasErrorString returns a boolean if a field has been set.
func (o *BackupRequestParams) HasErrorString() bool {
	if o != nil && o.ErrorString != nil {
		return true
	}

	return false
}

// SetErrorString gets a reference to the given string and assigns it to the ErrorString field.
func (o *BackupRequestParams) SetErrorString(v string) {
	o.ErrorString = &v
}

// GetExpectedUniverseVersion returns the ExpectedUniverseVersion field value if set, zero value otherwise.
func (o *BackupRequestParams) GetExpectedUniverseVersion() int32 {
	if o == nil || o.ExpectedUniverseVersion == nil {
		var ret int32
		return ret
	}
	return *o.ExpectedUniverseVersion
}

// GetExpectedUniverseVersionOk returns a tuple with the ExpectedUniverseVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetExpectedUniverseVersionOk() (*int32, bool) {
	if o == nil || o.ExpectedUniverseVersion == nil {
		return nil, false
	}
	return o.ExpectedUniverseVersion, true
}

// HasExpectedUniverseVersion returns a boolean if a field has been set.
func (o *BackupRequestParams) HasExpectedUniverseVersion() bool {
	if o != nil && o.ExpectedUniverseVersion != nil {
		return true
	}

	return false
}

// SetExpectedUniverseVersion gets a reference to the given int32 and assigns it to the ExpectedUniverseVersion field.
func (o *BackupRequestParams) SetExpectedUniverseVersion(v int32) {
	o.ExpectedUniverseVersion = &v
}

// GetExpiryTimeUnit returns the ExpiryTimeUnit field value if set, zero value otherwise.
func (o *BackupRequestParams) GetExpiryTimeUnit() string {
	if o == nil || o.ExpiryTimeUnit == nil {
		var ret string
		return ret
	}
	return *o.ExpiryTimeUnit
}

// GetExpiryTimeUnitOk returns a tuple with the ExpiryTimeUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetExpiryTimeUnitOk() (*string, bool) {
	if o == nil || o.ExpiryTimeUnit == nil {
		return nil, false
	}
	return o.ExpiryTimeUnit, true
}

// HasExpiryTimeUnit returns a boolean if a field has been set.
func (o *BackupRequestParams) HasExpiryTimeUnit() bool {
	if o != nil && o.ExpiryTimeUnit != nil {
		return true
	}

	return false
}

// SetExpiryTimeUnit gets a reference to the given string and assigns it to the ExpiryTimeUnit field.
func (o *BackupRequestParams) SetExpiryTimeUnit(v string) {
	o.ExpiryTimeUnit = &v
}

// GetExtraDependencies returns the ExtraDependencies field value if set, zero value otherwise.
func (o *BackupRequestParams) GetExtraDependencies() ExtraDependencies {
	if o == nil || o.ExtraDependencies == nil {
		var ret ExtraDependencies
		return ret
	}
	return *o.ExtraDependencies
}

// GetExtraDependenciesOk returns a tuple with the ExtraDependencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetExtraDependenciesOk() (*ExtraDependencies, bool) {
	if o == nil || o.ExtraDependencies == nil {
		return nil, false
	}
	return o.ExtraDependencies, true
}

// HasExtraDependencies returns a boolean if a field has been set.
func (o *BackupRequestParams) HasExtraDependencies() bool {
	if o != nil && o.ExtraDependencies != nil {
		return true
	}

	return false
}

// SetExtraDependencies gets a reference to the given ExtraDependencies and assigns it to the ExtraDependencies field.
func (o *BackupRequestParams) SetExtraDependencies(v ExtraDependencies) {
	o.ExtraDependencies = &v
}

// GetFrequencyTimeUnit returns the FrequencyTimeUnit field value if set, zero value otherwise.
func (o *BackupRequestParams) GetFrequencyTimeUnit() string {
	if o == nil || o.FrequencyTimeUnit == nil {
		var ret string
		return ret
	}
	return *o.FrequencyTimeUnit
}

// GetFrequencyTimeUnitOk returns a tuple with the FrequencyTimeUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetFrequencyTimeUnitOk() (*string, bool) {
	if o == nil || o.FrequencyTimeUnit == nil {
		return nil, false
	}
	return o.FrequencyTimeUnit, true
}

// HasFrequencyTimeUnit returns a boolean if a field has been set.
func (o *BackupRequestParams) HasFrequencyTimeUnit() bool {
	if o != nil && o.FrequencyTimeUnit != nil {
		return true
	}

	return false
}

// SetFrequencyTimeUnit gets a reference to the given string and assigns it to the FrequencyTimeUnit field.
func (o *BackupRequestParams) SetFrequencyTimeUnit(v string) {
	o.FrequencyTimeUnit = &v
}

// GetIgnoreErrors returns the IgnoreErrors field value if set, zero value otherwise.
func (o *BackupRequestParams) GetIgnoreErrors() bool {
	if o == nil || o.IgnoreErrors == nil {
		var ret bool
		return ret
	}
	return *o.IgnoreErrors
}

// GetIgnoreErrorsOk returns a tuple with the IgnoreErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetIgnoreErrorsOk() (*bool, bool) {
	if o == nil || o.IgnoreErrors == nil {
		return nil, false
	}
	return o.IgnoreErrors, true
}

// HasIgnoreErrors returns a boolean if a field has been set.
func (o *BackupRequestParams) HasIgnoreErrors() bool {
	if o != nil && o.IgnoreErrors != nil {
		return true
	}

	return false
}

// SetIgnoreErrors gets a reference to the given bool and assigns it to the IgnoreErrors field.
func (o *BackupRequestParams) SetIgnoreErrors(v bool) {
	o.IgnoreErrors = &v
}

// GetIncrementalBackupFrequency returns the IncrementalBackupFrequency field value if set, zero value otherwise.
func (o *BackupRequestParams) GetIncrementalBackupFrequency() int64 {
	if o == nil || o.IncrementalBackupFrequency == nil {
		var ret int64
		return ret
	}
	return *o.IncrementalBackupFrequency
}

// GetIncrementalBackupFrequencyOk returns a tuple with the IncrementalBackupFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetIncrementalBackupFrequencyOk() (*int64, bool) {
	if o == nil || o.IncrementalBackupFrequency == nil {
		return nil, false
	}
	return o.IncrementalBackupFrequency, true
}

// HasIncrementalBackupFrequency returns a boolean if a field has been set.
func (o *BackupRequestParams) HasIncrementalBackupFrequency() bool {
	if o != nil && o.IncrementalBackupFrequency != nil {
		return true
	}

	return false
}

// SetIncrementalBackupFrequency gets a reference to the given int64 and assigns it to the IncrementalBackupFrequency field.
func (o *BackupRequestParams) SetIncrementalBackupFrequency(v int64) {
	o.IncrementalBackupFrequency = &v
}

// GetIncrementalBackupFrequencyTimeUnit returns the IncrementalBackupFrequencyTimeUnit field value if set, zero value otherwise.
func (o *BackupRequestParams) GetIncrementalBackupFrequencyTimeUnit() string {
	if o == nil || o.IncrementalBackupFrequencyTimeUnit == nil {
		var ret string
		return ret
	}
	return *o.IncrementalBackupFrequencyTimeUnit
}

// GetIncrementalBackupFrequencyTimeUnitOk returns a tuple with the IncrementalBackupFrequencyTimeUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetIncrementalBackupFrequencyTimeUnitOk() (*string, bool) {
	if o == nil || o.IncrementalBackupFrequencyTimeUnit == nil {
		return nil, false
	}
	return o.IncrementalBackupFrequencyTimeUnit, true
}

// HasIncrementalBackupFrequencyTimeUnit returns a boolean if a field has been set.
func (o *BackupRequestParams) HasIncrementalBackupFrequencyTimeUnit() bool {
	if o != nil && o.IncrementalBackupFrequencyTimeUnit != nil {
		return true
	}

	return false
}

// SetIncrementalBackupFrequencyTimeUnit gets a reference to the given string and assigns it to the IncrementalBackupFrequencyTimeUnit field.
func (o *BackupRequestParams) SetIncrementalBackupFrequencyTimeUnit(v string) {
	o.IncrementalBackupFrequencyTimeUnit = &v
}

// GetInstallYbc returns the InstallYbc field value if set, zero value otherwise.
func (o *BackupRequestParams) GetInstallYbc() bool {
	if o == nil || o.InstallYbc == nil {
		var ret bool
		return ret
	}
	return *o.InstallYbc
}

// GetInstallYbcOk returns a tuple with the InstallYbc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetInstallYbcOk() (*bool, bool) {
	if o == nil || o.InstallYbc == nil {
		return nil, false
	}
	return o.InstallYbc, true
}

// HasInstallYbc returns a boolean if a field has been set.
func (o *BackupRequestParams) HasInstallYbc() bool {
	if o != nil && o.InstallYbc != nil {
		return true
	}

	return false
}

// SetInstallYbc gets a reference to the given bool and assigns it to the InstallYbc field.
func (o *BackupRequestParams) SetInstallYbc(v bool) {
	o.InstallYbc = &v
}

// GetKeyspaceTableList returns the KeyspaceTableList field value if set, zero value otherwise.
func (o *BackupRequestParams) GetKeyspaceTableList() []KeyspaceTable {
	if o == nil || o.KeyspaceTableList == nil {
		var ret []KeyspaceTable
		return ret
	}
	return *o.KeyspaceTableList
}

// GetKeyspaceTableListOk returns a tuple with the KeyspaceTableList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetKeyspaceTableListOk() (*[]KeyspaceTable, bool) {
	if o == nil || o.KeyspaceTableList == nil {
		return nil, false
	}
	return o.KeyspaceTableList, true
}

// HasKeyspaceTableList returns a boolean if a field has been set.
func (o *BackupRequestParams) HasKeyspaceTableList() bool {
	if o != nil && o.KeyspaceTableList != nil {
		return true
	}

	return false
}

// SetKeyspaceTableList gets a reference to the given []KeyspaceTable and assigns it to the KeyspaceTableList field.
func (o *BackupRequestParams) SetKeyspaceTableList(v []KeyspaceTable) {
	o.KeyspaceTableList = &v
}

// GetKmsConfigUUID returns the KmsConfigUUID field value if set, zero value otherwise.
func (o *BackupRequestParams) GetKmsConfigUUID() string {
	if o == nil || o.KmsConfigUUID == nil {
		var ret string
		return ret
	}
	return *o.KmsConfigUUID
}

// GetKmsConfigUUIDOk returns a tuple with the KmsConfigUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetKmsConfigUUIDOk() (*string, bool) {
	if o == nil || o.KmsConfigUUID == nil {
		return nil, false
	}
	return o.KmsConfigUUID, true
}

// HasKmsConfigUUID returns a boolean if a field has been set.
func (o *BackupRequestParams) HasKmsConfigUUID() bool {
	if o != nil && o.KmsConfigUUID != nil {
		return true
	}

	return false
}

// SetKmsConfigUUID gets a reference to the given string and assigns it to the KmsConfigUUID field.
func (o *BackupRequestParams) SetKmsConfigUUID(v string) {
	o.KmsConfigUUID = &v
}

// GetMinNumBackupsToRetain returns the MinNumBackupsToRetain field value if set, zero value otherwise.
func (o *BackupRequestParams) GetMinNumBackupsToRetain() int32 {
	if o == nil || o.MinNumBackupsToRetain == nil {
		var ret int32
		return ret
	}
	return *o.MinNumBackupsToRetain
}

// GetMinNumBackupsToRetainOk returns a tuple with the MinNumBackupsToRetain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetMinNumBackupsToRetainOk() (*int32, bool) {
	if o == nil || o.MinNumBackupsToRetain == nil {
		return nil, false
	}
	return o.MinNumBackupsToRetain, true
}

// HasMinNumBackupsToRetain returns a boolean if a field has been set.
func (o *BackupRequestParams) HasMinNumBackupsToRetain() bool {
	if o != nil && o.MinNumBackupsToRetain != nil {
		return true
	}

	return false
}

// SetMinNumBackupsToRetain gets a reference to the given int32 and assigns it to the MinNumBackupsToRetain field.
func (o *BackupRequestParams) SetMinNumBackupsToRetain(v int32) {
	o.MinNumBackupsToRetain = &v
}

// GetNodeDetailsSet returns the NodeDetailsSet field value if set, zero value otherwise.
func (o *BackupRequestParams) GetNodeDetailsSet() []NodeDetails {
	if o == nil || o.NodeDetailsSet == nil {
		var ret []NodeDetails
		return ret
	}
	return *o.NodeDetailsSet
}

// GetNodeDetailsSetOk returns a tuple with the NodeDetailsSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetNodeDetailsSetOk() (*[]NodeDetails, bool) {
	if o == nil || o.NodeDetailsSet == nil {
		return nil, false
	}
	return o.NodeDetailsSet, true
}

// HasNodeDetailsSet returns a boolean if a field has been set.
func (o *BackupRequestParams) HasNodeDetailsSet() bool {
	if o != nil && o.NodeDetailsSet != nil {
		return true
	}

	return false
}

// SetNodeDetailsSet gets a reference to the given []NodeDetails and assigns it to the NodeDetailsSet field.
func (o *BackupRequestParams) SetNodeDetailsSet(v []NodeDetails) {
	o.NodeDetailsSet = &v
}

// GetNodeExporterUser returns the NodeExporterUser field value if set, zero value otherwise.
func (o *BackupRequestParams) GetNodeExporterUser() string {
	if o == nil || o.NodeExporterUser == nil {
		var ret string
		return ret
	}
	return *o.NodeExporterUser
}

// GetNodeExporterUserOk returns a tuple with the NodeExporterUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetNodeExporterUserOk() (*string, bool) {
	if o == nil || o.NodeExporterUser == nil {
		return nil, false
	}
	return o.NodeExporterUser, true
}

// HasNodeExporterUser returns a boolean if a field has been set.
func (o *BackupRequestParams) HasNodeExporterUser() bool {
	if o != nil && o.NodeExporterUser != nil {
		return true
	}

	return false
}

// SetNodeExporterUser gets a reference to the given string and assigns it to the NodeExporterUser field.
func (o *BackupRequestParams) SetNodeExporterUser(v string) {
	o.NodeExporterUser = &v
}

// GetParallelDBBackups returns the ParallelDBBackups field value if set, zero value otherwise.
func (o *BackupRequestParams) GetParallelDBBackups() int32 {
	if o == nil || o.ParallelDBBackups == nil {
		var ret int32
		return ret
	}
	return *o.ParallelDBBackups
}

// GetParallelDBBackupsOk returns a tuple with the ParallelDBBackups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetParallelDBBackupsOk() (*int32, bool) {
	if o == nil || o.ParallelDBBackups == nil {
		return nil, false
	}
	return o.ParallelDBBackups, true
}

// HasParallelDBBackups returns a boolean if a field has been set.
func (o *BackupRequestParams) HasParallelDBBackups() bool {
	if o != nil && o.ParallelDBBackups != nil {
		return true
	}

	return false
}

// SetParallelDBBackups gets a reference to the given int32 and assigns it to the ParallelDBBackups field.
func (o *BackupRequestParams) SetParallelDBBackups(v int32) {
	o.ParallelDBBackups = &v
}

// GetParallelism returns the Parallelism field value if set, zero value otherwise.
func (o *BackupRequestParams) GetParallelism() int32 {
	if o == nil || o.Parallelism == nil {
		var ret int32
		return ret
	}
	return *o.Parallelism
}

// GetParallelismOk returns a tuple with the Parallelism field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetParallelismOk() (*int32, bool) {
	if o == nil || o.Parallelism == nil {
		return nil, false
	}
	return o.Parallelism, true
}

// HasParallelism returns a boolean if a field has been set.
func (o *BackupRequestParams) HasParallelism() bool {
	if o != nil && o.Parallelism != nil {
		return true
	}

	return false
}

// SetParallelism gets a reference to the given int32 and assigns it to the Parallelism field.
func (o *BackupRequestParams) SetParallelism(v int32) {
	o.Parallelism = &v
}

// GetPlatformUrl returns the PlatformUrl field value
func (o *BackupRequestParams) GetPlatformUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlatformUrl
}

// GetPlatformUrlOk returns a tuple with the PlatformUrl field value
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetPlatformUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PlatformUrl, true
}

// SetPlatformUrl sets field value
func (o *BackupRequestParams) SetPlatformUrl(v string) {
	o.PlatformUrl = v
}

// GetPlatformVersion returns the PlatformVersion field value
func (o *BackupRequestParams) GetPlatformVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlatformVersion
}

// GetPlatformVersionOk returns a tuple with the PlatformVersion field value
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetPlatformVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PlatformVersion, true
}

// SetPlatformVersion sets field value
func (o *BackupRequestParams) SetPlatformVersion(v string) {
	o.PlatformVersion = v
}

// GetPreviousTaskUUID returns the PreviousTaskUUID field value if set, zero value otherwise.
func (o *BackupRequestParams) GetPreviousTaskUUID() string {
	if o == nil || o.PreviousTaskUUID == nil {
		var ret string
		return ret
	}
	return *o.PreviousTaskUUID
}

// GetPreviousTaskUUIDOk returns a tuple with the PreviousTaskUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetPreviousTaskUUIDOk() (*string, bool) {
	if o == nil || o.PreviousTaskUUID == nil {
		return nil, false
	}
	return o.PreviousTaskUUID, true
}

// HasPreviousTaskUUID returns a boolean if a field has been set.
func (o *BackupRequestParams) HasPreviousTaskUUID() bool {
	if o != nil && o.PreviousTaskUUID != nil {
		return true
	}

	return false
}

// SetPreviousTaskUUID gets a reference to the given string and assigns it to the PreviousTaskUUID field.
func (o *BackupRequestParams) SetPreviousTaskUUID(v string) {
	o.PreviousTaskUUID = &v
}

// GetScheduleName returns the ScheduleName field value if set, zero value otherwise.
func (o *BackupRequestParams) GetScheduleName() string {
	if o == nil || o.ScheduleName == nil {
		var ret string
		return ret
	}
	return *o.ScheduleName
}

// GetScheduleNameOk returns a tuple with the ScheduleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetScheduleNameOk() (*string, bool) {
	if o == nil || o.ScheduleName == nil {
		return nil, false
	}
	return o.ScheduleName, true
}

// HasScheduleName returns a boolean if a field has been set.
func (o *BackupRequestParams) HasScheduleName() bool {
	if o != nil && o.ScheduleName != nil {
		return true
	}

	return false
}

// SetScheduleName gets a reference to the given string and assigns it to the ScheduleName field.
func (o *BackupRequestParams) SetScheduleName(v string) {
	o.ScheduleName = &v
}

// GetScheduleUUID returns the ScheduleUUID field value if set, zero value otherwise.
func (o *BackupRequestParams) GetScheduleUUID() string {
	if o == nil || o.ScheduleUUID == nil {
		var ret string
		return ret
	}
	return *o.ScheduleUUID
}

// GetScheduleUUIDOk returns a tuple with the ScheduleUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetScheduleUUIDOk() (*string, bool) {
	if o == nil || o.ScheduleUUID == nil {
		return nil, false
	}
	return o.ScheduleUUID, true
}

// HasScheduleUUID returns a boolean if a field has been set.
func (o *BackupRequestParams) HasScheduleUUID() bool {
	if o != nil && o.ScheduleUUID != nil {
		return true
	}

	return false
}

// SetScheduleUUID gets a reference to the given string and assigns it to the ScheduleUUID field.
func (o *BackupRequestParams) SetScheduleUUID(v string) {
	o.ScheduleUUID = &v
}

// GetSchedulingFrequency returns the SchedulingFrequency field value if set, zero value otherwise.
func (o *BackupRequestParams) GetSchedulingFrequency() int64 {
	if o == nil || o.SchedulingFrequency == nil {
		var ret int64
		return ret
	}
	return *o.SchedulingFrequency
}

// GetSchedulingFrequencyOk returns a tuple with the SchedulingFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetSchedulingFrequencyOk() (*int64, bool) {
	if o == nil || o.SchedulingFrequency == nil {
		return nil, false
	}
	return o.SchedulingFrequency, true
}

// HasSchedulingFrequency returns a boolean if a field has been set.
func (o *BackupRequestParams) HasSchedulingFrequency() bool {
	if o != nil && o.SchedulingFrequency != nil {
		return true
	}

	return false
}

// SetSchedulingFrequency gets a reference to the given int64 and assigns it to the SchedulingFrequency field.
func (o *BackupRequestParams) SetSchedulingFrequency(v int64) {
	o.SchedulingFrequency = &v
}

// GetSleepAfterMasterRestartMillis returns the SleepAfterMasterRestartMillis field value
func (o *BackupRequestParams) GetSleepAfterMasterRestartMillis() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SleepAfterMasterRestartMillis
}

// GetSleepAfterMasterRestartMillisOk returns a tuple with the SleepAfterMasterRestartMillis field value
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetSleepAfterMasterRestartMillisOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SleepAfterMasterRestartMillis, true
}

// SetSleepAfterMasterRestartMillis sets field value
func (o *BackupRequestParams) SetSleepAfterMasterRestartMillis(v int32) {
	o.SleepAfterMasterRestartMillis = v
}

// GetSleepAfterTServerRestartMillis returns the SleepAfterTServerRestartMillis field value
func (o *BackupRequestParams) GetSleepAfterTServerRestartMillis() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SleepAfterTServerRestartMillis
}

// GetSleepAfterTServerRestartMillisOk returns a tuple with the SleepAfterTServerRestartMillis field value
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetSleepAfterTServerRestartMillisOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SleepAfterTServerRestartMillis, true
}

// SetSleepAfterTServerRestartMillis sets field value
func (o *BackupRequestParams) SetSleepAfterTServerRestartMillis(v int32) {
	o.SleepAfterTServerRestartMillis = v
}

// GetSourceXClusterConfigs returns the SourceXClusterConfigs field value if set, zero value otherwise.
func (o *BackupRequestParams) GetSourceXClusterConfigs() []string {
	if o == nil || o.SourceXClusterConfigs == nil {
		var ret []string
		return ret
	}
	return *o.SourceXClusterConfigs
}

// GetSourceXClusterConfigsOk returns a tuple with the SourceXClusterConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetSourceXClusterConfigsOk() (*[]string, bool) {
	if o == nil || o.SourceXClusterConfigs == nil {
		return nil, false
	}
	return o.SourceXClusterConfigs, true
}

// HasSourceXClusterConfigs returns a boolean if a field has been set.
func (o *BackupRequestParams) HasSourceXClusterConfigs() bool {
	if o != nil && o.SourceXClusterConfigs != nil {
		return true
	}

	return false
}

// SetSourceXClusterConfigs gets a reference to the given []string and assigns it to the SourceXClusterConfigs field.
func (o *BackupRequestParams) SetSourceXClusterConfigs(v []string) {
	o.SourceXClusterConfigs = &v
}

// GetSse returns the Sse field value if set, zero value otherwise.
func (o *BackupRequestParams) GetSse() bool {
	if o == nil || o.Sse == nil {
		var ret bool
		return ret
	}
	return *o.Sse
}

// GetSseOk returns a tuple with the Sse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetSseOk() (*bool, bool) {
	if o == nil || o.Sse == nil {
		return nil, false
	}
	return o.Sse, true
}

// HasSse returns a boolean if a field has been set.
func (o *BackupRequestParams) HasSse() bool {
	if o != nil && o.Sse != nil {
		return true
	}

	return false
}

// SetSse gets a reference to the given bool and assigns it to the Sse field.
func (o *BackupRequestParams) SetSse(v bool) {
	o.Sse = &v
}

// GetStorageConfigUUID returns the StorageConfigUUID field value
func (o *BackupRequestParams) GetStorageConfigUUID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StorageConfigUUID
}

// GetStorageConfigUUIDOk returns a tuple with the StorageConfigUUID field value
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetStorageConfigUUIDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StorageConfigUUID, true
}

// SetStorageConfigUUID sets field value
func (o *BackupRequestParams) SetStorageConfigUUID(v string) {
	o.StorageConfigUUID = v
}

// GetTableByTableBackup returns the TableByTableBackup field value if set, zero value otherwise.
func (o *BackupRequestParams) GetTableByTableBackup() bool {
	if o == nil || o.TableByTableBackup == nil {
		var ret bool
		return ret
	}
	return *o.TableByTableBackup
}

// GetTableByTableBackupOk returns a tuple with the TableByTableBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetTableByTableBackupOk() (*bool, bool) {
	if o == nil || o.TableByTableBackup == nil {
		return nil, false
	}
	return o.TableByTableBackup, true
}

// HasTableByTableBackup returns a boolean if a field has been set.
func (o *BackupRequestParams) HasTableByTableBackup() bool {
	if o != nil && o.TableByTableBackup != nil {
		return true
	}

	return false
}

// SetTableByTableBackup gets a reference to the given bool and assigns it to the TableByTableBackup field.
func (o *BackupRequestParams) SetTableByTableBackup(v bool) {
	o.TableByTableBackup = &v
}

// GetTargetXClusterConfigs returns the TargetXClusterConfigs field value if set, zero value otherwise.
func (o *BackupRequestParams) GetTargetXClusterConfigs() []string {
	if o == nil || o.TargetXClusterConfigs == nil {
		var ret []string
		return ret
	}
	return *o.TargetXClusterConfigs
}

// GetTargetXClusterConfigsOk returns a tuple with the TargetXClusterConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetTargetXClusterConfigsOk() (*[]string, bool) {
	if o == nil || o.TargetXClusterConfigs == nil {
		return nil, false
	}
	return o.TargetXClusterConfigs, true
}

// HasTargetXClusterConfigs returns a boolean if a field has been set.
func (o *BackupRequestParams) HasTargetXClusterConfigs() bool {
	if o != nil && o.TargetXClusterConfigs != nil {
		return true
	}

	return false
}

// SetTargetXClusterConfigs gets a reference to the given []string and assigns it to the TargetXClusterConfigs field.
func (o *BackupRequestParams) SetTargetXClusterConfigs(v []string) {
	o.TargetXClusterConfigs = &v
}

// GetTimeBeforeDelete returns the TimeBeforeDelete field value if set, zero value otherwise.
func (o *BackupRequestParams) GetTimeBeforeDelete() int64 {
	if o == nil || o.TimeBeforeDelete == nil {
		var ret int64
		return ret
	}
	return *o.TimeBeforeDelete
}

// GetTimeBeforeDeleteOk returns a tuple with the TimeBeforeDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetTimeBeforeDeleteOk() (*int64, bool) {
	if o == nil || o.TimeBeforeDelete == nil {
		return nil, false
	}
	return o.TimeBeforeDelete, true
}

// HasTimeBeforeDelete returns a boolean if a field has been set.
func (o *BackupRequestParams) HasTimeBeforeDelete() bool {
	if o != nil && o.TimeBeforeDelete != nil {
		return true
	}

	return false
}

// SetTimeBeforeDelete gets a reference to the given int64 and assigns it to the TimeBeforeDelete field.
func (o *BackupRequestParams) SetTimeBeforeDelete(v int64) {
	o.TimeBeforeDelete = &v
}

// GetUniverseUUID returns the UniverseUUID field value
func (o *BackupRequestParams) GetUniverseUUID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UniverseUUID
}

// GetUniverseUUIDOk returns a tuple with the UniverseUUID field value
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetUniverseUUIDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UniverseUUID, true
}

// SetUniverseUUID sets field value
func (o *BackupRequestParams) SetUniverseUUID(v string) {
	o.UniverseUUID = v
}

// GetUseTablespaces returns the UseTablespaces field value if set, zero value otherwise.
func (o *BackupRequestParams) GetUseTablespaces() bool {
	if o == nil || o.UseTablespaces == nil {
		var ret bool
		return ret
	}
	return *o.UseTablespaces
}

// GetUseTablespacesOk returns a tuple with the UseTablespaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetUseTablespacesOk() (*bool, bool) {
	if o == nil || o.UseTablespaces == nil {
		return nil, false
	}
	return o.UseTablespaces, true
}

// HasUseTablespaces returns a boolean if a field has been set.
func (o *BackupRequestParams) HasUseTablespaces() bool {
	if o != nil && o.UseTablespaces != nil {
		return true
	}

	return false
}

// SetUseTablespaces gets a reference to the given bool and assigns it to the UseTablespaces field.
func (o *BackupRequestParams) SetUseTablespaces(v bool) {
	o.UseTablespaces = &v
}

// GetYbPrevSoftwareVersion returns the YbPrevSoftwareVersion field value if set, zero value otherwise.
func (o *BackupRequestParams) GetYbPrevSoftwareVersion() string {
	if o == nil || o.YbPrevSoftwareVersion == nil {
		var ret string
		return ret
	}
	return *o.YbPrevSoftwareVersion
}

// GetYbPrevSoftwareVersionOk returns a tuple with the YbPrevSoftwareVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetYbPrevSoftwareVersionOk() (*string, bool) {
	if o == nil || o.YbPrevSoftwareVersion == nil {
		return nil, false
	}
	return o.YbPrevSoftwareVersion, true
}

// HasYbPrevSoftwareVersion returns a boolean if a field has been set.
func (o *BackupRequestParams) HasYbPrevSoftwareVersion() bool {
	if o != nil && o.YbPrevSoftwareVersion != nil {
		return true
	}

	return false
}

// SetYbPrevSoftwareVersion gets a reference to the given string and assigns it to the YbPrevSoftwareVersion field.
func (o *BackupRequestParams) SetYbPrevSoftwareVersion(v string) {
	o.YbPrevSoftwareVersion = &v
}

// GetYbcInstalled returns the YbcInstalled field value if set, zero value otherwise.
func (o *BackupRequestParams) GetYbcInstalled() bool {
	if o == nil || o.YbcInstalled == nil {
		var ret bool
		return ret
	}
	return *o.YbcInstalled
}

// GetYbcInstalledOk returns a tuple with the YbcInstalled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetYbcInstalledOk() (*bool, bool) {
	if o == nil || o.YbcInstalled == nil {
		return nil, false
	}
	return o.YbcInstalled, true
}

// HasYbcInstalled returns a boolean if a field has been set.
func (o *BackupRequestParams) HasYbcInstalled() bool {
	if o != nil && o.YbcInstalled != nil {
		return true
	}

	return false
}

// SetYbcInstalled gets a reference to the given bool and assigns it to the YbcInstalled field.
func (o *BackupRequestParams) SetYbcInstalled(v bool) {
	o.YbcInstalled = &v
}

// GetYbcSoftwareVersion returns the YbcSoftwareVersion field value if set, zero value otherwise.
func (o *BackupRequestParams) GetYbcSoftwareVersion() string {
	if o == nil || o.YbcSoftwareVersion == nil {
		var ret string
		return ret
	}
	return *o.YbcSoftwareVersion
}

// GetYbcSoftwareVersionOk returns a tuple with the YbcSoftwareVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRequestParams) GetYbcSoftwareVersionOk() (*string, bool) {
	if o == nil || o.YbcSoftwareVersion == nil {
		return nil, false
	}
	return o.YbcSoftwareVersion, true
}

// HasYbcSoftwareVersion returns a boolean if a field has been set.
func (o *BackupRequestParams) HasYbcSoftwareVersion() bool {
	if o != nil && o.YbcSoftwareVersion != nil {
		return true
	}

	return false
}

// SetYbcSoftwareVersion gets a reference to the given string and assigns it to the YbcSoftwareVersion field.
func (o *BackupRequestParams) SetYbcSoftwareVersion(v string) {
	o.YbcSoftwareVersion = &v
}

func (o BackupRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AlterLoadBalancer != nil {
		toSerialize["alterLoadBalancer"] = o.AlterLoadBalancer
	}
	if o.BackupCategory != nil {
		toSerialize["backupCategory"] = o.BackupCategory
	}
	if o.BackupType != nil {
		toSerialize["backupType"] = o.BackupType
	}
	if true {
		toSerialize["backupUUID"] = o.BackupUUID
	}
	if o.BaseBackupUUID != nil {
		toSerialize["baseBackupUUID"] = o.BaseBackupUUID
	}
	if o.CmkArn != nil {
		toSerialize["cmkArn"] = o.CmkArn
	}
	if o.CommunicationPorts != nil {
		toSerialize["communicationPorts"] = o.CommunicationPorts
	}
	if true {
		toSerialize["creatingUser"] = o.CreatingUser
	}
	if o.CronExpression != nil {
		toSerialize["cronExpression"] = o.CronExpression
	}
	if o.CustomerUUID != nil {
		toSerialize["customerUUID"] = o.CustomerUUID
	}
	if o.DeviceInfo != nil {
		toSerialize["deviceInfo"] = o.DeviceInfo
	}
	if o.DisableChecksum != nil {
		toSerialize["disableChecksum"] = o.DisableChecksum
	}
	if o.DisableMultipart != nil {
		toSerialize["disableMultipart"] = o.DisableMultipart
	}
	if o.DisableParallelism != nil {
		toSerialize["disableParallelism"] = o.DisableParallelism
	}
	if o.EnablePointInTimeRestore != nil {
		toSerialize["enablePointInTimeRestore"] = o.EnablePointInTimeRestore
	}
	if o.EnableVerboseLogs != nil {
		toSerialize["enableVerboseLogs"] = o.EnableVerboseLogs
	}
	if o.EnableYbc != nil {
		toSerialize["enableYbc"] = o.EnableYbc
	}
	if o.EncryptionAtRestConfig != nil {
		toSerialize["encryptionAtRestConfig"] = o.EncryptionAtRestConfig
	}
	if o.ErrorString != nil {
		toSerialize["errorString"] = o.ErrorString
	}
	if o.ExpectedUniverseVersion != nil {
		toSerialize["expectedUniverseVersion"] = o.ExpectedUniverseVersion
	}
	if o.ExpiryTimeUnit != nil {
		toSerialize["expiryTimeUnit"] = o.ExpiryTimeUnit
	}
	if o.ExtraDependencies != nil {
		toSerialize["extraDependencies"] = o.ExtraDependencies
	}
	if o.FrequencyTimeUnit != nil {
		toSerialize["frequencyTimeUnit"] = o.FrequencyTimeUnit
	}
	if o.IgnoreErrors != nil {
		toSerialize["ignoreErrors"] = o.IgnoreErrors
	}
	if o.IncrementalBackupFrequency != nil {
		toSerialize["incrementalBackupFrequency"] = o.IncrementalBackupFrequency
	}
	if o.IncrementalBackupFrequencyTimeUnit != nil {
		toSerialize["incrementalBackupFrequencyTimeUnit"] = o.IncrementalBackupFrequencyTimeUnit
	}
	if o.InstallYbc != nil {
		toSerialize["installYbc"] = o.InstallYbc
	}
	if o.KeyspaceTableList != nil {
		toSerialize["keyspaceTableList"] = o.KeyspaceTableList
	}
	if o.KmsConfigUUID != nil {
		toSerialize["kmsConfigUUID"] = o.KmsConfigUUID
	}
	if o.MinNumBackupsToRetain != nil {
		toSerialize["minNumBackupsToRetain"] = o.MinNumBackupsToRetain
	}
	if o.NodeDetailsSet != nil {
		toSerialize["nodeDetailsSet"] = o.NodeDetailsSet
	}
	if o.NodeExporterUser != nil {
		toSerialize["nodeExporterUser"] = o.NodeExporterUser
	}
	if o.ParallelDBBackups != nil {
		toSerialize["parallelDBBackups"] = o.ParallelDBBackups
	}
	if o.Parallelism != nil {
		toSerialize["parallelism"] = o.Parallelism
	}
	if true {
		toSerialize["platformUrl"] = o.PlatformUrl
	}
	if true {
		toSerialize["platformVersion"] = o.PlatformVersion
	}
	if o.PreviousTaskUUID != nil {
		toSerialize["previousTaskUUID"] = o.PreviousTaskUUID
	}
	if o.ScheduleName != nil {
		toSerialize["scheduleName"] = o.ScheduleName
	}
	if o.ScheduleUUID != nil {
		toSerialize["scheduleUUID"] = o.ScheduleUUID
	}
	if o.SchedulingFrequency != nil {
		toSerialize["schedulingFrequency"] = o.SchedulingFrequency
	}
	if true {
		toSerialize["sleepAfterMasterRestartMillis"] = o.SleepAfterMasterRestartMillis
	}
	if true {
		toSerialize["sleepAfterTServerRestartMillis"] = o.SleepAfterTServerRestartMillis
	}
	if o.SourceXClusterConfigs != nil {
		toSerialize["sourceXClusterConfigs"] = o.SourceXClusterConfigs
	}
	if o.Sse != nil {
		toSerialize["sse"] = o.Sse
	}
	if true {
		toSerialize["storageConfigUUID"] = o.StorageConfigUUID
	}
	if o.TableByTableBackup != nil {
		toSerialize["tableByTableBackup"] = o.TableByTableBackup
	}
	if o.TargetXClusterConfigs != nil {
		toSerialize["targetXClusterConfigs"] = o.TargetXClusterConfigs
	}
	if o.TimeBeforeDelete != nil {
		toSerialize["timeBeforeDelete"] = o.TimeBeforeDelete
	}
	if true {
		toSerialize["universeUUID"] = o.UniverseUUID
	}
	if o.UseTablespaces != nil {
		toSerialize["useTablespaces"] = o.UseTablespaces
	}
	if o.YbPrevSoftwareVersion != nil {
		toSerialize["ybPrevSoftwareVersion"] = o.YbPrevSoftwareVersion
	}
	if o.YbcInstalled != nil {
		toSerialize["ybcInstalled"] = o.YbcInstalled
	}
	if o.YbcSoftwareVersion != nil {
		toSerialize["ybcSoftwareVersion"] = o.YbcSoftwareVersion
	}
	return json.Marshal(toSerialize)
}

type NullableBackupRequestParams struct {
	value *BackupRequestParams
	isSet bool
}

func (v NullableBackupRequestParams) Get() *BackupRequestParams {
	return v.value
}

func (v *NullableBackupRequestParams) Set(val *BackupRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupRequestParams(val *BackupRequestParams) *NullableBackupRequestParams {
	return &NullableBackupRequestParams{value: val, isSet: true}
}

func (v NullableBackupRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


