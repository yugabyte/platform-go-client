/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// PerfAdvisorManualRunStatus struct for PerfAdvisorManualRunStatus
type PerfAdvisorManualRunStatus struct {
	ActiveRun *UniversePerformanceAdvisorStatus `json:"activeRun,omitempty"`
	// API response message.
	Message *string `json:"message,omitempty"`
	// API operation status. A value of true indicates the operation was successful.
	Success *bool `json:"success,omitempty"`
}

// NewPerfAdvisorManualRunStatus instantiates a new PerfAdvisorManualRunStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPerfAdvisorManualRunStatus() *PerfAdvisorManualRunStatus {
	this := PerfAdvisorManualRunStatus{}
	return &this
}

// NewPerfAdvisorManualRunStatusWithDefaults instantiates a new PerfAdvisorManualRunStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPerfAdvisorManualRunStatusWithDefaults() *PerfAdvisorManualRunStatus {
	this := PerfAdvisorManualRunStatus{}
	return &this
}

// GetActiveRun returns the ActiveRun field value if set, zero value otherwise.
func (o *PerfAdvisorManualRunStatus) GetActiveRun() UniversePerformanceAdvisorStatus {
	if o == nil || o.ActiveRun == nil {
		var ret UniversePerformanceAdvisorStatus
		return ret
	}
	return *o.ActiveRun
}

// GetActiveRunOk returns a tuple with the ActiveRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfAdvisorManualRunStatus) GetActiveRunOk() (*UniversePerformanceAdvisorStatus, bool) {
	if o == nil || o.ActiveRun == nil {
		return nil, false
	}
	return o.ActiveRun, true
}

// HasActiveRun returns a boolean if a field has been set.
func (o *PerfAdvisorManualRunStatus) HasActiveRun() bool {
	if o != nil && o.ActiveRun != nil {
		return true
	}

	return false
}

// SetActiveRun gets a reference to the given UniversePerformanceAdvisorStatus and assigns it to the ActiveRun field.
func (o *PerfAdvisorManualRunStatus) SetActiveRun(v UniversePerformanceAdvisorStatus) {
	o.ActiveRun = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *PerfAdvisorManualRunStatus) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfAdvisorManualRunStatus) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *PerfAdvisorManualRunStatus) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *PerfAdvisorManualRunStatus) SetMessage(v string) {
	o.Message = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *PerfAdvisorManualRunStatus) GetSuccess() bool {
	if o == nil || o.Success == nil {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfAdvisorManualRunStatus) GetSuccessOk() (*bool, bool) {
	if o == nil || o.Success == nil {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *PerfAdvisorManualRunStatus) HasSuccess() bool {
	if o != nil && o.Success != nil {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *PerfAdvisorManualRunStatus) SetSuccess(v bool) {
	o.Success = &v
}

func (o PerfAdvisorManualRunStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ActiveRun != nil {
		toSerialize["activeRun"] = o.ActiveRun
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Success != nil {
		toSerialize["success"] = o.Success
	}
	return json.Marshal(toSerialize)
}

type NullablePerfAdvisorManualRunStatus struct {
	value *PerfAdvisorManualRunStatus
	isSet bool
}

func (v NullablePerfAdvisorManualRunStatus) Get() *PerfAdvisorManualRunStatus {
	return v.value
}

func (v *NullablePerfAdvisorManualRunStatus) Set(val *PerfAdvisorManualRunStatus) {
	v.value = val
	v.isSet = true
}

func (v NullablePerfAdvisorManualRunStatus) IsSet() bool {
	return v.isSet
}

func (v *NullablePerfAdvisorManualRunStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePerfAdvisorManualRunStatus(val *PerfAdvisorManualRunStatus) *NullablePerfAdvisorManualRunStatus {
	return &NullablePerfAdvisorManualRunStatus{value: val, isSet: true}
}

func (v NullablePerfAdvisorManualRunStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePerfAdvisorManualRunStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


