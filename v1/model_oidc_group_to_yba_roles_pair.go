/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// OidcGroupToYbaRolesPair struct for OidcGroupToYbaRolesPair
type OidcGroupToYbaRolesPair struct {
	GroupName string `json:"groupName"`
	Roles []string `json:"roles"`
}

// NewOidcGroupToYbaRolesPair instantiates a new OidcGroupToYbaRolesPair object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOidcGroupToYbaRolesPair(groupName string, roles []string) *OidcGroupToYbaRolesPair {
	this := OidcGroupToYbaRolesPair{}
	this.GroupName = groupName
	this.Roles = roles
	return &this
}

// NewOidcGroupToYbaRolesPairWithDefaults instantiates a new OidcGroupToYbaRolesPair object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOidcGroupToYbaRolesPairWithDefaults() *OidcGroupToYbaRolesPair {
	this := OidcGroupToYbaRolesPair{}
	return &this
}

// GetGroupName returns the GroupName field value
func (o *OidcGroupToYbaRolesPair) GetGroupName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value
// and a boolean to check if the value has been set.
func (o *OidcGroupToYbaRolesPair) GetGroupNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.GroupName, true
}

// SetGroupName sets field value
func (o *OidcGroupToYbaRolesPair) SetGroupName(v string) {
	o.GroupName = v
}

// GetRoles returns the Roles field value
func (o *OidcGroupToYbaRolesPair) GetRoles() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value
// and a boolean to check if the value has been set.
func (o *OidcGroupToYbaRolesPair) GetRolesOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Roles, true
}

// SetRoles sets field value
func (o *OidcGroupToYbaRolesPair) SetRoles(v []string) {
	o.Roles = v
}

func (o OidcGroupToYbaRolesPair) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["groupName"] = o.GroupName
	}
	if true {
		toSerialize["roles"] = o.Roles
	}
	return json.Marshal(toSerialize)
}

type NullableOidcGroupToYbaRolesPair struct {
	value *OidcGroupToYbaRolesPair
	isSet bool
}

func (v NullableOidcGroupToYbaRolesPair) Get() *OidcGroupToYbaRolesPair {
	return v.value
}

func (v *NullableOidcGroupToYbaRolesPair) Set(val *OidcGroupToYbaRolesPair) {
	v.value = val
	v.isSet = true
}

func (v NullableOidcGroupToYbaRolesPair) IsSet() bool {
	return v.isSet
}

func (v *NullableOidcGroupToYbaRolesPair) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOidcGroupToYbaRolesPair(val *OidcGroupToYbaRolesPair) *NullableOidcGroupToYbaRolesPair {
	return &NullableOidcGroupToYbaRolesPair{value: val, isSet: true}
}

func (v NullableOidcGroupToYbaRolesPair) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOidcGroupToYbaRolesPair) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


