/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// OidcGroupToYbaRolesData struct for OidcGroupToYbaRolesData
type OidcGroupToYbaRolesData struct {
	//  list of pairs of groupName and roles
	OidcGroupToYbaRolesPairs *[]OidcGroupToYbaRolesPair `json:"oidcGroupToYbaRolesPairs,omitempty"`
}

// NewOidcGroupToYbaRolesData instantiates a new OidcGroupToYbaRolesData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOidcGroupToYbaRolesData() *OidcGroupToYbaRolesData {
	this := OidcGroupToYbaRolesData{}
	return &this
}

// NewOidcGroupToYbaRolesDataWithDefaults instantiates a new OidcGroupToYbaRolesData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOidcGroupToYbaRolesDataWithDefaults() *OidcGroupToYbaRolesData {
	this := OidcGroupToYbaRolesData{}
	return &this
}

// GetOidcGroupToYbaRolesPairs returns the OidcGroupToYbaRolesPairs field value if set, zero value otherwise.
func (o *OidcGroupToYbaRolesData) GetOidcGroupToYbaRolesPairs() []OidcGroupToYbaRolesPair {
	if o == nil || o.OidcGroupToYbaRolesPairs == nil {
		var ret []OidcGroupToYbaRolesPair
		return ret
	}
	return *o.OidcGroupToYbaRolesPairs
}

// GetOidcGroupToYbaRolesPairsOk returns a tuple with the OidcGroupToYbaRolesPairs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcGroupToYbaRolesData) GetOidcGroupToYbaRolesPairsOk() (*[]OidcGroupToYbaRolesPair, bool) {
	if o == nil || o.OidcGroupToYbaRolesPairs == nil {
		return nil, false
	}
	return o.OidcGroupToYbaRolesPairs, true
}

// HasOidcGroupToYbaRolesPairs returns a boolean if a field has been set.
func (o *OidcGroupToYbaRolesData) HasOidcGroupToYbaRolesPairs() bool {
	if o != nil && o.OidcGroupToYbaRolesPairs != nil {
		return true
	}

	return false
}

// SetOidcGroupToYbaRolesPairs gets a reference to the given []OidcGroupToYbaRolesPair and assigns it to the OidcGroupToYbaRolesPairs field.
func (o *OidcGroupToYbaRolesData) SetOidcGroupToYbaRolesPairs(v []OidcGroupToYbaRolesPair) {
	o.OidcGroupToYbaRolesPairs = &v
}

func (o OidcGroupToYbaRolesData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OidcGroupToYbaRolesPairs != nil {
		toSerialize["oidcGroupToYbaRolesPairs"] = o.OidcGroupToYbaRolesPairs
	}
	return json.Marshal(toSerialize)
}

type NullableOidcGroupToYbaRolesData struct {
	value *OidcGroupToYbaRolesData
	isSet bool
}

func (v NullableOidcGroupToYbaRolesData) Get() *OidcGroupToYbaRolesData {
	return v.value
}

func (v *NullableOidcGroupToYbaRolesData) Set(val *OidcGroupToYbaRolesData) {
	v.value = val
	v.isSet = true
}

func (v NullableOidcGroupToYbaRolesData) IsSet() bool {
	return v.isSet
}

func (v *NullableOidcGroupToYbaRolesData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOidcGroupToYbaRolesData(val *OidcGroupToYbaRolesData) *NullableOidcGroupToYbaRolesData {
	return &NullableOidcGroupToYbaRolesData{value: val, isSet: true}
}

func (v NullableOidcGroupToYbaRolesData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOidcGroupToYbaRolesData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


