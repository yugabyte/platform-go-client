/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// NodeInstanceData Details of a node instance. Used by the API to validate data against input constraints.
type NodeInstanceData struct {
	// Node instance name
	InstanceName string `json:"instanceName"`
	// Node instance type
	InstanceType string `json:"instanceType"`
	// IP address
	Ip string `json:"ip"`
	// Node configurations
	NodeConfigs *[]NodeConfig `json:"nodeConfigs,omitempty"`
	// Node name
	NodeName *string `json:"nodeName,omitempty"`
	// Region
	Region string `json:"region"`
	// SSH user
	SshUser string `json:"sshUser"`
	// Zone
	Zone string `json:"zone"`
}

// NewNodeInstanceData instantiates a new NodeInstanceData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodeInstanceData(instanceName string, instanceType string, ip string, region string, sshUser string, zone string) *NodeInstanceData {
	this := NodeInstanceData{}
	this.InstanceName = instanceName
	this.InstanceType = instanceType
	this.Ip = ip
	this.Region = region
	this.SshUser = sshUser
	this.Zone = zone
	return &this
}

// NewNodeInstanceDataWithDefaults instantiates a new NodeInstanceData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeInstanceDataWithDefaults() *NodeInstanceData {
	this := NodeInstanceData{}
	return &this
}

// GetInstanceName returns the InstanceName field value
func (o *NodeInstanceData) GetInstanceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceName
}

// GetInstanceNameOk returns a tuple with the InstanceName field value
// and a boolean to check if the value has been set.
func (o *NodeInstanceData) GetInstanceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InstanceName, true
}

// SetInstanceName sets field value
func (o *NodeInstanceData) SetInstanceName(v string) {
	o.InstanceName = v
}

// GetInstanceType returns the InstanceType field value
func (o *NodeInstanceData) GetInstanceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value
// and a boolean to check if the value has been set.
func (o *NodeInstanceData) GetInstanceTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InstanceType, true
}

// SetInstanceType sets field value
func (o *NodeInstanceData) SetInstanceType(v string) {
	o.InstanceType = v
}

// GetIp returns the Ip field value
func (o *NodeInstanceData) GetIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ip
}

// GetIpOk returns a tuple with the Ip field value
// and a boolean to check if the value has been set.
func (o *NodeInstanceData) GetIpOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Ip, true
}

// SetIp sets field value
func (o *NodeInstanceData) SetIp(v string) {
	o.Ip = v
}

// GetNodeConfigs returns the NodeConfigs field value if set, zero value otherwise.
func (o *NodeInstanceData) GetNodeConfigs() []NodeConfig {
	if o == nil || o.NodeConfigs == nil {
		var ret []NodeConfig
		return ret
	}
	return *o.NodeConfigs
}

// GetNodeConfigsOk returns a tuple with the NodeConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeInstanceData) GetNodeConfigsOk() (*[]NodeConfig, bool) {
	if o == nil || o.NodeConfigs == nil {
		return nil, false
	}
	return o.NodeConfigs, true
}

// HasNodeConfigs returns a boolean if a field has been set.
func (o *NodeInstanceData) HasNodeConfigs() bool {
	if o != nil && o.NodeConfigs != nil {
		return true
	}

	return false
}

// SetNodeConfigs gets a reference to the given []NodeConfig and assigns it to the NodeConfigs field.
func (o *NodeInstanceData) SetNodeConfigs(v []NodeConfig) {
	o.NodeConfigs = &v
}

// GetNodeName returns the NodeName field value if set, zero value otherwise.
func (o *NodeInstanceData) GetNodeName() string {
	if o == nil || o.NodeName == nil {
		var ret string
		return ret
	}
	return *o.NodeName
}

// GetNodeNameOk returns a tuple with the NodeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeInstanceData) GetNodeNameOk() (*string, bool) {
	if o == nil || o.NodeName == nil {
		return nil, false
	}
	return o.NodeName, true
}

// HasNodeName returns a boolean if a field has been set.
func (o *NodeInstanceData) HasNodeName() bool {
	if o != nil && o.NodeName != nil {
		return true
	}

	return false
}

// SetNodeName gets a reference to the given string and assigns it to the NodeName field.
func (o *NodeInstanceData) SetNodeName(v string) {
	o.NodeName = &v
}

// GetRegion returns the Region field value
func (o *NodeInstanceData) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *NodeInstanceData) GetRegionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *NodeInstanceData) SetRegion(v string) {
	o.Region = v
}

// GetSshUser returns the SshUser field value
func (o *NodeInstanceData) GetSshUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SshUser
}

// GetSshUserOk returns a tuple with the SshUser field value
// and a boolean to check if the value has been set.
func (o *NodeInstanceData) GetSshUserOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SshUser, true
}

// SetSshUser sets field value
func (o *NodeInstanceData) SetSshUser(v string) {
	o.SshUser = v
}

// GetZone returns the Zone field value
func (o *NodeInstanceData) GetZone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Zone
}

// GetZoneOk returns a tuple with the Zone field value
// and a boolean to check if the value has been set.
func (o *NodeInstanceData) GetZoneOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Zone, true
}

// SetZone sets field value
func (o *NodeInstanceData) SetZone(v string) {
	o.Zone = v
}

func (o NodeInstanceData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["instanceName"] = o.InstanceName
	}
	if true {
		toSerialize["instanceType"] = o.InstanceType
	}
	if true {
		toSerialize["ip"] = o.Ip
	}
	if o.NodeConfigs != nil {
		toSerialize["nodeConfigs"] = o.NodeConfigs
	}
	if o.NodeName != nil {
		toSerialize["nodeName"] = o.NodeName
	}
	if true {
		toSerialize["region"] = o.Region
	}
	if true {
		toSerialize["sshUser"] = o.SshUser
	}
	if true {
		toSerialize["zone"] = o.Zone
	}
	return json.Marshal(toSerialize)
}

type NullableNodeInstanceData struct {
	value *NodeInstanceData
	isSet bool
}

func (v NullableNodeInstanceData) Get() *NodeInstanceData {
	return v.value
}

func (v *NullableNodeInstanceData) Set(val *NodeInstanceData) {
	v.value = val
	v.isSet = true
}

func (v NullableNodeInstanceData) IsSet() bool {
	return v.isSet
}

func (v *NullableNodeInstanceData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodeInstanceData(val *NodeInstanceData) *NullableNodeInstanceData {
	return &NullableNodeInstanceData{value: val, isSet: true}
}

func (v NullableNodeInstanceData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodeInstanceData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


