/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"time"
)

// UniversePerformanceAdvisorStatus struct for UniversePerformanceAdvisorStatus
type UniversePerformanceAdvisorStatus struct {
	// Customer UUID
	CustomerUUID string `json:"customerUUID"`
	// Time perf advisor run was finished
	EndTime *time.Time `json:"endTime,omitempty"`
	// Scheduled or manual run
	Manual *bool `json:"manual,omitempty"`
	// Time perf advisor run was scheduled
	ScheduleTime *time.Time `json:"scheduleTime,omitempty"`
	// Time perf advisor run was started
	StartTime *time.Time `json:"startTime,omitempty"`
	// State
	State string `json:"state"`
	// Universe UUID
	UniverseUUID string `json:"universeUUID"`
	// Perf advisor run UUID
	Uuid string `json:"uuid"`
}

// NewUniversePerformanceAdvisorStatus instantiates a new UniversePerformanceAdvisorStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUniversePerformanceAdvisorStatus(customerUUID string, state string, universeUUID string, uuid string) *UniversePerformanceAdvisorStatus {
	this := UniversePerformanceAdvisorStatus{}
	this.CustomerUUID = customerUUID
	this.State = state
	this.UniverseUUID = universeUUID
	this.Uuid = uuid
	return &this
}

// NewUniversePerformanceAdvisorStatusWithDefaults instantiates a new UniversePerformanceAdvisorStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUniversePerformanceAdvisorStatusWithDefaults() *UniversePerformanceAdvisorStatus {
	this := UniversePerformanceAdvisorStatus{}
	return &this
}

// GetCustomerUUID returns the CustomerUUID field value
func (o *UniversePerformanceAdvisorStatus) GetCustomerUUID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerUUID
}

// GetCustomerUUIDOk returns a tuple with the CustomerUUID field value
// and a boolean to check if the value has been set.
func (o *UniversePerformanceAdvisorStatus) GetCustomerUUIDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CustomerUUID, true
}

// SetCustomerUUID sets field value
func (o *UniversePerformanceAdvisorStatus) SetCustomerUUID(v string) {
	o.CustomerUUID = v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *UniversePerformanceAdvisorStatus) GetEndTime() time.Time {
	if o == nil || o.EndTime == nil {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniversePerformanceAdvisorStatus) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || o.EndTime == nil {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *UniversePerformanceAdvisorStatus) HasEndTime() bool {
	if o != nil && o.EndTime != nil {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *UniversePerformanceAdvisorStatus) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetManual returns the Manual field value if set, zero value otherwise.
func (o *UniversePerformanceAdvisorStatus) GetManual() bool {
	if o == nil || o.Manual == nil {
		var ret bool
		return ret
	}
	return *o.Manual
}

// GetManualOk returns a tuple with the Manual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniversePerformanceAdvisorStatus) GetManualOk() (*bool, bool) {
	if o == nil || o.Manual == nil {
		return nil, false
	}
	return o.Manual, true
}

// HasManual returns a boolean if a field has been set.
func (o *UniversePerformanceAdvisorStatus) HasManual() bool {
	if o != nil && o.Manual != nil {
		return true
	}

	return false
}

// SetManual gets a reference to the given bool and assigns it to the Manual field.
func (o *UniversePerformanceAdvisorStatus) SetManual(v bool) {
	o.Manual = &v
}

// GetScheduleTime returns the ScheduleTime field value if set, zero value otherwise.
func (o *UniversePerformanceAdvisorStatus) GetScheduleTime() time.Time {
	if o == nil || o.ScheduleTime == nil {
		var ret time.Time
		return ret
	}
	return *o.ScheduleTime
}

// GetScheduleTimeOk returns a tuple with the ScheduleTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniversePerformanceAdvisorStatus) GetScheduleTimeOk() (*time.Time, bool) {
	if o == nil || o.ScheduleTime == nil {
		return nil, false
	}
	return o.ScheduleTime, true
}

// HasScheduleTime returns a boolean if a field has been set.
func (o *UniversePerformanceAdvisorStatus) HasScheduleTime() bool {
	if o != nil && o.ScheduleTime != nil {
		return true
	}

	return false
}

// SetScheduleTime gets a reference to the given time.Time and assigns it to the ScheduleTime field.
func (o *UniversePerformanceAdvisorStatus) SetScheduleTime(v time.Time) {
	o.ScheduleTime = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *UniversePerformanceAdvisorStatus) GetStartTime() time.Time {
	if o == nil || o.StartTime == nil {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniversePerformanceAdvisorStatus) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || o.StartTime == nil {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *UniversePerformanceAdvisorStatus) HasStartTime() bool {
	if o != nil && o.StartTime != nil {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *UniversePerformanceAdvisorStatus) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetState returns the State field value
func (o *UniversePerformanceAdvisorStatus) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *UniversePerformanceAdvisorStatus) GetStateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *UniversePerformanceAdvisorStatus) SetState(v string) {
	o.State = v
}

// GetUniverseUUID returns the UniverseUUID field value
func (o *UniversePerformanceAdvisorStatus) GetUniverseUUID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UniverseUUID
}

// GetUniverseUUIDOk returns a tuple with the UniverseUUID field value
// and a boolean to check if the value has been set.
func (o *UniversePerformanceAdvisorStatus) GetUniverseUUIDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UniverseUUID, true
}

// SetUniverseUUID sets field value
func (o *UniversePerformanceAdvisorStatus) SetUniverseUUID(v string) {
	o.UniverseUUID = v
}

// GetUuid returns the Uuid field value
func (o *UniversePerformanceAdvisorStatus) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *UniversePerformanceAdvisorStatus) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *UniversePerformanceAdvisorStatus) SetUuid(v string) {
	o.Uuid = v
}

func (o UniversePerformanceAdvisorStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["customerUUID"] = o.CustomerUUID
	}
	if o.EndTime != nil {
		toSerialize["endTime"] = o.EndTime
	}
	if o.Manual != nil {
		toSerialize["manual"] = o.Manual
	}
	if o.ScheduleTime != nil {
		toSerialize["scheduleTime"] = o.ScheduleTime
	}
	if o.StartTime != nil {
		toSerialize["startTime"] = o.StartTime
	}
	if true {
		toSerialize["state"] = o.State
	}
	if true {
		toSerialize["universeUUID"] = o.UniverseUUID
	}
	if true {
		toSerialize["uuid"] = o.Uuid
	}
	return json.Marshal(toSerialize)
}

type NullableUniversePerformanceAdvisorStatus struct {
	value *UniversePerformanceAdvisorStatus
	isSet bool
}

func (v NullableUniversePerformanceAdvisorStatus) Get() *UniversePerformanceAdvisorStatus {
	return v.value
}

func (v *NullableUniversePerformanceAdvisorStatus) Set(val *UniversePerformanceAdvisorStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableUniversePerformanceAdvisorStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableUniversePerformanceAdvisorStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUniversePerformanceAdvisorStatus(val *UniversePerformanceAdvisorStatus) *NullableUniversePerformanceAdvisorStatus {
	return &NullableUniversePerformanceAdvisorStatus{value: val, isSet: true}
}

func (v NullableUniversePerformanceAdvisorStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUniversePerformanceAdvisorStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


