/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// RegionLocations struct for RegionLocations
type RegionLocations struct {
	HOST_BASE string `json:"HOST_BASE"`
	LOCATION string `json:"LOCATION"`
	REGION string `json:"REGION"`
}

// NewRegionLocations instantiates a new RegionLocations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegionLocations(hOSTBASE string, lOCATION string, rEGION string) *RegionLocations {
	this := RegionLocations{}
	this.HOST_BASE = hOSTBASE
	this.LOCATION = lOCATION
	this.REGION = rEGION
	return &this
}

// NewRegionLocationsWithDefaults instantiates a new RegionLocations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegionLocationsWithDefaults() *RegionLocations {
	this := RegionLocations{}
	return &this
}

// GetHOST_BASE returns the HOST_BASE field value
func (o *RegionLocations) GetHOST_BASE() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HOST_BASE
}

// GetHOST_BASEOk returns a tuple with the HOST_BASE field value
// and a boolean to check if the value has been set.
func (o *RegionLocations) GetHOST_BASEOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.HOST_BASE, true
}

// SetHOST_BASE sets field value
func (o *RegionLocations) SetHOST_BASE(v string) {
	o.HOST_BASE = v
}

// GetLOCATION returns the LOCATION field value
func (o *RegionLocations) GetLOCATION() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LOCATION
}

// GetLOCATIONOk returns a tuple with the LOCATION field value
// and a boolean to check if the value has been set.
func (o *RegionLocations) GetLOCATIONOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LOCATION, true
}

// SetLOCATION sets field value
func (o *RegionLocations) SetLOCATION(v string) {
	o.LOCATION = v
}

// GetREGION returns the REGION field value
func (o *RegionLocations) GetREGION() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.REGION
}

// GetREGIONOk returns a tuple with the REGION field value
// and a boolean to check if the value has been set.
func (o *RegionLocations) GetREGIONOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.REGION, true
}

// SetREGION sets field value
func (o *RegionLocations) SetREGION(v string) {
	o.REGION = v
}

func (o RegionLocations) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["HOST_BASE"] = o.HOST_BASE
	}
	if true {
		toSerialize["LOCATION"] = o.LOCATION
	}
	if true {
		toSerialize["REGION"] = o.REGION
	}
	return json.Marshal(toSerialize)
}

type NullableRegionLocations struct {
	value *RegionLocations
	isSet bool
}

func (v NullableRegionLocations) Get() *RegionLocations {
	return v.value
}

func (v *NullableRegionLocations) Set(val *RegionLocations) {
	v.value = val
	v.isSet = true
}

func (v NullableRegionLocations) IsSet() bool {
	return v.isSet
}

func (v *NullableRegionLocations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegionLocations(val *RegionLocations) *NullableRegionLocations {
	return &NullableRegionLocations{value: val, isSet: true}
}

func (v NullableRegionLocations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegionLocations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


