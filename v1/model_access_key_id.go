/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// AccessKeyId struct for AccessKeyId
type AccessKeyId struct {
	KeyCode *string `json:"keyCode,omitempty"`
	ProviderUUID *string `json:"providerUUID,omitempty"`
}

// NewAccessKeyId instantiates a new AccessKeyId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessKeyId() *AccessKeyId {
	this := AccessKeyId{}
	return &this
}

// NewAccessKeyIdWithDefaults instantiates a new AccessKeyId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessKeyIdWithDefaults() *AccessKeyId {
	this := AccessKeyId{}
	return &this
}

// GetKeyCode returns the KeyCode field value if set, zero value otherwise.
func (o *AccessKeyId) GetKeyCode() string {
	if o == nil || o.KeyCode == nil {
		var ret string
		return ret
	}
	return *o.KeyCode
}

// GetKeyCodeOk returns a tuple with the KeyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKeyId) GetKeyCodeOk() (*string, bool) {
	if o == nil || o.KeyCode == nil {
		return nil, false
	}
	return o.KeyCode, true
}

// HasKeyCode returns a boolean if a field has been set.
func (o *AccessKeyId) HasKeyCode() bool {
	if o != nil && o.KeyCode != nil {
		return true
	}

	return false
}

// SetKeyCode gets a reference to the given string and assigns it to the KeyCode field.
func (o *AccessKeyId) SetKeyCode(v string) {
	o.KeyCode = &v
}

// GetProviderUUID returns the ProviderUUID field value if set, zero value otherwise.
func (o *AccessKeyId) GetProviderUUID() string {
	if o == nil || o.ProviderUUID == nil {
		var ret string
		return ret
	}
	return *o.ProviderUUID
}

// GetProviderUUIDOk returns a tuple with the ProviderUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKeyId) GetProviderUUIDOk() (*string, bool) {
	if o == nil || o.ProviderUUID == nil {
		return nil, false
	}
	return o.ProviderUUID, true
}

// HasProviderUUID returns a boolean if a field has been set.
func (o *AccessKeyId) HasProviderUUID() bool {
	if o != nil && o.ProviderUUID != nil {
		return true
	}

	return false
}

// SetProviderUUID gets a reference to the given string and assigns it to the ProviderUUID field.
func (o *AccessKeyId) SetProviderUUID(v string) {
	o.ProviderUUID = &v
}

func (o AccessKeyId) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.KeyCode != nil {
		toSerialize["keyCode"] = o.KeyCode
	}
	if o.ProviderUUID != nil {
		toSerialize["providerUUID"] = o.ProviderUUID
	}
	return json.Marshal(toSerialize)
}

type NullableAccessKeyId struct {
	value *AccessKeyId
	isSet bool
}

func (v NullableAccessKeyId) Get() *AccessKeyId {
	return v.value
}

func (v *NullableAccessKeyId) Set(val *AccessKeyId) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessKeyId) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessKeyId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessKeyId(val *AccessKeyId) *NullableAccessKeyId {
	return &NullableAccessKeyId{value: val, isSet: true}
}

func (v NullableAccessKeyId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessKeyId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


