/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// InstanceTypeResp Details of a cloud instance type
type InstanceTypeResp struct {
	// True if the instance is active
	Active *bool `json:"active,omitempty"`
	IdKey InstanceTypeKey `json:"idKey"`
	// Instance type code
	InstanceTypeCode *string `json:"instanceTypeCode,omitempty"`
	InstanceTypeDetails *InstanceTypeDetails `json:"instanceTypeDetails,omitempty"`
	// The instance's memory size, in gigabytes
	MemSizeGB *float64 `json:"memSizeGB,omitempty"`
	// The instance's number of CPU cores
	NumCores *float64 `json:"numCores,omitempty"`
	// Cloud provider code
	ProviderCode *string `json:"providerCode,omitempty"`
	// Provider UUID
	ProviderUuid *string `json:"providerUuid,omitempty"`
}

// NewInstanceTypeResp instantiates a new InstanceTypeResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceTypeResp(idKey InstanceTypeKey) *InstanceTypeResp {
	this := InstanceTypeResp{}
	this.IdKey = idKey
	return &this
}

// NewInstanceTypeRespWithDefaults instantiates a new InstanceTypeResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceTypeRespWithDefaults() *InstanceTypeResp {
	this := InstanceTypeResp{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *InstanceTypeResp) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceTypeResp) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *InstanceTypeResp) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *InstanceTypeResp) SetActive(v bool) {
	o.Active = &v
}

// GetIdKey returns the IdKey field value
func (o *InstanceTypeResp) GetIdKey() InstanceTypeKey {
	if o == nil {
		var ret InstanceTypeKey
		return ret
	}

	return o.IdKey
}

// GetIdKeyOk returns a tuple with the IdKey field value
// and a boolean to check if the value has been set.
func (o *InstanceTypeResp) GetIdKeyOk() (*InstanceTypeKey, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IdKey, true
}

// SetIdKey sets field value
func (o *InstanceTypeResp) SetIdKey(v InstanceTypeKey) {
	o.IdKey = v
}

// GetInstanceTypeCode returns the InstanceTypeCode field value if set, zero value otherwise.
func (o *InstanceTypeResp) GetInstanceTypeCode() string {
	if o == nil || o.InstanceTypeCode == nil {
		var ret string
		return ret
	}
	return *o.InstanceTypeCode
}

// GetInstanceTypeCodeOk returns a tuple with the InstanceTypeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceTypeResp) GetInstanceTypeCodeOk() (*string, bool) {
	if o == nil || o.InstanceTypeCode == nil {
		return nil, false
	}
	return o.InstanceTypeCode, true
}

// HasInstanceTypeCode returns a boolean if a field has been set.
func (o *InstanceTypeResp) HasInstanceTypeCode() bool {
	if o != nil && o.InstanceTypeCode != nil {
		return true
	}

	return false
}

// SetInstanceTypeCode gets a reference to the given string and assigns it to the InstanceTypeCode field.
func (o *InstanceTypeResp) SetInstanceTypeCode(v string) {
	o.InstanceTypeCode = &v
}

// GetInstanceTypeDetails returns the InstanceTypeDetails field value if set, zero value otherwise.
func (o *InstanceTypeResp) GetInstanceTypeDetails() InstanceTypeDetails {
	if o == nil || o.InstanceTypeDetails == nil {
		var ret InstanceTypeDetails
		return ret
	}
	return *o.InstanceTypeDetails
}

// GetInstanceTypeDetailsOk returns a tuple with the InstanceTypeDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceTypeResp) GetInstanceTypeDetailsOk() (*InstanceTypeDetails, bool) {
	if o == nil || o.InstanceTypeDetails == nil {
		return nil, false
	}
	return o.InstanceTypeDetails, true
}

// HasInstanceTypeDetails returns a boolean if a field has been set.
func (o *InstanceTypeResp) HasInstanceTypeDetails() bool {
	if o != nil && o.InstanceTypeDetails != nil {
		return true
	}

	return false
}

// SetInstanceTypeDetails gets a reference to the given InstanceTypeDetails and assigns it to the InstanceTypeDetails field.
func (o *InstanceTypeResp) SetInstanceTypeDetails(v InstanceTypeDetails) {
	o.InstanceTypeDetails = &v
}

// GetMemSizeGB returns the MemSizeGB field value if set, zero value otherwise.
func (o *InstanceTypeResp) GetMemSizeGB() float64 {
	if o == nil || o.MemSizeGB == nil {
		var ret float64
		return ret
	}
	return *o.MemSizeGB
}

// GetMemSizeGBOk returns a tuple with the MemSizeGB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceTypeResp) GetMemSizeGBOk() (*float64, bool) {
	if o == nil || o.MemSizeGB == nil {
		return nil, false
	}
	return o.MemSizeGB, true
}

// HasMemSizeGB returns a boolean if a field has been set.
func (o *InstanceTypeResp) HasMemSizeGB() bool {
	if o != nil && o.MemSizeGB != nil {
		return true
	}

	return false
}

// SetMemSizeGB gets a reference to the given float64 and assigns it to the MemSizeGB field.
func (o *InstanceTypeResp) SetMemSizeGB(v float64) {
	o.MemSizeGB = &v
}

// GetNumCores returns the NumCores field value if set, zero value otherwise.
func (o *InstanceTypeResp) GetNumCores() float64 {
	if o == nil || o.NumCores == nil {
		var ret float64
		return ret
	}
	return *o.NumCores
}

// GetNumCoresOk returns a tuple with the NumCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceTypeResp) GetNumCoresOk() (*float64, bool) {
	if o == nil || o.NumCores == nil {
		return nil, false
	}
	return o.NumCores, true
}

// HasNumCores returns a boolean if a field has been set.
func (o *InstanceTypeResp) HasNumCores() bool {
	if o != nil && o.NumCores != nil {
		return true
	}

	return false
}

// SetNumCores gets a reference to the given float64 and assigns it to the NumCores field.
func (o *InstanceTypeResp) SetNumCores(v float64) {
	o.NumCores = &v
}

// GetProviderCode returns the ProviderCode field value if set, zero value otherwise.
func (o *InstanceTypeResp) GetProviderCode() string {
	if o == nil || o.ProviderCode == nil {
		var ret string
		return ret
	}
	return *o.ProviderCode
}

// GetProviderCodeOk returns a tuple with the ProviderCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceTypeResp) GetProviderCodeOk() (*string, bool) {
	if o == nil || o.ProviderCode == nil {
		return nil, false
	}
	return o.ProviderCode, true
}

// HasProviderCode returns a boolean if a field has been set.
func (o *InstanceTypeResp) HasProviderCode() bool {
	if o != nil && o.ProviderCode != nil {
		return true
	}

	return false
}

// SetProviderCode gets a reference to the given string and assigns it to the ProviderCode field.
func (o *InstanceTypeResp) SetProviderCode(v string) {
	o.ProviderCode = &v
}

// GetProviderUuid returns the ProviderUuid field value if set, zero value otherwise.
func (o *InstanceTypeResp) GetProviderUuid() string {
	if o == nil || o.ProviderUuid == nil {
		var ret string
		return ret
	}
	return *o.ProviderUuid
}

// GetProviderUuidOk returns a tuple with the ProviderUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceTypeResp) GetProviderUuidOk() (*string, bool) {
	if o == nil || o.ProviderUuid == nil {
		return nil, false
	}
	return o.ProviderUuid, true
}

// HasProviderUuid returns a boolean if a field has been set.
func (o *InstanceTypeResp) HasProviderUuid() bool {
	if o != nil && o.ProviderUuid != nil {
		return true
	}

	return false
}

// SetProviderUuid gets a reference to the given string and assigns it to the ProviderUuid field.
func (o *InstanceTypeResp) SetProviderUuid(v string) {
	o.ProviderUuid = &v
}

func (o InstanceTypeResp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if true {
		toSerialize["idKey"] = o.IdKey
	}
	if o.InstanceTypeCode != nil {
		toSerialize["instanceTypeCode"] = o.InstanceTypeCode
	}
	if o.InstanceTypeDetails != nil {
		toSerialize["instanceTypeDetails"] = o.InstanceTypeDetails
	}
	if o.MemSizeGB != nil {
		toSerialize["memSizeGB"] = o.MemSizeGB
	}
	if o.NumCores != nil {
		toSerialize["numCores"] = o.NumCores
	}
	if o.ProviderCode != nil {
		toSerialize["providerCode"] = o.ProviderCode
	}
	if o.ProviderUuid != nil {
		toSerialize["providerUuid"] = o.ProviderUuid
	}
	return json.Marshal(toSerialize)
}

type NullableInstanceTypeResp struct {
	value *InstanceTypeResp
	isSet bool
}

func (v NullableInstanceTypeResp) Get() *InstanceTypeResp {
	return v.value
}

func (v *NullableInstanceTypeResp) Set(val *InstanceTypeResp) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceTypeResp) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceTypeResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceTypeResp(val *InstanceTypeResp) *NullableInstanceTypeResp {
	return &NullableInstanceTypeResp{value: val, isSet: true}
}

func (v NullableInstanceTypeResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceTypeResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


