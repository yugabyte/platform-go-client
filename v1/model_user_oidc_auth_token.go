/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// UserOIDCAuthToken struct for UserOIDCAuthToken
type UserOIDCAuthToken struct {
	// User OIDC Auth token
	OidcAuthToken *string `json:"oidcAuthToken,omitempty"`
}

// NewUserOIDCAuthToken instantiates a new UserOIDCAuthToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserOIDCAuthToken() *UserOIDCAuthToken {
	this := UserOIDCAuthToken{}
	return &this
}

// NewUserOIDCAuthTokenWithDefaults instantiates a new UserOIDCAuthToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserOIDCAuthTokenWithDefaults() *UserOIDCAuthToken {
	this := UserOIDCAuthToken{}
	return &this
}

// GetOidcAuthToken returns the OidcAuthToken field value if set, zero value otherwise.
func (o *UserOIDCAuthToken) GetOidcAuthToken() string {
	if o == nil || o.OidcAuthToken == nil {
		var ret string
		return ret
	}
	return *o.OidcAuthToken
}

// GetOidcAuthTokenOk returns a tuple with the OidcAuthToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserOIDCAuthToken) GetOidcAuthTokenOk() (*string, bool) {
	if o == nil || o.OidcAuthToken == nil {
		return nil, false
	}
	return o.OidcAuthToken, true
}

// HasOidcAuthToken returns a boolean if a field has been set.
func (o *UserOIDCAuthToken) HasOidcAuthToken() bool {
	if o != nil && o.OidcAuthToken != nil {
		return true
	}

	return false
}

// SetOidcAuthToken gets a reference to the given string and assigns it to the OidcAuthToken field.
func (o *UserOIDCAuthToken) SetOidcAuthToken(v string) {
	o.OidcAuthToken = &v
}

func (o UserOIDCAuthToken) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OidcAuthToken != nil {
		toSerialize["oidcAuthToken"] = o.OidcAuthToken
	}
	return json.Marshal(toSerialize)
}

type NullableUserOIDCAuthToken struct {
	value *UserOIDCAuthToken
	isSet bool
}

func (v NullableUserOIDCAuthToken) Get() *UserOIDCAuthToken {
	return v.value
}

func (v *NullableUserOIDCAuthToken) Set(val *UserOIDCAuthToken) {
	v.value = val
	v.isSet = true
}

func (v NullableUserOIDCAuthToken) IsSet() bool {
	return v.isSet
}

func (v *NullableUserOIDCAuthToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserOIDCAuthToken(val *UserOIDCAuthToken) *NullableUserOIDCAuthToken {
	return &NullableUserOIDCAuthToken{value: val, isSet: true}
}

func (v NullableUserOIDCAuthToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserOIDCAuthToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


