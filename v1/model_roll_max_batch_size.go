/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// RollMaxBatchSize WARNING: This is a preview API that could change.Information about suggested number of servers to roll at a time
type RollMaxBatchSize struct {
	// WARNING: This is a preview API that could change.Suggested number nodes for primary cluster
	PrimaryBatchSize *int32 `json:"primaryBatchSize,omitempty"`
	// WARNING: This is a preview API that could change.Suggested number nodes for readonly cluster
	ReadReplicaBatchSize *int32 `json:"readReplicaBatchSize,omitempty"`
}

// NewRollMaxBatchSize instantiates a new RollMaxBatchSize object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRollMaxBatchSize() *RollMaxBatchSize {
	this := RollMaxBatchSize{}
	return &this
}

// NewRollMaxBatchSizeWithDefaults instantiates a new RollMaxBatchSize object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRollMaxBatchSizeWithDefaults() *RollMaxBatchSize {
	this := RollMaxBatchSize{}
	return &this
}

// GetPrimaryBatchSize returns the PrimaryBatchSize field value if set, zero value otherwise.
func (o *RollMaxBatchSize) GetPrimaryBatchSize() int32 {
	if o == nil || o.PrimaryBatchSize == nil {
		var ret int32
		return ret
	}
	return *o.PrimaryBatchSize
}

// GetPrimaryBatchSizeOk returns a tuple with the PrimaryBatchSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RollMaxBatchSize) GetPrimaryBatchSizeOk() (*int32, bool) {
	if o == nil || o.PrimaryBatchSize == nil {
		return nil, false
	}
	return o.PrimaryBatchSize, true
}

// HasPrimaryBatchSize returns a boolean if a field has been set.
func (o *RollMaxBatchSize) HasPrimaryBatchSize() bool {
	if o != nil && o.PrimaryBatchSize != nil {
		return true
	}

	return false
}

// SetPrimaryBatchSize gets a reference to the given int32 and assigns it to the PrimaryBatchSize field.
func (o *RollMaxBatchSize) SetPrimaryBatchSize(v int32) {
	o.PrimaryBatchSize = &v
}

// GetReadReplicaBatchSize returns the ReadReplicaBatchSize field value if set, zero value otherwise.
func (o *RollMaxBatchSize) GetReadReplicaBatchSize() int32 {
	if o == nil || o.ReadReplicaBatchSize == nil {
		var ret int32
		return ret
	}
	return *o.ReadReplicaBatchSize
}

// GetReadReplicaBatchSizeOk returns a tuple with the ReadReplicaBatchSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RollMaxBatchSize) GetReadReplicaBatchSizeOk() (*int32, bool) {
	if o == nil || o.ReadReplicaBatchSize == nil {
		return nil, false
	}
	return o.ReadReplicaBatchSize, true
}

// HasReadReplicaBatchSize returns a boolean if a field has been set.
func (o *RollMaxBatchSize) HasReadReplicaBatchSize() bool {
	if o != nil && o.ReadReplicaBatchSize != nil {
		return true
	}

	return false
}

// SetReadReplicaBatchSize gets a reference to the given int32 and assigns it to the ReadReplicaBatchSize field.
func (o *RollMaxBatchSize) SetReadReplicaBatchSize(v int32) {
	o.ReadReplicaBatchSize = &v
}

func (o RollMaxBatchSize) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PrimaryBatchSize != nil {
		toSerialize["primaryBatchSize"] = o.PrimaryBatchSize
	}
	if o.ReadReplicaBatchSize != nil {
		toSerialize["readReplicaBatchSize"] = o.ReadReplicaBatchSize
	}
	return json.Marshal(toSerialize)
}

type NullableRollMaxBatchSize struct {
	value *RollMaxBatchSize
	isSet bool
}

func (v NullableRollMaxBatchSize) Get() *RollMaxBatchSize {
	return v.value
}

func (v *NullableRollMaxBatchSize) Set(val *RollMaxBatchSize) {
	v.value = val
	v.isSet = true
}

func (v NullableRollMaxBatchSize) IsSet() bool {
	return v.isSet
}

func (v *NullableRollMaxBatchSize) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRollMaxBatchSize(val *RollMaxBatchSize) *NullableRollMaxBatchSize {
	return &NullableRollMaxBatchSize{value: val, isSet: true}
}

func (v NullableRollMaxBatchSize) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRollMaxBatchSize) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


