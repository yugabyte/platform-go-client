/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// NodeQueryDistributionDetails struct for NodeQueryDistributionDetails
type NodeQueryDistributionDetails struct {
	Node string `json:"node"`
	NumDelete int32 `json:"numDelete"`
	NumInsert int32 `json:"numInsert"`
	NumSelect int32 `json:"numSelect"`
	NumUpdate int32 `json:"numUpdate"`
}

// NewNodeQueryDistributionDetails instantiates a new NodeQueryDistributionDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodeQueryDistributionDetails(node string, numDelete int32, numInsert int32, numSelect int32, numUpdate int32) *NodeQueryDistributionDetails {
	this := NodeQueryDistributionDetails{}
	this.Node = node
	this.NumDelete = numDelete
	this.NumInsert = numInsert
	this.NumSelect = numSelect
	this.NumUpdate = numUpdate
	return &this
}

// NewNodeQueryDistributionDetailsWithDefaults instantiates a new NodeQueryDistributionDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeQueryDistributionDetailsWithDefaults() *NodeQueryDistributionDetails {
	this := NodeQueryDistributionDetails{}
	return &this
}

// GetNode returns the Node field value
func (o *NodeQueryDistributionDetails) GetNode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Node
}

// GetNodeOk returns a tuple with the Node field value
// and a boolean to check if the value has been set.
func (o *NodeQueryDistributionDetails) GetNodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Node, true
}

// SetNode sets field value
func (o *NodeQueryDistributionDetails) SetNode(v string) {
	o.Node = v
}

// GetNumDelete returns the NumDelete field value
func (o *NodeQueryDistributionDetails) GetNumDelete() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumDelete
}

// GetNumDeleteOk returns a tuple with the NumDelete field value
// and a boolean to check if the value has been set.
func (o *NodeQueryDistributionDetails) GetNumDeleteOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NumDelete, true
}

// SetNumDelete sets field value
func (o *NodeQueryDistributionDetails) SetNumDelete(v int32) {
	o.NumDelete = v
}

// GetNumInsert returns the NumInsert field value
func (o *NodeQueryDistributionDetails) GetNumInsert() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumInsert
}

// GetNumInsertOk returns a tuple with the NumInsert field value
// and a boolean to check if the value has been set.
func (o *NodeQueryDistributionDetails) GetNumInsertOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NumInsert, true
}

// SetNumInsert sets field value
func (o *NodeQueryDistributionDetails) SetNumInsert(v int32) {
	o.NumInsert = v
}

// GetNumSelect returns the NumSelect field value
func (o *NodeQueryDistributionDetails) GetNumSelect() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumSelect
}

// GetNumSelectOk returns a tuple with the NumSelect field value
// and a boolean to check if the value has been set.
func (o *NodeQueryDistributionDetails) GetNumSelectOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NumSelect, true
}

// SetNumSelect sets field value
func (o *NodeQueryDistributionDetails) SetNumSelect(v int32) {
	o.NumSelect = v
}

// GetNumUpdate returns the NumUpdate field value
func (o *NodeQueryDistributionDetails) GetNumUpdate() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumUpdate
}

// GetNumUpdateOk returns a tuple with the NumUpdate field value
// and a boolean to check if the value has been set.
func (o *NodeQueryDistributionDetails) GetNumUpdateOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NumUpdate, true
}

// SetNumUpdate sets field value
func (o *NodeQueryDistributionDetails) SetNumUpdate(v int32) {
	o.NumUpdate = v
}

func (o NodeQueryDistributionDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["node"] = o.Node
	}
	if true {
		toSerialize["numDelete"] = o.NumDelete
	}
	if true {
		toSerialize["numInsert"] = o.NumInsert
	}
	if true {
		toSerialize["numSelect"] = o.NumSelect
	}
	if true {
		toSerialize["numUpdate"] = o.NumUpdate
	}
	return json.Marshal(toSerialize)
}

type NullableNodeQueryDistributionDetails struct {
	value *NodeQueryDistributionDetails
	isSet bool
}

func (v NullableNodeQueryDistributionDetails) Get() *NodeQueryDistributionDetails {
	return v.value
}

func (v *NullableNodeQueryDistributionDetails) Set(val *NodeQueryDistributionDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableNodeQueryDistributionDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableNodeQueryDistributionDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodeQueryDistributionDetails(val *NodeQueryDistributionDetails) *NullableNodeQueryDistributionDetails {
	return &NullableNodeQueryDistributionDetails{value: val, isSet: true}
}

func (v NullableNodeQueryDistributionDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodeQueryDistributionDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


