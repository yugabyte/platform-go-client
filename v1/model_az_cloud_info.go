/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// AZCloudInfo struct for AZCloudInfo
type AZCloudInfo struct {
	Kubernetes *KubernetesRegionInfo `json:"kubernetes,omitempty"`
}

// NewAZCloudInfo instantiates a new AZCloudInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAZCloudInfo() *AZCloudInfo {
	this := AZCloudInfo{}
	return &this
}

// NewAZCloudInfoWithDefaults instantiates a new AZCloudInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAZCloudInfoWithDefaults() *AZCloudInfo {
	this := AZCloudInfo{}
	return &this
}

// GetKubernetes returns the Kubernetes field value if set, zero value otherwise.
func (o *AZCloudInfo) GetKubernetes() KubernetesRegionInfo {
	if o == nil || o.Kubernetes == nil {
		var ret KubernetesRegionInfo
		return ret
	}
	return *o.Kubernetes
}

// GetKubernetesOk returns a tuple with the Kubernetes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AZCloudInfo) GetKubernetesOk() (*KubernetesRegionInfo, bool) {
	if o == nil || o.Kubernetes == nil {
		return nil, false
	}
	return o.Kubernetes, true
}

// HasKubernetes returns a boolean if a field has been set.
func (o *AZCloudInfo) HasKubernetes() bool {
	if o != nil && o.Kubernetes != nil {
		return true
	}

	return false
}

// SetKubernetes gets a reference to the given KubernetesRegionInfo and assigns it to the Kubernetes field.
func (o *AZCloudInfo) SetKubernetes(v KubernetesRegionInfo) {
	o.Kubernetes = &v
}

func (o AZCloudInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Kubernetes != nil {
		toSerialize["kubernetes"] = o.Kubernetes
	}
	return json.Marshal(toSerialize)
}

type NullableAZCloudInfo struct {
	value *AZCloudInfo
	isSet bool
}

func (v NullableAZCloudInfo) Get() *AZCloudInfo {
	return v.value
}

func (v *NullableAZCloudInfo) Set(val *AZCloudInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAZCloudInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAZCloudInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAZCloudInfo(val *AZCloudInfo) *NullableAZCloudInfo {
	return &NullableAZCloudInfo{value: val, isSet: true}
}

func (v NullableAZCloudInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAZCloudInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


