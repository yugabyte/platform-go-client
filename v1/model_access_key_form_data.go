/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// AccessKeyFormData struct for AccessKeyFormData
type AccessKeyFormData struct {
	ExpirationThresholdDays *int32 `json:"expirationThresholdDays,omitempty"`
	KeyCode string `json:"keyCode"`
	KeyContent string `json:"keyContent"`
	KeyType string `json:"keyType"`
}

// NewAccessKeyFormData instantiates a new AccessKeyFormData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessKeyFormData(keyCode string, keyContent string, keyType string) *AccessKeyFormData {
	this := AccessKeyFormData{}
	this.KeyCode = keyCode
	this.KeyContent = keyContent
	this.KeyType = keyType
	return &this
}

// NewAccessKeyFormDataWithDefaults instantiates a new AccessKeyFormData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessKeyFormDataWithDefaults() *AccessKeyFormData {
	this := AccessKeyFormData{}
	return &this
}

// GetExpirationThresholdDays returns the ExpirationThresholdDays field value if set, zero value otherwise.
func (o *AccessKeyFormData) GetExpirationThresholdDays() int32 {
	if o == nil || o.ExpirationThresholdDays == nil {
		var ret int32
		return ret
	}
	return *o.ExpirationThresholdDays
}

// GetExpirationThresholdDaysOk returns a tuple with the ExpirationThresholdDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKeyFormData) GetExpirationThresholdDaysOk() (*int32, bool) {
	if o == nil || o.ExpirationThresholdDays == nil {
		return nil, false
	}
	return o.ExpirationThresholdDays, true
}

// HasExpirationThresholdDays returns a boolean if a field has been set.
func (o *AccessKeyFormData) HasExpirationThresholdDays() bool {
	if o != nil && o.ExpirationThresholdDays != nil {
		return true
	}

	return false
}

// SetExpirationThresholdDays gets a reference to the given int32 and assigns it to the ExpirationThresholdDays field.
func (o *AccessKeyFormData) SetExpirationThresholdDays(v int32) {
	o.ExpirationThresholdDays = &v
}

// GetKeyCode returns the KeyCode field value
func (o *AccessKeyFormData) GetKeyCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyCode
}

// GetKeyCodeOk returns a tuple with the KeyCode field value
// and a boolean to check if the value has been set.
func (o *AccessKeyFormData) GetKeyCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.KeyCode, true
}

// SetKeyCode sets field value
func (o *AccessKeyFormData) SetKeyCode(v string) {
	o.KeyCode = v
}

// GetKeyContent returns the KeyContent field value
func (o *AccessKeyFormData) GetKeyContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyContent
}

// GetKeyContentOk returns a tuple with the KeyContent field value
// and a boolean to check if the value has been set.
func (o *AccessKeyFormData) GetKeyContentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.KeyContent, true
}

// SetKeyContent sets field value
func (o *AccessKeyFormData) SetKeyContent(v string) {
	o.KeyContent = v
}

// GetKeyType returns the KeyType field value
func (o *AccessKeyFormData) GetKeyType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value
// and a boolean to check if the value has been set.
func (o *AccessKeyFormData) GetKeyTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.KeyType, true
}

// SetKeyType sets field value
func (o *AccessKeyFormData) SetKeyType(v string) {
	o.KeyType = v
}

func (o AccessKeyFormData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ExpirationThresholdDays != nil {
		toSerialize["expirationThresholdDays"] = o.ExpirationThresholdDays
	}
	if true {
		toSerialize["keyCode"] = o.KeyCode
	}
	if true {
		toSerialize["keyContent"] = o.KeyContent
	}
	if true {
		toSerialize["keyType"] = o.KeyType
	}
	return json.Marshal(toSerialize)
}

type NullableAccessKeyFormData struct {
	value *AccessKeyFormData
	isSet bool
}

func (v NullableAccessKeyFormData) Get() *AccessKeyFormData {
	return v.value
}

func (v *NullableAccessKeyFormData) Set(val *AccessKeyFormData) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessKeyFormData) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessKeyFormData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessKeyFormData(val *AccessKeyFormData) *NullableAccessKeyFormData {
	return &NullableAccessKeyFormData{value: val, isSet: true}
}

func (v NullableAccessKeyFormData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessKeyFormData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


