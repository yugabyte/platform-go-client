/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// RegionDetails struct for RegionDetails
type RegionDetails struct {
	CloudInfo *RegionCloudInfo `json:"cloudInfo,omitempty"`
}

// NewRegionDetails instantiates a new RegionDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegionDetails() *RegionDetails {
	this := RegionDetails{}
	return &this
}

// NewRegionDetailsWithDefaults instantiates a new RegionDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegionDetailsWithDefaults() *RegionDetails {
	this := RegionDetails{}
	return &this
}

// GetCloudInfo returns the CloudInfo field value if set, zero value otherwise.
func (o *RegionDetails) GetCloudInfo() RegionCloudInfo {
	if o == nil || o.CloudInfo == nil {
		var ret RegionCloudInfo
		return ret
	}
	return *o.CloudInfo
}

// GetCloudInfoOk returns a tuple with the CloudInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionDetails) GetCloudInfoOk() (*RegionCloudInfo, bool) {
	if o == nil || o.CloudInfo == nil {
		return nil, false
	}
	return o.CloudInfo, true
}

// HasCloudInfo returns a boolean if a field has been set.
func (o *RegionDetails) HasCloudInfo() bool {
	if o != nil && o.CloudInfo != nil {
		return true
	}

	return false
}

// SetCloudInfo gets a reference to the given RegionCloudInfo and assigns it to the CloudInfo field.
func (o *RegionDetails) SetCloudInfo(v RegionCloudInfo) {
	o.CloudInfo = &v
}

func (o RegionDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CloudInfo != nil {
		toSerialize["cloudInfo"] = o.CloudInfo
	}
	return json.Marshal(toSerialize)
}

type NullableRegionDetails struct {
	value *RegionDetails
	isSet bool
}

func (v NullableRegionDetails) Get() *RegionDetails {
	return v.value
}

func (v *NullableRegionDetails) Set(val *RegionDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableRegionDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableRegionDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegionDetails(val *RegionDetails) *NullableRegionDetails {
	return &NullableRegionDetails{value: val, isSet: true}
}

func (v NullableRegionDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegionDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


