/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// KubernetesOverridesUpgradeParams struct for KubernetesOverridesUpgradeParams
type KubernetesOverridesUpgradeParams struct {
	AllowInsecure *bool `json:"allowInsecure,omitempty"`
	Arch *string `json:"arch,omitempty"`
	AzOverrides map[string]string `json:"azOverrides"`
	Capability *string `json:"capability,omitempty"`
	ClientRootCA *string `json:"clientRootCA,omitempty"`
	Clusters []Cluster `json:"clusters"`
	// Amazon Resource Name (ARN) of the CMK
	CmkArn *string `json:"cmkArn,omitempty"`
	CommunicationPorts *CommunicationPorts `json:"communicationPorts,omitempty"`
	CreatingUser Users `json:"creatingUser"`
	CurrentClusterType *string `json:"currentClusterType,omitempty"`
	DeviceInfo *DeviceInfo `json:"deviceInfo,omitempty"`
	EnableYbc *bool `json:"enableYbc,omitempty"`
	EncryptionAtRestConfig *EncryptionAtRestConfig `json:"encryptionAtRestConfig,omitempty"`
	// Error message
	ErrorString *string `json:"errorString,omitempty"`
	// Expected universe version
	ExpectedUniverseVersion *int32 `json:"expectedUniverseVersion,omitempty"`
	ExtraDependencies *ExtraDependencies `json:"extraDependencies,omitempty"`
	ImportedState *string `json:"importedState,omitempty"`
	InstallYbc *bool `json:"installYbc,omitempty"`
	IsKubernetesOperatorControlled *bool `json:"isKubernetesOperatorControlled,omitempty"`
	// Available since YBA version 2.20.2.0
	IsSoftwareRollbackAllowed *bool `json:"isSoftwareRollbackAllowed,omitempty"`
	ItestS3PackagePath *string `json:"itestS3PackagePath,omitempty"`
	KubernetesUpgradeSupported bool `json:"kubernetesUpgradeSupported"`
	MastersInDefaultRegion *bool `json:"mastersInDefaultRegion,omitempty"`
	NextClusterIndex *int32 `json:"nextClusterIndex,omitempty"`
	// Node details
	NodeDetailsSet *[]NodeDetails `json:"nodeDetailsSet,omitempty"`
	// Node exporter user
	NodeExporterUser *string `json:"nodeExporterUser,omitempty"`
	NodePrefix *string `json:"nodePrefix,omitempty"`
	NodesResizeAvailable *bool `json:"nodesResizeAvailable,omitempty"`
	PlacementModificationTaskUuid *string `json:"placementModificationTaskUuid,omitempty"`
	PlatformUrl string `json:"platformUrl"`
	PlatformVersion string `json:"platformVersion"`
	PrevYBSoftwareConfig *PrevYBSoftwareConfig `json:"prevYBSoftwareConfig,omitempty"`
	// Previous task UUID of a retry
	PreviousTaskUUID *string `json:"previousTaskUUID,omitempty"`
	RemotePackagePath *string `json:"remotePackagePath,omitempty"`
	ResetAZConfig *bool `json:"resetAZConfig,omitempty"`
	RootAndClientRootCASame *bool `json:"rootAndClientRootCASame,omitempty"`
	RootCA *string `json:"rootCA,omitempty"`
	SetTxnTableWaitCountFlag *bool `json:"setTxnTableWaitCountFlag,omitempty"`
	SleepAfterMasterRestartMillis int32 `json:"sleepAfterMasterRestartMillis"`
	SleepAfterTServerRestartMillis int32 `json:"sleepAfterTServerRestartMillis"`
	SoftwareUpgradeState *string `json:"softwareUpgradeState,omitempty"`
	// The source universe's xcluster replication relationships
	SourceXClusterConfigs *[]string `json:"sourceXClusterConfigs,omitempty"`
	SshUserOverride *string `json:"sshUserOverride,omitempty"`
	// The target universe's xcluster replication relationships
	TargetXClusterConfigs *[]string `json:"targetXClusterConfigs,omitempty"`
	UniverseOverrides string `json:"universeOverrides"`
	UniversePaused *bool `json:"universePaused,omitempty"`
	// Associated universe UUID
	UniverseUUID *string `json:"universeUUID,omitempty"`
	UpdateInProgress *bool `json:"updateInProgress,omitempty"`
	UpdateOptions *[]string `json:"updateOptions,omitempty"`
	UpdateSucceeded *bool `json:"updateSucceeded,omitempty"`
	UpdatingTask *string `json:"updatingTask,omitempty"`
	UpdatingTaskUUID *string `json:"updatingTaskUUID,omitempty"`
	UpgradeOption string `json:"upgradeOption"`
	UseNewHelmNamingStyle *bool `json:"useNewHelmNamingStyle,omitempty"`
	UserAZSelected *bool `json:"userAZSelected,omitempty"`
	XclusterInfo *XClusterInfo `json:"xclusterInfo,omitempty"`
	// Previous software version
	YbPrevSoftwareVersion *string `json:"ybPrevSoftwareVersion,omitempty"`
	YbcInstalled *bool `json:"ybcInstalled,omitempty"`
	YbcSoftwareVersion *string `json:"ybcSoftwareVersion,omitempty"`
}

// NewKubernetesOverridesUpgradeParams instantiates a new KubernetesOverridesUpgradeParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesOverridesUpgradeParams(azOverrides map[string]string, clusters []Cluster, creatingUser Users, kubernetesUpgradeSupported bool, platformUrl string, platformVersion string, sleepAfterMasterRestartMillis int32, sleepAfterTServerRestartMillis int32, universeOverrides string, upgradeOption string) *KubernetesOverridesUpgradeParams {
	this := KubernetesOverridesUpgradeParams{}
	this.AzOverrides = azOverrides
	this.Clusters = clusters
	this.CreatingUser = creatingUser
	this.KubernetesUpgradeSupported = kubernetesUpgradeSupported
	this.PlatformUrl = platformUrl
	this.PlatformVersion = platformVersion
	this.SleepAfterMasterRestartMillis = sleepAfterMasterRestartMillis
	this.SleepAfterTServerRestartMillis = sleepAfterTServerRestartMillis
	this.UniverseOverrides = universeOverrides
	this.UpgradeOption = upgradeOption
	return &this
}

// NewKubernetesOverridesUpgradeParamsWithDefaults instantiates a new KubernetesOverridesUpgradeParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesOverridesUpgradeParamsWithDefaults() *KubernetesOverridesUpgradeParams {
	this := KubernetesOverridesUpgradeParams{}
	return &this
}

// GetAllowInsecure returns the AllowInsecure field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetAllowInsecure() bool {
	if o == nil || o.AllowInsecure == nil {
		var ret bool
		return ret
	}
	return *o.AllowInsecure
}

// GetAllowInsecureOk returns a tuple with the AllowInsecure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetAllowInsecureOk() (*bool, bool) {
	if o == nil || o.AllowInsecure == nil {
		return nil, false
	}
	return o.AllowInsecure, true
}

// HasAllowInsecure returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasAllowInsecure() bool {
	if o != nil && o.AllowInsecure != nil {
		return true
	}

	return false
}

// SetAllowInsecure gets a reference to the given bool and assigns it to the AllowInsecure field.
func (o *KubernetesOverridesUpgradeParams) SetAllowInsecure(v bool) {
	o.AllowInsecure = &v
}

// GetArch returns the Arch field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetArch() string {
	if o == nil || o.Arch == nil {
		var ret string
		return ret
	}
	return *o.Arch
}

// GetArchOk returns a tuple with the Arch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetArchOk() (*string, bool) {
	if o == nil || o.Arch == nil {
		return nil, false
	}
	return o.Arch, true
}

// HasArch returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasArch() bool {
	if o != nil && o.Arch != nil {
		return true
	}

	return false
}

// SetArch gets a reference to the given string and assigns it to the Arch field.
func (o *KubernetesOverridesUpgradeParams) SetArch(v string) {
	o.Arch = &v
}

// GetAzOverrides returns the AzOverrides field value
func (o *KubernetesOverridesUpgradeParams) GetAzOverrides() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.AzOverrides
}

// GetAzOverridesOk returns a tuple with the AzOverrides field value
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetAzOverridesOk() (*map[string]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AzOverrides, true
}

// SetAzOverrides sets field value
func (o *KubernetesOverridesUpgradeParams) SetAzOverrides(v map[string]string) {
	o.AzOverrides = v
}

// GetCapability returns the Capability field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetCapability() string {
	if o == nil || o.Capability == nil {
		var ret string
		return ret
	}
	return *o.Capability
}

// GetCapabilityOk returns a tuple with the Capability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetCapabilityOk() (*string, bool) {
	if o == nil || o.Capability == nil {
		return nil, false
	}
	return o.Capability, true
}

// HasCapability returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasCapability() bool {
	if o != nil && o.Capability != nil {
		return true
	}

	return false
}

// SetCapability gets a reference to the given string and assigns it to the Capability field.
func (o *KubernetesOverridesUpgradeParams) SetCapability(v string) {
	o.Capability = &v
}

// GetClientRootCA returns the ClientRootCA field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetClientRootCA() string {
	if o == nil || o.ClientRootCA == nil {
		var ret string
		return ret
	}
	return *o.ClientRootCA
}

// GetClientRootCAOk returns a tuple with the ClientRootCA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetClientRootCAOk() (*string, bool) {
	if o == nil || o.ClientRootCA == nil {
		return nil, false
	}
	return o.ClientRootCA, true
}

// HasClientRootCA returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasClientRootCA() bool {
	if o != nil && o.ClientRootCA != nil {
		return true
	}

	return false
}

// SetClientRootCA gets a reference to the given string and assigns it to the ClientRootCA field.
func (o *KubernetesOverridesUpgradeParams) SetClientRootCA(v string) {
	o.ClientRootCA = &v
}

// GetClusters returns the Clusters field value
func (o *KubernetesOverridesUpgradeParams) GetClusters() []Cluster {
	if o == nil {
		var ret []Cluster
		return ret
	}

	return o.Clusters
}

// GetClustersOk returns a tuple with the Clusters field value
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetClustersOk() (*[]Cluster, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Clusters, true
}

// SetClusters sets field value
func (o *KubernetesOverridesUpgradeParams) SetClusters(v []Cluster) {
	o.Clusters = v
}

// GetCmkArn returns the CmkArn field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetCmkArn() string {
	if o == nil || o.CmkArn == nil {
		var ret string
		return ret
	}
	return *o.CmkArn
}

// GetCmkArnOk returns a tuple with the CmkArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetCmkArnOk() (*string, bool) {
	if o == nil || o.CmkArn == nil {
		return nil, false
	}
	return o.CmkArn, true
}

// HasCmkArn returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasCmkArn() bool {
	if o != nil && o.CmkArn != nil {
		return true
	}

	return false
}

// SetCmkArn gets a reference to the given string and assigns it to the CmkArn field.
func (o *KubernetesOverridesUpgradeParams) SetCmkArn(v string) {
	o.CmkArn = &v
}

// GetCommunicationPorts returns the CommunicationPorts field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetCommunicationPorts() CommunicationPorts {
	if o == nil || o.CommunicationPorts == nil {
		var ret CommunicationPorts
		return ret
	}
	return *o.CommunicationPorts
}

// GetCommunicationPortsOk returns a tuple with the CommunicationPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetCommunicationPortsOk() (*CommunicationPorts, bool) {
	if o == nil || o.CommunicationPorts == nil {
		return nil, false
	}
	return o.CommunicationPorts, true
}

// HasCommunicationPorts returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasCommunicationPorts() bool {
	if o != nil && o.CommunicationPorts != nil {
		return true
	}

	return false
}

// SetCommunicationPorts gets a reference to the given CommunicationPorts and assigns it to the CommunicationPorts field.
func (o *KubernetesOverridesUpgradeParams) SetCommunicationPorts(v CommunicationPorts) {
	o.CommunicationPorts = &v
}

// GetCreatingUser returns the CreatingUser field value
func (o *KubernetesOverridesUpgradeParams) GetCreatingUser() Users {
	if o == nil {
		var ret Users
		return ret
	}

	return o.CreatingUser
}

// GetCreatingUserOk returns a tuple with the CreatingUser field value
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetCreatingUserOk() (*Users, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreatingUser, true
}

// SetCreatingUser sets field value
func (o *KubernetesOverridesUpgradeParams) SetCreatingUser(v Users) {
	o.CreatingUser = v
}

// GetCurrentClusterType returns the CurrentClusterType field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetCurrentClusterType() string {
	if o == nil || o.CurrentClusterType == nil {
		var ret string
		return ret
	}
	return *o.CurrentClusterType
}

// GetCurrentClusterTypeOk returns a tuple with the CurrentClusterType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetCurrentClusterTypeOk() (*string, bool) {
	if o == nil || o.CurrentClusterType == nil {
		return nil, false
	}
	return o.CurrentClusterType, true
}

// HasCurrentClusterType returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasCurrentClusterType() bool {
	if o != nil && o.CurrentClusterType != nil {
		return true
	}

	return false
}

// SetCurrentClusterType gets a reference to the given string and assigns it to the CurrentClusterType field.
func (o *KubernetesOverridesUpgradeParams) SetCurrentClusterType(v string) {
	o.CurrentClusterType = &v
}

// GetDeviceInfo returns the DeviceInfo field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetDeviceInfo() DeviceInfo {
	if o == nil || o.DeviceInfo == nil {
		var ret DeviceInfo
		return ret
	}
	return *o.DeviceInfo
}

// GetDeviceInfoOk returns a tuple with the DeviceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetDeviceInfoOk() (*DeviceInfo, bool) {
	if o == nil || o.DeviceInfo == nil {
		return nil, false
	}
	return o.DeviceInfo, true
}

// HasDeviceInfo returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasDeviceInfo() bool {
	if o != nil && o.DeviceInfo != nil {
		return true
	}

	return false
}

// SetDeviceInfo gets a reference to the given DeviceInfo and assigns it to the DeviceInfo field.
func (o *KubernetesOverridesUpgradeParams) SetDeviceInfo(v DeviceInfo) {
	o.DeviceInfo = &v
}

// GetEnableYbc returns the EnableYbc field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetEnableYbc() bool {
	if o == nil || o.EnableYbc == nil {
		var ret bool
		return ret
	}
	return *o.EnableYbc
}

// GetEnableYbcOk returns a tuple with the EnableYbc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetEnableYbcOk() (*bool, bool) {
	if o == nil || o.EnableYbc == nil {
		return nil, false
	}
	return o.EnableYbc, true
}

// HasEnableYbc returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasEnableYbc() bool {
	if o != nil && o.EnableYbc != nil {
		return true
	}

	return false
}

// SetEnableYbc gets a reference to the given bool and assigns it to the EnableYbc field.
func (o *KubernetesOverridesUpgradeParams) SetEnableYbc(v bool) {
	o.EnableYbc = &v
}

// GetEncryptionAtRestConfig returns the EncryptionAtRestConfig field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetEncryptionAtRestConfig() EncryptionAtRestConfig {
	if o == nil || o.EncryptionAtRestConfig == nil {
		var ret EncryptionAtRestConfig
		return ret
	}
	return *o.EncryptionAtRestConfig
}

// GetEncryptionAtRestConfigOk returns a tuple with the EncryptionAtRestConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetEncryptionAtRestConfigOk() (*EncryptionAtRestConfig, bool) {
	if o == nil || o.EncryptionAtRestConfig == nil {
		return nil, false
	}
	return o.EncryptionAtRestConfig, true
}

// HasEncryptionAtRestConfig returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasEncryptionAtRestConfig() bool {
	if o != nil && o.EncryptionAtRestConfig != nil {
		return true
	}

	return false
}

// SetEncryptionAtRestConfig gets a reference to the given EncryptionAtRestConfig and assigns it to the EncryptionAtRestConfig field.
func (o *KubernetesOverridesUpgradeParams) SetEncryptionAtRestConfig(v EncryptionAtRestConfig) {
	o.EncryptionAtRestConfig = &v
}

// GetErrorString returns the ErrorString field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetErrorString() string {
	if o == nil || o.ErrorString == nil {
		var ret string
		return ret
	}
	return *o.ErrorString
}

// GetErrorStringOk returns a tuple with the ErrorString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetErrorStringOk() (*string, bool) {
	if o == nil || o.ErrorString == nil {
		return nil, false
	}
	return o.ErrorString, true
}

// HasErrorString returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasErrorString() bool {
	if o != nil && o.ErrorString != nil {
		return true
	}

	return false
}

// SetErrorString gets a reference to the given string and assigns it to the ErrorString field.
func (o *KubernetesOverridesUpgradeParams) SetErrorString(v string) {
	o.ErrorString = &v
}

// GetExpectedUniverseVersion returns the ExpectedUniverseVersion field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetExpectedUniverseVersion() int32 {
	if o == nil || o.ExpectedUniverseVersion == nil {
		var ret int32
		return ret
	}
	return *o.ExpectedUniverseVersion
}

// GetExpectedUniverseVersionOk returns a tuple with the ExpectedUniverseVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetExpectedUniverseVersionOk() (*int32, bool) {
	if o == nil || o.ExpectedUniverseVersion == nil {
		return nil, false
	}
	return o.ExpectedUniverseVersion, true
}

// HasExpectedUniverseVersion returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasExpectedUniverseVersion() bool {
	if o != nil && o.ExpectedUniverseVersion != nil {
		return true
	}

	return false
}

// SetExpectedUniverseVersion gets a reference to the given int32 and assigns it to the ExpectedUniverseVersion field.
func (o *KubernetesOverridesUpgradeParams) SetExpectedUniverseVersion(v int32) {
	o.ExpectedUniverseVersion = &v
}

// GetExtraDependencies returns the ExtraDependencies field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetExtraDependencies() ExtraDependencies {
	if o == nil || o.ExtraDependencies == nil {
		var ret ExtraDependencies
		return ret
	}
	return *o.ExtraDependencies
}

// GetExtraDependenciesOk returns a tuple with the ExtraDependencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetExtraDependenciesOk() (*ExtraDependencies, bool) {
	if o == nil || o.ExtraDependencies == nil {
		return nil, false
	}
	return o.ExtraDependencies, true
}

// HasExtraDependencies returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasExtraDependencies() bool {
	if o != nil && o.ExtraDependencies != nil {
		return true
	}

	return false
}

// SetExtraDependencies gets a reference to the given ExtraDependencies and assigns it to the ExtraDependencies field.
func (o *KubernetesOverridesUpgradeParams) SetExtraDependencies(v ExtraDependencies) {
	o.ExtraDependencies = &v
}

// GetImportedState returns the ImportedState field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetImportedState() string {
	if o == nil || o.ImportedState == nil {
		var ret string
		return ret
	}
	return *o.ImportedState
}

// GetImportedStateOk returns a tuple with the ImportedState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetImportedStateOk() (*string, bool) {
	if o == nil || o.ImportedState == nil {
		return nil, false
	}
	return o.ImportedState, true
}

// HasImportedState returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasImportedState() bool {
	if o != nil && o.ImportedState != nil {
		return true
	}

	return false
}

// SetImportedState gets a reference to the given string and assigns it to the ImportedState field.
func (o *KubernetesOverridesUpgradeParams) SetImportedState(v string) {
	o.ImportedState = &v
}

// GetInstallYbc returns the InstallYbc field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetInstallYbc() bool {
	if o == nil || o.InstallYbc == nil {
		var ret bool
		return ret
	}
	return *o.InstallYbc
}

// GetInstallYbcOk returns a tuple with the InstallYbc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetInstallYbcOk() (*bool, bool) {
	if o == nil || o.InstallYbc == nil {
		return nil, false
	}
	return o.InstallYbc, true
}

// HasInstallYbc returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasInstallYbc() bool {
	if o != nil && o.InstallYbc != nil {
		return true
	}

	return false
}

// SetInstallYbc gets a reference to the given bool and assigns it to the InstallYbc field.
func (o *KubernetesOverridesUpgradeParams) SetInstallYbc(v bool) {
	o.InstallYbc = &v
}

// GetIsKubernetesOperatorControlled returns the IsKubernetesOperatorControlled field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetIsKubernetesOperatorControlled() bool {
	if o == nil || o.IsKubernetesOperatorControlled == nil {
		var ret bool
		return ret
	}
	return *o.IsKubernetesOperatorControlled
}

// GetIsKubernetesOperatorControlledOk returns a tuple with the IsKubernetesOperatorControlled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetIsKubernetesOperatorControlledOk() (*bool, bool) {
	if o == nil || o.IsKubernetesOperatorControlled == nil {
		return nil, false
	}
	return o.IsKubernetesOperatorControlled, true
}

// HasIsKubernetesOperatorControlled returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasIsKubernetesOperatorControlled() bool {
	if o != nil && o.IsKubernetesOperatorControlled != nil {
		return true
	}

	return false
}

// SetIsKubernetesOperatorControlled gets a reference to the given bool and assigns it to the IsKubernetesOperatorControlled field.
func (o *KubernetesOverridesUpgradeParams) SetIsKubernetesOperatorControlled(v bool) {
	o.IsKubernetesOperatorControlled = &v
}

// GetIsSoftwareRollbackAllowed returns the IsSoftwareRollbackAllowed field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetIsSoftwareRollbackAllowed() bool {
	if o == nil || o.IsSoftwareRollbackAllowed == nil {
		var ret bool
		return ret
	}
	return *o.IsSoftwareRollbackAllowed
}

// GetIsSoftwareRollbackAllowedOk returns a tuple with the IsSoftwareRollbackAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetIsSoftwareRollbackAllowedOk() (*bool, bool) {
	if o == nil || o.IsSoftwareRollbackAllowed == nil {
		return nil, false
	}
	return o.IsSoftwareRollbackAllowed, true
}

// HasIsSoftwareRollbackAllowed returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasIsSoftwareRollbackAllowed() bool {
	if o != nil && o.IsSoftwareRollbackAllowed != nil {
		return true
	}

	return false
}

// SetIsSoftwareRollbackAllowed gets a reference to the given bool and assigns it to the IsSoftwareRollbackAllowed field.
func (o *KubernetesOverridesUpgradeParams) SetIsSoftwareRollbackAllowed(v bool) {
	o.IsSoftwareRollbackAllowed = &v
}

// GetItestS3PackagePath returns the ItestS3PackagePath field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetItestS3PackagePath() string {
	if o == nil || o.ItestS3PackagePath == nil {
		var ret string
		return ret
	}
	return *o.ItestS3PackagePath
}

// GetItestS3PackagePathOk returns a tuple with the ItestS3PackagePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetItestS3PackagePathOk() (*string, bool) {
	if o == nil || o.ItestS3PackagePath == nil {
		return nil, false
	}
	return o.ItestS3PackagePath, true
}

// HasItestS3PackagePath returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasItestS3PackagePath() bool {
	if o != nil && o.ItestS3PackagePath != nil {
		return true
	}

	return false
}

// SetItestS3PackagePath gets a reference to the given string and assigns it to the ItestS3PackagePath field.
func (o *KubernetesOverridesUpgradeParams) SetItestS3PackagePath(v string) {
	o.ItestS3PackagePath = &v
}

// GetKubernetesUpgradeSupported returns the KubernetesUpgradeSupported field value
func (o *KubernetesOverridesUpgradeParams) GetKubernetesUpgradeSupported() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.KubernetesUpgradeSupported
}

// GetKubernetesUpgradeSupportedOk returns a tuple with the KubernetesUpgradeSupported field value
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetKubernetesUpgradeSupportedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.KubernetesUpgradeSupported, true
}

// SetKubernetesUpgradeSupported sets field value
func (o *KubernetesOverridesUpgradeParams) SetKubernetesUpgradeSupported(v bool) {
	o.KubernetesUpgradeSupported = v
}

// GetMastersInDefaultRegion returns the MastersInDefaultRegion field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetMastersInDefaultRegion() bool {
	if o == nil || o.MastersInDefaultRegion == nil {
		var ret bool
		return ret
	}
	return *o.MastersInDefaultRegion
}

// GetMastersInDefaultRegionOk returns a tuple with the MastersInDefaultRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetMastersInDefaultRegionOk() (*bool, bool) {
	if o == nil || o.MastersInDefaultRegion == nil {
		return nil, false
	}
	return o.MastersInDefaultRegion, true
}

// HasMastersInDefaultRegion returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasMastersInDefaultRegion() bool {
	if o != nil && o.MastersInDefaultRegion != nil {
		return true
	}

	return false
}

// SetMastersInDefaultRegion gets a reference to the given bool and assigns it to the MastersInDefaultRegion field.
func (o *KubernetesOverridesUpgradeParams) SetMastersInDefaultRegion(v bool) {
	o.MastersInDefaultRegion = &v
}

// GetNextClusterIndex returns the NextClusterIndex field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetNextClusterIndex() int32 {
	if o == nil || o.NextClusterIndex == nil {
		var ret int32
		return ret
	}
	return *o.NextClusterIndex
}

// GetNextClusterIndexOk returns a tuple with the NextClusterIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetNextClusterIndexOk() (*int32, bool) {
	if o == nil || o.NextClusterIndex == nil {
		return nil, false
	}
	return o.NextClusterIndex, true
}

// HasNextClusterIndex returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasNextClusterIndex() bool {
	if o != nil && o.NextClusterIndex != nil {
		return true
	}

	return false
}

// SetNextClusterIndex gets a reference to the given int32 and assigns it to the NextClusterIndex field.
func (o *KubernetesOverridesUpgradeParams) SetNextClusterIndex(v int32) {
	o.NextClusterIndex = &v
}

// GetNodeDetailsSet returns the NodeDetailsSet field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetNodeDetailsSet() []NodeDetails {
	if o == nil || o.NodeDetailsSet == nil {
		var ret []NodeDetails
		return ret
	}
	return *o.NodeDetailsSet
}

// GetNodeDetailsSetOk returns a tuple with the NodeDetailsSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetNodeDetailsSetOk() (*[]NodeDetails, bool) {
	if o == nil || o.NodeDetailsSet == nil {
		return nil, false
	}
	return o.NodeDetailsSet, true
}

// HasNodeDetailsSet returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasNodeDetailsSet() bool {
	if o != nil && o.NodeDetailsSet != nil {
		return true
	}

	return false
}

// SetNodeDetailsSet gets a reference to the given []NodeDetails and assigns it to the NodeDetailsSet field.
func (o *KubernetesOverridesUpgradeParams) SetNodeDetailsSet(v []NodeDetails) {
	o.NodeDetailsSet = &v
}

// GetNodeExporterUser returns the NodeExporterUser field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetNodeExporterUser() string {
	if o == nil || o.NodeExporterUser == nil {
		var ret string
		return ret
	}
	return *o.NodeExporterUser
}

// GetNodeExporterUserOk returns a tuple with the NodeExporterUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetNodeExporterUserOk() (*string, bool) {
	if o == nil || o.NodeExporterUser == nil {
		return nil, false
	}
	return o.NodeExporterUser, true
}

// HasNodeExporterUser returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasNodeExporterUser() bool {
	if o != nil && o.NodeExporterUser != nil {
		return true
	}

	return false
}

// SetNodeExporterUser gets a reference to the given string and assigns it to the NodeExporterUser field.
func (o *KubernetesOverridesUpgradeParams) SetNodeExporterUser(v string) {
	o.NodeExporterUser = &v
}

// GetNodePrefix returns the NodePrefix field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetNodePrefix() string {
	if o == nil || o.NodePrefix == nil {
		var ret string
		return ret
	}
	return *o.NodePrefix
}

// GetNodePrefixOk returns a tuple with the NodePrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetNodePrefixOk() (*string, bool) {
	if o == nil || o.NodePrefix == nil {
		return nil, false
	}
	return o.NodePrefix, true
}

// HasNodePrefix returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasNodePrefix() bool {
	if o != nil && o.NodePrefix != nil {
		return true
	}

	return false
}

// SetNodePrefix gets a reference to the given string and assigns it to the NodePrefix field.
func (o *KubernetesOverridesUpgradeParams) SetNodePrefix(v string) {
	o.NodePrefix = &v
}

// GetNodesResizeAvailable returns the NodesResizeAvailable field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetNodesResizeAvailable() bool {
	if o == nil || o.NodesResizeAvailable == nil {
		var ret bool
		return ret
	}
	return *o.NodesResizeAvailable
}

// GetNodesResizeAvailableOk returns a tuple with the NodesResizeAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetNodesResizeAvailableOk() (*bool, bool) {
	if o == nil || o.NodesResizeAvailable == nil {
		return nil, false
	}
	return o.NodesResizeAvailable, true
}

// HasNodesResizeAvailable returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasNodesResizeAvailable() bool {
	if o != nil && o.NodesResizeAvailable != nil {
		return true
	}

	return false
}

// SetNodesResizeAvailable gets a reference to the given bool and assigns it to the NodesResizeAvailable field.
func (o *KubernetesOverridesUpgradeParams) SetNodesResizeAvailable(v bool) {
	o.NodesResizeAvailable = &v
}

// GetPlacementModificationTaskUuid returns the PlacementModificationTaskUuid field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetPlacementModificationTaskUuid() string {
	if o == nil || o.PlacementModificationTaskUuid == nil {
		var ret string
		return ret
	}
	return *o.PlacementModificationTaskUuid
}

// GetPlacementModificationTaskUuidOk returns a tuple with the PlacementModificationTaskUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetPlacementModificationTaskUuidOk() (*string, bool) {
	if o == nil || o.PlacementModificationTaskUuid == nil {
		return nil, false
	}
	return o.PlacementModificationTaskUuid, true
}

// HasPlacementModificationTaskUuid returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasPlacementModificationTaskUuid() bool {
	if o != nil && o.PlacementModificationTaskUuid != nil {
		return true
	}

	return false
}

// SetPlacementModificationTaskUuid gets a reference to the given string and assigns it to the PlacementModificationTaskUuid field.
func (o *KubernetesOverridesUpgradeParams) SetPlacementModificationTaskUuid(v string) {
	o.PlacementModificationTaskUuid = &v
}

// GetPlatformUrl returns the PlatformUrl field value
func (o *KubernetesOverridesUpgradeParams) GetPlatformUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlatformUrl
}

// GetPlatformUrlOk returns a tuple with the PlatformUrl field value
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetPlatformUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PlatformUrl, true
}

// SetPlatformUrl sets field value
func (o *KubernetesOverridesUpgradeParams) SetPlatformUrl(v string) {
	o.PlatformUrl = v
}

// GetPlatformVersion returns the PlatformVersion field value
func (o *KubernetesOverridesUpgradeParams) GetPlatformVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlatformVersion
}

// GetPlatformVersionOk returns a tuple with the PlatformVersion field value
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetPlatformVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PlatformVersion, true
}

// SetPlatformVersion sets field value
func (o *KubernetesOverridesUpgradeParams) SetPlatformVersion(v string) {
	o.PlatformVersion = v
}

// GetPrevYBSoftwareConfig returns the PrevYBSoftwareConfig field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetPrevYBSoftwareConfig() PrevYBSoftwareConfig {
	if o == nil || o.PrevYBSoftwareConfig == nil {
		var ret PrevYBSoftwareConfig
		return ret
	}
	return *o.PrevYBSoftwareConfig
}

// GetPrevYBSoftwareConfigOk returns a tuple with the PrevYBSoftwareConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetPrevYBSoftwareConfigOk() (*PrevYBSoftwareConfig, bool) {
	if o == nil || o.PrevYBSoftwareConfig == nil {
		return nil, false
	}
	return o.PrevYBSoftwareConfig, true
}

// HasPrevYBSoftwareConfig returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasPrevYBSoftwareConfig() bool {
	if o != nil && o.PrevYBSoftwareConfig != nil {
		return true
	}

	return false
}

// SetPrevYBSoftwareConfig gets a reference to the given PrevYBSoftwareConfig and assigns it to the PrevYBSoftwareConfig field.
func (o *KubernetesOverridesUpgradeParams) SetPrevYBSoftwareConfig(v PrevYBSoftwareConfig) {
	o.PrevYBSoftwareConfig = &v
}

// GetPreviousTaskUUID returns the PreviousTaskUUID field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetPreviousTaskUUID() string {
	if o == nil || o.PreviousTaskUUID == nil {
		var ret string
		return ret
	}
	return *o.PreviousTaskUUID
}

// GetPreviousTaskUUIDOk returns a tuple with the PreviousTaskUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetPreviousTaskUUIDOk() (*string, bool) {
	if o == nil || o.PreviousTaskUUID == nil {
		return nil, false
	}
	return o.PreviousTaskUUID, true
}

// HasPreviousTaskUUID returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasPreviousTaskUUID() bool {
	if o != nil && o.PreviousTaskUUID != nil {
		return true
	}

	return false
}

// SetPreviousTaskUUID gets a reference to the given string and assigns it to the PreviousTaskUUID field.
func (o *KubernetesOverridesUpgradeParams) SetPreviousTaskUUID(v string) {
	o.PreviousTaskUUID = &v
}

// GetRemotePackagePath returns the RemotePackagePath field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetRemotePackagePath() string {
	if o == nil || o.RemotePackagePath == nil {
		var ret string
		return ret
	}
	return *o.RemotePackagePath
}

// GetRemotePackagePathOk returns a tuple with the RemotePackagePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetRemotePackagePathOk() (*string, bool) {
	if o == nil || o.RemotePackagePath == nil {
		return nil, false
	}
	return o.RemotePackagePath, true
}

// HasRemotePackagePath returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasRemotePackagePath() bool {
	if o != nil && o.RemotePackagePath != nil {
		return true
	}

	return false
}

// SetRemotePackagePath gets a reference to the given string and assigns it to the RemotePackagePath field.
func (o *KubernetesOverridesUpgradeParams) SetRemotePackagePath(v string) {
	o.RemotePackagePath = &v
}

// GetResetAZConfig returns the ResetAZConfig field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetResetAZConfig() bool {
	if o == nil || o.ResetAZConfig == nil {
		var ret bool
		return ret
	}
	return *o.ResetAZConfig
}

// GetResetAZConfigOk returns a tuple with the ResetAZConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetResetAZConfigOk() (*bool, bool) {
	if o == nil || o.ResetAZConfig == nil {
		return nil, false
	}
	return o.ResetAZConfig, true
}

// HasResetAZConfig returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasResetAZConfig() bool {
	if o != nil && o.ResetAZConfig != nil {
		return true
	}

	return false
}

// SetResetAZConfig gets a reference to the given bool and assigns it to the ResetAZConfig field.
func (o *KubernetesOverridesUpgradeParams) SetResetAZConfig(v bool) {
	o.ResetAZConfig = &v
}

// GetRootAndClientRootCASame returns the RootAndClientRootCASame field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetRootAndClientRootCASame() bool {
	if o == nil || o.RootAndClientRootCASame == nil {
		var ret bool
		return ret
	}
	return *o.RootAndClientRootCASame
}

// GetRootAndClientRootCASameOk returns a tuple with the RootAndClientRootCASame field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetRootAndClientRootCASameOk() (*bool, bool) {
	if o == nil || o.RootAndClientRootCASame == nil {
		return nil, false
	}
	return o.RootAndClientRootCASame, true
}

// HasRootAndClientRootCASame returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasRootAndClientRootCASame() bool {
	if o != nil && o.RootAndClientRootCASame != nil {
		return true
	}

	return false
}

// SetRootAndClientRootCASame gets a reference to the given bool and assigns it to the RootAndClientRootCASame field.
func (o *KubernetesOverridesUpgradeParams) SetRootAndClientRootCASame(v bool) {
	o.RootAndClientRootCASame = &v
}

// GetRootCA returns the RootCA field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetRootCA() string {
	if o == nil || o.RootCA == nil {
		var ret string
		return ret
	}
	return *o.RootCA
}

// GetRootCAOk returns a tuple with the RootCA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetRootCAOk() (*string, bool) {
	if o == nil || o.RootCA == nil {
		return nil, false
	}
	return o.RootCA, true
}

// HasRootCA returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasRootCA() bool {
	if o != nil && o.RootCA != nil {
		return true
	}

	return false
}

// SetRootCA gets a reference to the given string and assigns it to the RootCA field.
func (o *KubernetesOverridesUpgradeParams) SetRootCA(v string) {
	o.RootCA = &v
}

// GetSetTxnTableWaitCountFlag returns the SetTxnTableWaitCountFlag field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetSetTxnTableWaitCountFlag() bool {
	if o == nil || o.SetTxnTableWaitCountFlag == nil {
		var ret bool
		return ret
	}
	return *o.SetTxnTableWaitCountFlag
}

// GetSetTxnTableWaitCountFlagOk returns a tuple with the SetTxnTableWaitCountFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetSetTxnTableWaitCountFlagOk() (*bool, bool) {
	if o == nil || o.SetTxnTableWaitCountFlag == nil {
		return nil, false
	}
	return o.SetTxnTableWaitCountFlag, true
}

// HasSetTxnTableWaitCountFlag returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasSetTxnTableWaitCountFlag() bool {
	if o != nil && o.SetTxnTableWaitCountFlag != nil {
		return true
	}

	return false
}

// SetSetTxnTableWaitCountFlag gets a reference to the given bool and assigns it to the SetTxnTableWaitCountFlag field.
func (o *KubernetesOverridesUpgradeParams) SetSetTxnTableWaitCountFlag(v bool) {
	o.SetTxnTableWaitCountFlag = &v
}

// GetSleepAfterMasterRestartMillis returns the SleepAfterMasterRestartMillis field value
func (o *KubernetesOverridesUpgradeParams) GetSleepAfterMasterRestartMillis() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SleepAfterMasterRestartMillis
}

// GetSleepAfterMasterRestartMillisOk returns a tuple with the SleepAfterMasterRestartMillis field value
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetSleepAfterMasterRestartMillisOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SleepAfterMasterRestartMillis, true
}

// SetSleepAfterMasterRestartMillis sets field value
func (o *KubernetesOverridesUpgradeParams) SetSleepAfterMasterRestartMillis(v int32) {
	o.SleepAfterMasterRestartMillis = v
}

// GetSleepAfterTServerRestartMillis returns the SleepAfterTServerRestartMillis field value
func (o *KubernetesOverridesUpgradeParams) GetSleepAfterTServerRestartMillis() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SleepAfterTServerRestartMillis
}

// GetSleepAfterTServerRestartMillisOk returns a tuple with the SleepAfterTServerRestartMillis field value
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetSleepAfterTServerRestartMillisOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SleepAfterTServerRestartMillis, true
}

// SetSleepAfterTServerRestartMillis sets field value
func (o *KubernetesOverridesUpgradeParams) SetSleepAfterTServerRestartMillis(v int32) {
	o.SleepAfterTServerRestartMillis = v
}

// GetSoftwareUpgradeState returns the SoftwareUpgradeState field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetSoftwareUpgradeState() string {
	if o == nil || o.SoftwareUpgradeState == nil {
		var ret string
		return ret
	}
	return *o.SoftwareUpgradeState
}

// GetSoftwareUpgradeStateOk returns a tuple with the SoftwareUpgradeState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetSoftwareUpgradeStateOk() (*string, bool) {
	if o == nil || o.SoftwareUpgradeState == nil {
		return nil, false
	}
	return o.SoftwareUpgradeState, true
}

// HasSoftwareUpgradeState returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasSoftwareUpgradeState() bool {
	if o != nil && o.SoftwareUpgradeState != nil {
		return true
	}

	return false
}

// SetSoftwareUpgradeState gets a reference to the given string and assigns it to the SoftwareUpgradeState field.
func (o *KubernetesOverridesUpgradeParams) SetSoftwareUpgradeState(v string) {
	o.SoftwareUpgradeState = &v
}

// GetSourceXClusterConfigs returns the SourceXClusterConfigs field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetSourceXClusterConfigs() []string {
	if o == nil || o.SourceXClusterConfigs == nil {
		var ret []string
		return ret
	}
	return *o.SourceXClusterConfigs
}

// GetSourceXClusterConfigsOk returns a tuple with the SourceXClusterConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetSourceXClusterConfigsOk() (*[]string, bool) {
	if o == nil || o.SourceXClusterConfigs == nil {
		return nil, false
	}
	return o.SourceXClusterConfigs, true
}

// HasSourceXClusterConfigs returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasSourceXClusterConfigs() bool {
	if o != nil && o.SourceXClusterConfigs != nil {
		return true
	}

	return false
}

// SetSourceXClusterConfigs gets a reference to the given []string and assigns it to the SourceXClusterConfigs field.
func (o *KubernetesOverridesUpgradeParams) SetSourceXClusterConfigs(v []string) {
	o.SourceXClusterConfigs = &v
}

// GetSshUserOverride returns the SshUserOverride field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetSshUserOverride() string {
	if o == nil || o.SshUserOverride == nil {
		var ret string
		return ret
	}
	return *o.SshUserOverride
}

// GetSshUserOverrideOk returns a tuple with the SshUserOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetSshUserOverrideOk() (*string, bool) {
	if o == nil || o.SshUserOverride == nil {
		return nil, false
	}
	return o.SshUserOverride, true
}

// HasSshUserOverride returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasSshUserOverride() bool {
	if o != nil && o.SshUserOverride != nil {
		return true
	}

	return false
}

// SetSshUserOverride gets a reference to the given string and assigns it to the SshUserOverride field.
func (o *KubernetesOverridesUpgradeParams) SetSshUserOverride(v string) {
	o.SshUserOverride = &v
}

// GetTargetXClusterConfigs returns the TargetXClusterConfigs field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetTargetXClusterConfigs() []string {
	if o == nil || o.TargetXClusterConfigs == nil {
		var ret []string
		return ret
	}
	return *o.TargetXClusterConfigs
}

// GetTargetXClusterConfigsOk returns a tuple with the TargetXClusterConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetTargetXClusterConfigsOk() (*[]string, bool) {
	if o == nil || o.TargetXClusterConfigs == nil {
		return nil, false
	}
	return o.TargetXClusterConfigs, true
}

// HasTargetXClusterConfigs returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasTargetXClusterConfigs() bool {
	if o != nil && o.TargetXClusterConfigs != nil {
		return true
	}

	return false
}

// SetTargetXClusterConfigs gets a reference to the given []string and assigns it to the TargetXClusterConfigs field.
func (o *KubernetesOverridesUpgradeParams) SetTargetXClusterConfigs(v []string) {
	o.TargetXClusterConfigs = &v
}

// GetUniverseOverrides returns the UniverseOverrides field value
func (o *KubernetesOverridesUpgradeParams) GetUniverseOverrides() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UniverseOverrides
}

// GetUniverseOverridesOk returns a tuple with the UniverseOverrides field value
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetUniverseOverridesOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UniverseOverrides, true
}

// SetUniverseOverrides sets field value
func (o *KubernetesOverridesUpgradeParams) SetUniverseOverrides(v string) {
	o.UniverseOverrides = v
}

// GetUniversePaused returns the UniversePaused field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetUniversePaused() bool {
	if o == nil || o.UniversePaused == nil {
		var ret bool
		return ret
	}
	return *o.UniversePaused
}

// GetUniversePausedOk returns a tuple with the UniversePaused field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetUniversePausedOk() (*bool, bool) {
	if o == nil || o.UniversePaused == nil {
		return nil, false
	}
	return o.UniversePaused, true
}

// HasUniversePaused returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasUniversePaused() bool {
	if o != nil && o.UniversePaused != nil {
		return true
	}

	return false
}

// SetUniversePaused gets a reference to the given bool and assigns it to the UniversePaused field.
func (o *KubernetesOverridesUpgradeParams) SetUniversePaused(v bool) {
	o.UniversePaused = &v
}

// GetUniverseUUID returns the UniverseUUID field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetUniverseUUID() string {
	if o == nil || o.UniverseUUID == nil {
		var ret string
		return ret
	}
	return *o.UniverseUUID
}

// GetUniverseUUIDOk returns a tuple with the UniverseUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetUniverseUUIDOk() (*string, bool) {
	if o == nil || o.UniverseUUID == nil {
		return nil, false
	}
	return o.UniverseUUID, true
}

// HasUniverseUUID returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasUniverseUUID() bool {
	if o != nil && o.UniverseUUID != nil {
		return true
	}

	return false
}

// SetUniverseUUID gets a reference to the given string and assigns it to the UniverseUUID field.
func (o *KubernetesOverridesUpgradeParams) SetUniverseUUID(v string) {
	o.UniverseUUID = &v
}

// GetUpdateInProgress returns the UpdateInProgress field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetUpdateInProgress() bool {
	if o == nil || o.UpdateInProgress == nil {
		var ret bool
		return ret
	}
	return *o.UpdateInProgress
}

// GetUpdateInProgressOk returns a tuple with the UpdateInProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetUpdateInProgressOk() (*bool, bool) {
	if o == nil || o.UpdateInProgress == nil {
		return nil, false
	}
	return o.UpdateInProgress, true
}

// HasUpdateInProgress returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasUpdateInProgress() bool {
	if o != nil && o.UpdateInProgress != nil {
		return true
	}

	return false
}

// SetUpdateInProgress gets a reference to the given bool and assigns it to the UpdateInProgress field.
func (o *KubernetesOverridesUpgradeParams) SetUpdateInProgress(v bool) {
	o.UpdateInProgress = &v
}

// GetUpdateOptions returns the UpdateOptions field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetUpdateOptions() []string {
	if o == nil || o.UpdateOptions == nil {
		var ret []string
		return ret
	}
	return *o.UpdateOptions
}

// GetUpdateOptionsOk returns a tuple with the UpdateOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetUpdateOptionsOk() (*[]string, bool) {
	if o == nil || o.UpdateOptions == nil {
		return nil, false
	}
	return o.UpdateOptions, true
}

// HasUpdateOptions returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasUpdateOptions() bool {
	if o != nil && o.UpdateOptions != nil {
		return true
	}

	return false
}

// SetUpdateOptions gets a reference to the given []string and assigns it to the UpdateOptions field.
func (o *KubernetesOverridesUpgradeParams) SetUpdateOptions(v []string) {
	o.UpdateOptions = &v
}

// GetUpdateSucceeded returns the UpdateSucceeded field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetUpdateSucceeded() bool {
	if o == nil || o.UpdateSucceeded == nil {
		var ret bool
		return ret
	}
	return *o.UpdateSucceeded
}

// GetUpdateSucceededOk returns a tuple with the UpdateSucceeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetUpdateSucceededOk() (*bool, bool) {
	if o == nil || o.UpdateSucceeded == nil {
		return nil, false
	}
	return o.UpdateSucceeded, true
}

// HasUpdateSucceeded returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasUpdateSucceeded() bool {
	if o != nil && o.UpdateSucceeded != nil {
		return true
	}

	return false
}

// SetUpdateSucceeded gets a reference to the given bool and assigns it to the UpdateSucceeded field.
func (o *KubernetesOverridesUpgradeParams) SetUpdateSucceeded(v bool) {
	o.UpdateSucceeded = &v
}

// GetUpdatingTask returns the UpdatingTask field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetUpdatingTask() string {
	if o == nil || o.UpdatingTask == nil {
		var ret string
		return ret
	}
	return *o.UpdatingTask
}

// GetUpdatingTaskOk returns a tuple with the UpdatingTask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetUpdatingTaskOk() (*string, bool) {
	if o == nil || o.UpdatingTask == nil {
		return nil, false
	}
	return o.UpdatingTask, true
}

// HasUpdatingTask returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasUpdatingTask() bool {
	if o != nil && o.UpdatingTask != nil {
		return true
	}

	return false
}

// SetUpdatingTask gets a reference to the given string and assigns it to the UpdatingTask field.
func (o *KubernetesOverridesUpgradeParams) SetUpdatingTask(v string) {
	o.UpdatingTask = &v
}

// GetUpdatingTaskUUID returns the UpdatingTaskUUID field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetUpdatingTaskUUID() string {
	if o == nil || o.UpdatingTaskUUID == nil {
		var ret string
		return ret
	}
	return *o.UpdatingTaskUUID
}

// GetUpdatingTaskUUIDOk returns a tuple with the UpdatingTaskUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetUpdatingTaskUUIDOk() (*string, bool) {
	if o == nil || o.UpdatingTaskUUID == nil {
		return nil, false
	}
	return o.UpdatingTaskUUID, true
}

// HasUpdatingTaskUUID returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasUpdatingTaskUUID() bool {
	if o != nil && o.UpdatingTaskUUID != nil {
		return true
	}

	return false
}

// SetUpdatingTaskUUID gets a reference to the given string and assigns it to the UpdatingTaskUUID field.
func (o *KubernetesOverridesUpgradeParams) SetUpdatingTaskUUID(v string) {
	o.UpdatingTaskUUID = &v
}

// GetUpgradeOption returns the UpgradeOption field value
func (o *KubernetesOverridesUpgradeParams) GetUpgradeOption() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpgradeOption
}

// GetUpgradeOptionOk returns a tuple with the UpgradeOption field value
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetUpgradeOptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UpgradeOption, true
}

// SetUpgradeOption sets field value
func (o *KubernetesOverridesUpgradeParams) SetUpgradeOption(v string) {
	o.UpgradeOption = v
}

// GetUseNewHelmNamingStyle returns the UseNewHelmNamingStyle field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetUseNewHelmNamingStyle() bool {
	if o == nil || o.UseNewHelmNamingStyle == nil {
		var ret bool
		return ret
	}
	return *o.UseNewHelmNamingStyle
}

// GetUseNewHelmNamingStyleOk returns a tuple with the UseNewHelmNamingStyle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetUseNewHelmNamingStyleOk() (*bool, bool) {
	if o == nil || o.UseNewHelmNamingStyle == nil {
		return nil, false
	}
	return o.UseNewHelmNamingStyle, true
}

// HasUseNewHelmNamingStyle returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasUseNewHelmNamingStyle() bool {
	if o != nil && o.UseNewHelmNamingStyle != nil {
		return true
	}

	return false
}

// SetUseNewHelmNamingStyle gets a reference to the given bool and assigns it to the UseNewHelmNamingStyle field.
func (o *KubernetesOverridesUpgradeParams) SetUseNewHelmNamingStyle(v bool) {
	o.UseNewHelmNamingStyle = &v
}

// GetUserAZSelected returns the UserAZSelected field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetUserAZSelected() bool {
	if o == nil || o.UserAZSelected == nil {
		var ret bool
		return ret
	}
	return *o.UserAZSelected
}

// GetUserAZSelectedOk returns a tuple with the UserAZSelected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetUserAZSelectedOk() (*bool, bool) {
	if o == nil || o.UserAZSelected == nil {
		return nil, false
	}
	return o.UserAZSelected, true
}

// HasUserAZSelected returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasUserAZSelected() bool {
	if o != nil && o.UserAZSelected != nil {
		return true
	}

	return false
}

// SetUserAZSelected gets a reference to the given bool and assigns it to the UserAZSelected field.
func (o *KubernetesOverridesUpgradeParams) SetUserAZSelected(v bool) {
	o.UserAZSelected = &v
}

// GetXclusterInfo returns the XclusterInfo field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetXclusterInfo() XClusterInfo {
	if o == nil || o.XclusterInfo == nil {
		var ret XClusterInfo
		return ret
	}
	return *o.XclusterInfo
}

// GetXclusterInfoOk returns a tuple with the XclusterInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetXclusterInfoOk() (*XClusterInfo, bool) {
	if o == nil || o.XclusterInfo == nil {
		return nil, false
	}
	return o.XclusterInfo, true
}

// HasXclusterInfo returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasXclusterInfo() bool {
	if o != nil && o.XclusterInfo != nil {
		return true
	}

	return false
}

// SetXclusterInfo gets a reference to the given XClusterInfo and assigns it to the XclusterInfo field.
func (o *KubernetesOverridesUpgradeParams) SetXclusterInfo(v XClusterInfo) {
	o.XclusterInfo = &v
}

// GetYbPrevSoftwareVersion returns the YbPrevSoftwareVersion field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetYbPrevSoftwareVersion() string {
	if o == nil || o.YbPrevSoftwareVersion == nil {
		var ret string
		return ret
	}
	return *o.YbPrevSoftwareVersion
}

// GetYbPrevSoftwareVersionOk returns a tuple with the YbPrevSoftwareVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetYbPrevSoftwareVersionOk() (*string, bool) {
	if o == nil || o.YbPrevSoftwareVersion == nil {
		return nil, false
	}
	return o.YbPrevSoftwareVersion, true
}

// HasYbPrevSoftwareVersion returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasYbPrevSoftwareVersion() bool {
	if o != nil && o.YbPrevSoftwareVersion != nil {
		return true
	}

	return false
}

// SetYbPrevSoftwareVersion gets a reference to the given string and assigns it to the YbPrevSoftwareVersion field.
func (o *KubernetesOverridesUpgradeParams) SetYbPrevSoftwareVersion(v string) {
	o.YbPrevSoftwareVersion = &v
}

// GetYbcInstalled returns the YbcInstalled field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetYbcInstalled() bool {
	if o == nil || o.YbcInstalled == nil {
		var ret bool
		return ret
	}
	return *o.YbcInstalled
}

// GetYbcInstalledOk returns a tuple with the YbcInstalled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetYbcInstalledOk() (*bool, bool) {
	if o == nil || o.YbcInstalled == nil {
		return nil, false
	}
	return o.YbcInstalled, true
}

// HasYbcInstalled returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasYbcInstalled() bool {
	if o != nil && o.YbcInstalled != nil {
		return true
	}

	return false
}

// SetYbcInstalled gets a reference to the given bool and assigns it to the YbcInstalled field.
func (o *KubernetesOverridesUpgradeParams) SetYbcInstalled(v bool) {
	o.YbcInstalled = &v
}

// GetYbcSoftwareVersion returns the YbcSoftwareVersion field value if set, zero value otherwise.
func (o *KubernetesOverridesUpgradeParams) GetYbcSoftwareVersion() string {
	if o == nil || o.YbcSoftwareVersion == nil {
		var ret string
		return ret
	}
	return *o.YbcSoftwareVersion
}

// GetYbcSoftwareVersionOk returns a tuple with the YbcSoftwareVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesOverridesUpgradeParams) GetYbcSoftwareVersionOk() (*string, bool) {
	if o == nil || o.YbcSoftwareVersion == nil {
		return nil, false
	}
	return o.YbcSoftwareVersion, true
}

// HasYbcSoftwareVersion returns a boolean if a field has been set.
func (o *KubernetesOverridesUpgradeParams) HasYbcSoftwareVersion() bool {
	if o != nil && o.YbcSoftwareVersion != nil {
		return true
	}

	return false
}

// SetYbcSoftwareVersion gets a reference to the given string and assigns it to the YbcSoftwareVersion field.
func (o *KubernetesOverridesUpgradeParams) SetYbcSoftwareVersion(v string) {
	o.YbcSoftwareVersion = &v
}

func (o KubernetesOverridesUpgradeParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowInsecure != nil {
		toSerialize["allowInsecure"] = o.AllowInsecure
	}
	if o.Arch != nil {
		toSerialize["arch"] = o.Arch
	}
	if true {
		toSerialize["azOverrides"] = o.AzOverrides
	}
	if o.Capability != nil {
		toSerialize["capability"] = o.Capability
	}
	if o.ClientRootCA != nil {
		toSerialize["clientRootCA"] = o.ClientRootCA
	}
	if true {
		toSerialize["clusters"] = o.Clusters
	}
	if o.CmkArn != nil {
		toSerialize["cmkArn"] = o.CmkArn
	}
	if o.CommunicationPorts != nil {
		toSerialize["communicationPorts"] = o.CommunicationPorts
	}
	if true {
		toSerialize["creatingUser"] = o.CreatingUser
	}
	if o.CurrentClusterType != nil {
		toSerialize["currentClusterType"] = o.CurrentClusterType
	}
	if o.DeviceInfo != nil {
		toSerialize["deviceInfo"] = o.DeviceInfo
	}
	if o.EnableYbc != nil {
		toSerialize["enableYbc"] = o.EnableYbc
	}
	if o.EncryptionAtRestConfig != nil {
		toSerialize["encryptionAtRestConfig"] = o.EncryptionAtRestConfig
	}
	if o.ErrorString != nil {
		toSerialize["errorString"] = o.ErrorString
	}
	if o.ExpectedUniverseVersion != nil {
		toSerialize["expectedUniverseVersion"] = o.ExpectedUniverseVersion
	}
	if o.ExtraDependencies != nil {
		toSerialize["extraDependencies"] = o.ExtraDependencies
	}
	if o.ImportedState != nil {
		toSerialize["importedState"] = o.ImportedState
	}
	if o.InstallYbc != nil {
		toSerialize["installYbc"] = o.InstallYbc
	}
	if o.IsKubernetesOperatorControlled != nil {
		toSerialize["isKubernetesOperatorControlled"] = o.IsKubernetesOperatorControlled
	}
	if o.IsSoftwareRollbackAllowed != nil {
		toSerialize["isSoftwareRollbackAllowed"] = o.IsSoftwareRollbackAllowed
	}
	if o.ItestS3PackagePath != nil {
		toSerialize["itestS3PackagePath"] = o.ItestS3PackagePath
	}
	if true {
		toSerialize["kubernetesUpgradeSupported"] = o.KubernetesUpgradeSupported
	}
	if o.MastersInDefaultRegion != nil {
		toSerialize["mastersInDefaultRegion"] = o.MastersInDefaultRegion
	}
	if o.NextClusterIndex != nil {
		toSerialize["nextClusterIndex"] = o.NextClusterIndex
	}
	if o.NodeDetailsSet != nil {
		toSerialize["nodeDetailsSet"] = o.NodeDetailsSet
	}
	if o.NodeExporterUser != nil {
		toSerialize["nodeExporterUser"] = o.NodeExporterUser
	}
	if o.NodePrefix != nil {
		toSerialize["nodePrefix"] = o.NodePrefix
	}
	if o.NodesResizeAvailable != nil {
		toSerialize["nodesResizeAvailable"] = o.NodesResizeAvailable
	}
	if o.PlacementModificationTaskUuid != nil {
		toSerialize["placementModificationTaskUuid"] = o.PlacementModificationTaskUuid
	}
	if true {
		toSerialize["platformUrl"] = o.PlatformUrl
	}
	if true {
		toSerialize["platformVersion"] = o.PlatformVersion
	}
	if o.PrevYBSoftwareConfig != nil {
		toSerialize["prevYBSoftwareConfig"] = o.PrevYBSoftwareConfig
	}
	if o.PreviousTaskUUID != nil {
		toSerialize["previousTaskUUID"] = o.PreviousTaskUUID
	}
	if o.RemotePackagePath != nil {
		toSerialize["remotePackagePath"] = o.RemotePackagePath
	}
	if o.ResetAZConfig != nil {
		toSerialize["resetAZConfig"] = o.ResetAZConfig
	}
	if o.RootAndClientRootCASame != nil {
		toSerialize["rootAndClientRootCASame"] = o.RootAndClientRootCASame
	}
	if o.RootCA != nil {
		toSerialize["rootCA"] = o.RootCA
	}
	if o.SetTxnTableWaitCountFlag != nil {
		toSerialize["setTxnTableWaitCountFlag"] = o.SetTxnTableWaitCountFlag
	}
	if true {
		toSerialize["sleepAfterMasterRestartMillis"] = o.SleepAfterMasterRestartMillis
	}
	if true {
		toSerialize["sleepAfterTServerRestartMillis"] = o.SleepAfterTServerRestartMillis
	}
	if o.SoftwareUpgradeState != nil {
		toSerialize["softwareUpgradeState"] = o.SoftwareUpgradeState
	}
	if o.SourceXClusterConfigs != nil {
		toSerialize["sourceXClusterConfigs"] = o.SourceXClusterConfigs
	}
	if o.SshUserOverride != nil {
		toSerialize["sshUserOverride"] = o.SshUserOverride
	}
	if o.TargetXClusterConfigs != nil {
		toSerialize["targetXClusterConfigs"] = o.TargetXClusterConfigs
	}
	if true {
		toSerialize["universeOverrides"] = o.UniverseOverrides
	}
	if o.UniversePaused != nil {
		toSerialize["universePaused"] = o.UniversePaused
	}
	if o.UniverseUUID != nil {
		toSerialize["universeUUID"] = o.UniverseUUID
	}
	if o.UpdateInProgress != nil {
		toSerialize["updateInProgress"] = o.UpdateInProgress
	}
	if o.UpdateOptions != nil {
		toSerialize["updateOptions"] = o.UpdateOptions
	}
	if o.UpdateSucceeded != nil {
		toSerialize["updateSucceeded"] = o.UpdateSucceeded
	}
	if o.UpdatingTask != nil {
		toSerialize["updatingTask"] = o.UpdatingTask
	}
	if o.UpdatingTaskUUID != nil {
		toSerialize["updatingTaskUUID"] = o.UpdatingTaskUUID
	}
	if true {
		toSerialize["upgradeOption"] = o.UpgradeOption
	}
	if o.UseNewHelmNamingStyle != nil {
		toSerialize["useNewHelmNamingStyle"] = o.UseNewHelmNamingStyle
	}
	if o.UserAZSelected != nil {
		toSerialize["userAZSelected"] = o.UserAZSelected
	}
	if o.XclusterInfo != nil {
		toSerialize["xclusterInfo"] = o.XclusterInfo
	}
	if o.YbPrevSoftwareVersion != nil {
		toSerialize["ybPrevSoftwareVersion"] = o.YbPrevSoftwareVersion
	}
	if o.YbcInstalled != nil {
		toSerialize["ybcInstalled"] = o.YbcInstalled
	}
	if o.YbcSoftwareVersion != nil {
		toSerialize["ybcSoftwareVersion"] = o.YbcSoftwareVersion
	}
	return json.Marshal(toSerialize)
}

type NullableKubernetesOverridesUpgradeParams struct {
	value *KubernetesOverridesUpgradeParams
	isSet bool
}

func (v NullableKubernetesOverridesUpgradeParams) Get() *KubernetesOverridesUpgradeParams {
	return v.value
}

func (v *NullableKubernetesOverridesUpgradeParams) Set(val *KubernetesOverridesUpgradeParams) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesOverridesUpgradeParams) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesOverridesUpgradeParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesOverridesUpgradeParams(val *KubernetesOverridesUpgradeParams) *NullableKubernetesOverridesUpgradeParams {
	return &NullableKubernetesOverridesUpgradeParams{value: val, isSet: true}
}

func (v NullableKubernetesOverridesUpgradeParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesOverridesUpgradeParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


