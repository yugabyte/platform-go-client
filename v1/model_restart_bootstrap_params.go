/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// RestartBootstrapParams Bootstrap parameters for restarting
type RestartBootstrapParams struct {
	BackupRequestParams BootstrapBackupParams `json:"backupRequestParams"`
}

// NewRestartBootstrapParams instantiates a new RestartBootstrapParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestartBootstrapParams(backupRequestParams BootstrapBackupParams) *RestartBootstrapParams {
	this := RestartBootstrapParams{}
	this.BackupRequestParams = backupRequestParams
	return &this
}

// NewRestartBootstrapParamsWithDefaults instantiates a new RestartBootstrapParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestartBootstrapParamsWithDefaults() *RestartBootstrapParams {
	this := RestartBootstrapParams{}
	return &this
}

// GetBackupRequestParams returns the BackupRequestParams field value
func (o *RestartBootstrapParams) GetBackupRequestParams() BootstrapBackupParams {
	if o == nil {
		var ret BootstrapBackupParams
		return ret
	}

	return o.BackupRequestParams
}

// GetBackupRequestParamsOk returns a tuple with the BackupRequestParams field value
// and a boolean to check if the value has been set.
func (o *RestartBootstrapParams) GetBackupRequestParamsOk() (*BootstrapBackupParams, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BackupRequestParams, true
}

// SetBackupRequestParams sets field value
func (o *RestartBootstrapParams) SetBackupRequestParams(v BootstrapBackupParams) {
	o.BackupRequestParams = v
}

func (o RestartBootstrapParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["backupRequestParams"] = o.BackupRequestParams
	}
	return json.Marshal(toSerialize)
}

type NullableRestartBootstrapParams struct {
	value *RestartBootstrapParams
	isSet bool
}

func (v NullableRestartBootstrapParams) Get() *RestartBootstrapParams {
	return v.value
}

func (v *NullableRestartBootstrapParams) Set(val *RestartBootstrapParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRestartBootstrapParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRestartBootstrapParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestartBootstrapParams(val *RestartBootstrapParams) *NullableRestartBootstrapParams {
	return &NullableRestartBootstrapParams{value: val, isSet: true}
}

func (v NullableRestartBootstrapParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestartBootstrapParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


