/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// UserProfileData User profile data. The API and UI use this to validate form data.
type UserProfileData struct {
	// Password confirmation
	ConfirmPassword *string `json:"confirmPassword,omitempty"`
	// Password
	Password *string `json:"password,omitempty"`
	// User role
	Role string `json:"role"`
	// User timezone
	Timezone *string `json:"timezone,omitempty"`
}

// NewUserProfileData instantiates a new UserProfileData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserProfileData(role string) *UserProfileData {
	this := UserProfileData{}
	this.Role = role
	return &this
}

// NewUserProfileDataWithDefaults instantiates a new UserProfileData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserProfileDataWithDefaults() *UserProfileData {
	this := UserProfileData{}
	return &this
}

// GetConfirmPassword returns the ConfirmPassword field value if set, zero value otherwise.
func (o *UserProfileData) GetConfirmPassword() string {
	if o == nil || o.ConfirmPassword == nil {
		var ret string
		return ret
	}
	return *o.ConfirmPassword
}

// GetConfirmPasswordOk returns a tuple with the ConfirmPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserProfileData) GetConfirmPasswordOk() (*string, bool) {
	if o == nil || o.ConfirmPassword == nil {
		return nil, false
	}
	return o.ConfirmPassword, true
}

// HasConfirmPassword returns a boolean if a field has been set.
func (o *UserProfileData) HasConfirmPassword() bool {
	if o != nil && o.ConfirmPassword != nil {
		return true
	}

	return false
}

// SetConfirmPassword gets a reference to the given string and assigns it to the ConfirmPassword field.
func (o *UserProfileData) SetConfirmPassword(v string) {
	o.ConfirmPassword = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *UserProfileData) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserProfileData) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *UserProfileData) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *UserProfileData) SetPassword(v string) {
	o.Password = &v
}

// GetRole returns the Role field value
func (o *UserProfileData) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *UserProfileData) GetRoleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *UserProfileData) SetRole(v string) {
	o.Role = v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *UserProfileData) GetTimezone() string {
	if o == nil || o.Timezone == nil {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserProfileData) GetTimezoneOk() (*string, bool) {
	if o == nil || o.Timezone == nil {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *UserProfileData) HasTimezone() bool {
	if o != nil && o.Timezone != nil {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *UserProfileData) SetTimezone(v string) {
	o.Timezone = &v
}

func (o UserProfileData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConfirmPassword != nil {
		toSerialize["confirmPassword"] = o.ConfirmPassword
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if true {
		toSerialize["role"] = o.Role
	}
	if o.Timezone != nil {
		toSerialize["timezone"] = o.Timezone
	}
	return json.Marshal(toSerialize)
}

type NullableUserProfileData struct {
	value *UserProfileData
	isSet bool
}

func (v NullableUserProfileData) Get() *UserProfileData {
	return v.value
}

func (v *NullableUserProfileData) Set(val *UserProfileData) {
	v.value = val
	v.isSet = true
}

func (v NullableUserProfileData) IsSet() bool {
	return v.isSet
}

func (v *NullableUserProfileData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserProfileData(val *UserProfileData) *NullableUserProfileData {
	return &NullableUserProfileData{value: val, isSet: true}
}

func (v NullableUserProfileData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserProfileData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


