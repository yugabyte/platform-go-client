/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// ProviderDetails struct for ProviderDetails
type ProviderDetails struct {
	AirGapInstall *bool `json:"airGapInstall,omitempty"`
	CloudInfo *CloudInfo `json:"cloudInfo,omitempty"`
	EnableNodeAgent *bool `json:"enableNodeAgent,omitempty"`
	InstallNodeExporter *bool `json:"installNodeExporter,omitempty"`
	NodeExporterPort *int32 `json:"nodeExporterPort,omitempty"`
	NodeExporterUser *string `json:"nodeExporterUser,omitempty"`
	NtpServers *[]string `json:"ntpServers,omitempty"`
	PasswordlessSudoAccess *bool `json:"passwordlessSudoAccess,omitempty"`
	ProvisionInstanceScript *string `json:"provisionInstanceScript,omitempty"`
	SetUpChrony *bool `json:"setUpChrony,omitempty"`
	ShowSetUpChrony *bool `json:"showSetUpChrony,omitempty"`
	SkipProvisioning *bool `json:"skipProvisioning,omitempty"`
	SshPort *int32 `json:"sshPort,omitempty"`
	SshUser *string `json:"sshUser,omitempty"`
}

// NewProviderDetails instantiates a new ProviderDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProviderDetails() *ProviderDetails {
	this := ProviderDetails{}
	return &this
}

// NewProviderDetailsWithDefaults instantiates a new ProviderDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProviderDetailsWithDefaults() *ProviderDetails {
	this := ProviderDetails{}
	return &this
}

// GetAirGapInstall returns the AirGapInstall field value if set, zero value otherwise.
func (o *ProviderDetails) GetAirGapInstall() bool {
	if o == nil || o.AirGapInstall == nil {
		var ret bool
		return ret
	}
	return *o.AirGapInstall
}

// GetAirGapInstallOk returns a tuple with the AirGapInstall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderDetails) GetAirGapInstallOk() (*bool, bool) {
	if o == nil || o.AirGapInstall == nil {
		return nil, false
	}
	return o.AirGapInstall, true
}

// HasAirGapInstall returns a boolean if a field has been set.
func (o *ProviderDetails) HasAirGapInstall() bool {
	if o != nil && o.AirGapInstall != nil {
		return true
	}

	return false
}

// SetAirGapInstall gets a reference to the given bool and assigns it to the AirGapInstall field.
func (o *ProviderDetails) SetAirGapInstall(v bool) {
	o.AirGapInstall = &v
}

// GetCloudInfo returns the CloudInfo field value if set, zero value otherwise.
func (o *ProviderDetails) GetCloudInfo() CloudInfo {
	if o == nil || o.CloudInfo == nil {
		var ret CloudInfo
		return ret
	}
	return *o.CloudInfo
}

// GetCloudInfoOk returns a tuple with the CloudInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderDetails) GetCloudInfoOk() (*CloudInfo, bool) {
	if o == nil || o.CloudInfo == nil {
		return nil, false
	}
	return o.CloudInfo, true
}

// HasCloudInfo returns a boolean if a field has been set.
func (o *ProviderDetails) HasCloudInfo() bool {
	if o != nil && o.CloudInfo != nil {
		return true
	}

	return false
}

// SetCloudInfo gets a reference to the given CloudInfo and assigns it to the CloudInfo field.
func (o *ProviderDetails) SetCloudInfo(v CloudInfo) {
	o.CloudInfo = &v
}

// GetEnableNodeAgent returns the EnableNodeAgent field value if set, zero value otherwise.
func (o *ProviderDetails) GetEnableNodeAgent() bool {
	if o == nil || o.EnableNodeAgent == nil {
		var ret bool
		return ret
	}
	return *o.EnableNodeAgent
}

// GetEnableNodeAgentOk returns a tuple with the EnableNodeAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderDetails) GetEnableNodeAgentOk() (*bool, bool) {
	if o == nil || o.EnableNodeAgent == nil {
		return nil, false
	}
	return o.EnableNodeAgent, true
}

// HasEnableNodeAgent returns a boolean if a field has been set.
func (o *ProviderDetails) HasEnableNodeAgent() bool {
	if o != nil && o.EnableNodeAgent != nil {
		return true
	}

	return false
}

// SetEnableNodeAgent gets a reference to the given bool and assigns it to the EnableNodeAgent field.
func (o *ProviderDetails) SetEnableNodeAgent(v bool) {
	o.EnableNodeAgent = &v
}

// GetInstallNodeExporter returns the InstallNodeExporter field value if set, zero value otherwise.
func (o *ProviderDetails) GetInstallNodeExporter() bool {
	if o == nil || o.InstallNodeExporter == nil {
		var ret bool
		return ret
	}
	return *o.InstallNodeExporter
}

// GetInstallNodeExporterOk returns a tuple with the InstallNodeExporter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderDetails) GetInstallNodeExporterOk() (*bool, bool) {
	if o == nil || o.InstallNodeExporter == nil {
		return nil, false
	}
	return o.InstallNodeExporter, true
}

// HasInstallNodeExporter returns a boolean if a field has been set.
func (o *ProviderDetails) HasInstallNodeExporter() bool {
	if o != nil && o.InstallNodeExporter != nil {
		return true
	}

	return false
}

// SetInstallNodeExporter gets a reference to the given bool and assigns it to the InstallNodeExporter field.
func (o *ProviderDetails) SetInstallNodeExporter(v bool) {
	o.InstallNodeExporter = &v
}

// GetNodeExporterPort returns the NodeExporterPort field value if set, zero value otherwise.
func (o *ProviderDetails) GetNodeExporterPort() int32 {
	if o == nil || o.NodeExporterPort == nil {
		var ret int32
		return ret
	}
	return *o.NodeExporterPort
}

// GetNodeExporterPortOk returns a tuple with the NodeExporterPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderDetails) GetNodeExporterPortOk() (*int32, bool) {
	if o == nil || o.NodeExporterPort == nil {
		return nil, false
	}
	return o.NodeExporterPort, true
}

// HasNodeExporterPort returns a boolean if a field has been set.
func (o *ProviderDetails) HasNodeExporterPort() bool {
	if o != nil && o.NodeExporterPort != nil {
		return true
	}

	return false
}

// SetNodeExporterPort gets a reference to the given int32 and assigns it to the NodeExporterPort field.
func (o *ProviderDetails) SetNodeExporterPort(v int32) {
	o.NodeExporterPort = &v
}

// GetNodeExporterUser returns the NodeExporterUser field value if set, zero value otherwise.
func (o *ProviderDetails) GetNodeExporterUser() string {
	if o == nil || o.NodeExporterUser == nil {
		var ret string
		return ret
	}
	return *o.NodeExporterUser
}

// GetNodeExporterUserOk returns a tuple with the NodeExporterUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderDetails) GetNodeExporterUserOk() (*string, bool) {
	if o == nil || o.NodeExporterUser == nil {
		return nil, false
	}
	return o.NodeExporterUser, true
}

// HasNodeExporterUser returns a boolean if a field has been set.
func (o *ProviderDetails) HasNodeExporterUser() bool {
	if o != nil && o.NodeExporterUser != nil {
		return true
	}

	return false
}

// SetNodeExporterUser gets a reference to the given string and assigns it to the NodeExporterUser field.
func (o *ProviderDetails) SetNodeExporterUser(v string) {
	o.NodeExporterUser = &v
}

// GetNtpServers returns the NtpServers field value if set, zero value otherwise.
func (o *ProviderDetails) GetNtpServers() []string {
	if o == nil || o.NtpServers == nil {
		var ret []string
		return ret
	}
	return *o.NtpServers
}

// GetNtpServersOk returns a tuple with the NtpServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderDetails) GetNtpServersOk() (*[]string, bool) {
	if o == nil || o.NtpServers == nil {
		return nil, false
	}
	return o.NtpServers, true
}

// HasNtpServers returns a boolean if a field has been set.
func (o *ProviderDetails) HasNtpServers() bool {
	if o != nil && o.NtpServers != nil {
		return true
	}

	return false
}

// SetNtpServers gets a reference to the given []string and assigns it to the NtpServers field.
func (o *ProviderDetails) SetNtpServers(v []string) {
	o.NtpServers = &v
}

// GetPasswordlessSudoAccess returns the PasswordlessSudoAccess field value if set, zero value otherwise.
func (o *ProviderDetails) GetPasswordlessSudoAccess() bool {
	if o == nil || o.PasswordlessSudoAccess == nil {
		var ret bool
		return ret
	}
	return *o.PasswordlessSudoAccess
}

// GetPasswordlessSudoAccessOk returns a tuple with the PasswordlessSudoAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderDetails) GetPasswordlessSudoAccessOk() (*bool, bool) {
	if o == nil || o.PasswordlessSudoAccess == nil {
		return nil, false
	}
	return o.PasswordlessSudoAccess, true
}

// HasPasswordlessSudoAccess returns a boolean if a field has been set.
func (o *ProviderDetails) HasPasswordlessSudoAccess() bool {
	if o != nil && o.PasswordlessSudoAccess != nil {
		return true
	}

	return false
}

// SetPasswordlessSudoAccess gets a reference to the given bool and assigns it to the PasswordlessSudoAccess field.
func (o *ProviderDetails) SetPasswordlessSudoAccess(v bool) {
	o.PasswordlessSudoAccess = &v
}

// GetProvisionInstanceScript returns the ProvisionInstanceScript field value if set, zero value otherwise.
func (o *ProviderDetails) GetProvisionInstanceScript() string {
	if o == nil || o.ProvisionInstanceScript == nil {
		var ret string
		return ret
	}
	return *o.ProvisionInstanceScript
}

// GetProvisionInstanceScriptOk returns a tuple with the ProvisionInstanceScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderDetails) GetProvisionInstanceScriptOk() (*string, bool) {
	if o == nil || o.ProvisionInstanceScript == nil {
		return nil, false
	}
	return o.ProvisionInstanceScript, true
}

// HasProvisionInstanceScript returns a boolean if a field has been set.
func (o *ProviderDetails) HasProvisionInstanceScript() bool {
	if o != nil && o.ProvisionInstanceScript != nil {
		return true
	}

	return false
}

// SetProvisionInstanceScript gets a reference to the given string and assigns it to the ProvisionInstanceScript field.
func (o *ProviderDetails) SetProvisionInstanceScript(v string) {
	o.ProvisionInstanceScript = &v
}

// GetSetUpChrony returns the SetUpChrony field value if set, zero value otherwise.
func (o *ProviderDetails) GetSetUpChrony() bool {
	if o == nil || o.SetUpChrony == nil {
		var ret bool
		return ret
	}
	return *o.SetUpChrony
}

// GetSetUpChronyOk returns a tuple with the SetUpChrony field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderDetails) GetSetUpChronyOk() (*bool, bool) {
	if o == nil || o.SetUpChrony == nil {
		return nil, false
	}
	return o.SetUpChrony, true
}

// HasSetUpChrony returns a boolean if a field has been set.
func (o *ProviderDetails) HasSetUpChrony() bool {
	if o != nil && o.SetUpChrony != nil {
		return true
	}

	return false
}

// SetSetUpChrony gets a reference to the given bool and assigns it to the SetUpChrony field.
func (o *ProviderDetails) SetSetUpChrony(v bool) {
	o.SetUpChrony = &v
}

// GetShowSetUpChrony returns the ShowSetUpChrony field value if set, zero value otherwise.
func (o *ProviderDetails) GetShowSetUpChrony() bool {
	if o == nil || o.ShowSetUpChrony == nil {
		var ret bool
		return ret
	}
	return *o.ShowSetUpChrony
}

// GetShowSetUpChronyOk returns a tuple with the ShowSetUpChrony field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderDetails) GetShowSetUpChronyOk() (*bool, bool) {
	if o == nil || o.ShowSetUpChrony == nil {
		return nil, false
	}
	return o.ShowSetUpChrony, true
}

// HasShowSetUpChrony returns a boolean if a field has been set.
func (o *ProviderDetails) HasShowSetUpChrony() bool {
	if o != nil && o.ShowSetUpChrony != nil {
		return true
	}

	return false
}

// SetShowSetUpChrony gets a reference to the given bool and assigns it to the ShowSetUpChrony field.
func (o *ProviderDetails) SetShowSetUpChrony(v bool) {
	o.ShowSetUpChrony = &v
}

// GetSkipProvisioning returns the SkipProvisioning field value if set, zero value otherwise.
func (o *ProviderDetails) GetSkipProvisioning() bool {
	if o == nil || o.SkipProvisioning == nil {
		var ret bool
		return ret
	}
	return *o.SkipProvisioning
}

// GetSkipProvisioningOk returns a tuple with the SkipProvisioning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderDetails) GetSkipProvisioningOk() (*bool, bool) {
	if o == nil || o.SkipProvisioning == nil {
		return nil, false
	}
	return o.SkipProvisioning, true
}

// HasSkipProvisioning returns a boolean if a field has been set.
func (o *ProviderDetails) HasSkipProvisioning() bool {
	if o != nil && o.SkipProvisioning != nil {
		return true
	}

	return false
}

// SetSkipProvisioning gets a reference to the given bool and assigns it to the SkipProvisioning field.
func (o *ProviderDetails) SetSkipProvisioning(v bool) {
	o.SkipProvisioning = &v
}

// GetSshPort returns the SshPort field value if set, zero value otherwise.
func (o *ProviderDetails) GetSshPort() int32 {
	if o == nil || o.SshPort == nil {
		var ret int32
		return ret
	}
	return *o.SshPort
}

// GetSshPortOk returns a tuple with the SshPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderDetails) GetSshPortOk() (*int32, bool) {
	if o == nil || o.SshPort == nil {
		return nil, false
	}
	return o.SshPort, true
}

// HasSshPort returns a boolean if a field has been set.
func (o *ProviderDetails) HasSshPort() bool {
	if o != nil && o.SshPort != nil {
		return true
	}

	return false
}

// SetSshPort gets a reference to the given int32 and assigns it to the SshPort field.
func (o *ProviderDetails) SetSshPort(v int32) {
	o.SshPort = &v
}

// GetSshUser returns the SshUser field value if set, zero value otherwise.
func (o *ProviderDetails) GetSshUser() string {
	if o == nil || o.SshUser == nil {
		var ret string
		return ret
	}
	return *o.SshUser
}

// GetSshUserOk returns a tuple with the SshUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderDetails) GetSshUserOk() (*string, bool) {
	if o == nil || o.SshUser == nil {
		return nil, false
	}
	return o.SshUser, true
}

// HasSshUser returns a boolean if a field has been set.
func (o *ProviderDetails) HasSshUser() bool {
	if o != nil && o.SshUser != nil {
		return true
	}

	return false
}

// SetSshUser gets a reference to the given string and assigns it to the SshUser field.
func (o *ProviderDetails) SetSshUser(v string) {
	o.SshUser = &v
}

func (o ProviderDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AirGapInstall != nil {
		toSerialize["airGapInstall"] = o.AirGapInstall
	}
	if o.CloudInfo != nil {
		toSerialize["cloudInfo"] = o.CloudInfo
	}
	if o.EnableNodeAgent != nil {
		toSerialize["enableNodeAgent"] = o.EnableNodeAgent
	}
	if o.InstallNodeExporter != nil {
		toSerialize["installNodeExporter"] = o.InstallNodeExporter
	}
	if o.NodeExporterPort != nil {
		toSerialize["nodeExporterPort"] = o.NodeExporterPort
	}
	if o.NodeExporterUser != nil {
		toSerialize["nodeExporterUser"] = o.NodeExporterUser
	}
	if o.NtpServers != nil {
		toSerialize["ntpServers"] = o.NtpServers
	}
	if o.PasswordlessSudoAccess != nil {
		toSerialize["passwordlessSudoAccess"] = o.PasswordlessSudoAccess
	}
	if o.ProvisionInstanceScript != nil {
		toSerialize["provisionInstanceScript"] = o.ProvisionInstanceScript
	}
	if o.SetUpChrony != nil {
		toSerialize["setUpChrony"] = o.SetUpChrony
	}
	if o.ShowSetUpChrony != nil {
		toSerialize["showSetUpChrony"] = o.ShowSetUpChrony
	}
	if o.SkipProvisioning != nil {
		toSerialize["skipProvisioning"] = o.SkipProvisioning
	}
	if o.SshPort != nil {
		toSerialize["sshPort"] = o.SshPort
	}
	if o.SshUser != nil {
		toSerialize["sshUser"] = o.SshUser
	}
	return json.Marshal(toSerialize)
}

type NullableProviderDetails struct {
	value *ProviderDetails
	isSet bool
}

func (v NullableProviderDetails) Get() *ProviderDetails {
	return v.value
}

func (v *NullableProviderDetails) Set(val *ProviderDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableProviderDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableProviderDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProviderDetails(val *ProviderDetails) *NullableProviderDetails {
	return &NullableProviderDetails{value: val, isSet: true}
}

func (v NullableProviderDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProviderDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


