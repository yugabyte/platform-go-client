/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"time"
)

// TelemetryProvider Telemetry Provider Model
type TelemetryProvider struct {
	Config TelemetryProviderConfig `json:"config"`
	// Creation timestamp
	CreateTime *time.Time `json:"createTime,omitempty"`
	// Customer UUID
	CustomerUUID string `json:"customerUUID"`
	// Name
	Name string `json:"name"`
	// Extra Tags
	Tags map[string]string `json:"tags"`
	// Updation timestamp
	UpdateTime *time.Time `json:"updateTime,omitempty"`
	// Telemetry Provider UUID
	Uuid string `json:"uuid"`
}

// NewTelemetryProvider instantiates a new TelemetryProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTelemetryProvider(config TelemetryProviderConfig, customerUUID string, name string, tags map[string]string, uuid string) *TelemetryProvider {
	this := TelemetryProvider{}
	this.Config = config
	this.CustomerUUID = customerUUID
	this.Name = name
	this.Tags = tags
	this.Uuid = uuid
	return &this
}

// NewTelemetryProviderWithDefaults instantiates a new TelemetryProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTelemetryProviderWithDefaults() *TelemetryProvider {
	this := TelemetryProvider{}
	return &this
}

// GetConfig returns the Config field value
func (o *TelemetryProvider) GetConfig() TelemetryProviderConfig {
	if o == nil {
		var ret TelemetryProviderConfig
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *TelemetryProvider) GetConfigOk() (*TelemetryProviderConfig, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *TelemetryProvider) SetConfig(v TelemetryProviderConfig) {
	o.Config = v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *TelemetryProvider) GetCreateTime() time.Time {
	if o == nil || o.CreateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelemetryProvider) GetCreateTimeOk() (*time.Time, bool) {
	if o == nil || o.CreateTime == nil {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *TelemetryProvider) HasCreateTime() bool {
	if o != nil && o.CreateTime != nil {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given time.Time and assigns it to the CreateTime field.
func (o *TelemetryProvider) SetCreateTime(v time.Time) {
	o.CreateTime = &v
}

// GetCustomerUUID returns the CustomerUUID field value
func (o *TelemetryProvider) GetCustomerUUID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerUUID
}

// GetCustomerUUIDOk returns a tuple with the CustomerUUID field value
// and a boolean to check if the value has been set.
func (o *TelemetryProvider) GetCustomerUUIDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CustomerUUID, true
}

// SetCustomerUUID sets field value
func (o *TelemetryProvider) SetCustomerUUID(v string) {
	o.CustomerUUID = v
}

// GetName returns the Name field value
func (o *TelemetryProvider) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TelemetryProvider) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TelemetryProvider) SetName(v string) {
	o.Name = v
}

// GetTags returns the Tags field value
func (o *TelemetryProvider) GetTags() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *TelemetryProvider) GetTagsOk() (*map[string]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Tags, true
}

// SetTags sets field value
func (o *TelemetryProvider) SetTags(v map[string]string) {
	o.Tags = v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *TelemetryProvider) GetUpdateTime() time.Time {
	if o == nil || o.UpdateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TelemetryProvider) GetUpdateTimeOk() (*time.Time, bool) {
	if o == nil || o.UpdateTime == nil {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *TelemetryProvider) HasUpdateTime() bool {
	if o != nil && o.UpdateTime != nil {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given time.Time and assigns it to the UpdateTime field.
func (o *TelemetryProvider) SetUpdateTime(v time.Time) {
	o.UpdateTime = &v
}

// GetUuid returns the Uuid field value
func (o *TelemetryProvider) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *TelemetryProvider) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *TelemetryProvider) SetUuid(v string) {
	o.Uuid = v
}

func (o TelemetryProvider) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["config"] = o.Config
	}
	if o.CreateTime != nil {
		toSerialize["createTime"] = o.CreateTime
	}
	if true {
		toSerialize["customerUUID"] = o.CustomerUUID
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["tags"] = o.Tags
	}
	if o.UpdateTime != nil {
		toSerialize["updateTime"] = o.UpdateTime
	}
	if true {
		toSerialize["uuid"] = o.Uuid
	}
	return json.Marshal(toSerialize)
}

type NullableTelemetryProvider struct {
	value *TelemetryProvider
	isSet bool
}

func (v NullableTelemetryProvider) Get() *TelemetryProvider {
	return v.value
}

func (v *NullableTelemetryProvider) Set(val *TelemetryProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableTelemetryProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableTelemetryProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTelemetryProvider(val *TelemetryProvider) *NullableTelemetryProvider {
	return &NullableTelemetryProvider{value: val, isSet: true}
}

func (v NullableTelemetryProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTelemetryProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


