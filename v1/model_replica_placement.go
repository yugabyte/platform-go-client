/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// ReplicaPlacement struct for ReplicaPlacement
type ReplicaPlacement struct {
	NumReplicas int32 `json:"numReplicas"`
	PlacementBlocks []PlacementBlock `json:"placementBlocks"`
}

// NewReplicaPlacement instantiates a new ReplicaPlacement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicaPlacement(numReplicas int32, placementBlocks []PlacementBlock) *ReplicaPlacement {
	this := ReplicaPlacement{}
	this.NumReplicas = numReplicas
	this.PlacementBlocks = placementBlocks
	return &this
}

// NewReplicaPlacementWithDefaults instantiates a new ReplicaPlacement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicaPlacementWithDefaults() *ReplicaPlacement {
	this := ReplicaPlacement{}
	return &this
}

// GetNumReplicas returns the NumReplicas field value
func (o *ReplicaPlacement) GetNumReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumReplicas
}

// GetNumReplicasOk returns a tuple with the NumReplicas field value
// and a boolean to check if the value has been set.
func (o *ReplicaPlacement) GetNumReplicasOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NumReplicas, true
}

// SetNumReplicas sets field value
func (o *ReplicaPlacement) SetNumReplicas(v int32) {
	o.NumReplicas = v
}

// GetPlacementBlocks returns the PlacementBlocks field value
func (o *ReplicaPlacement) GetPlacementBlocks() []PlacementBlock {
	if o == nil {
		var ret []PlacementBlock
		return ret
	}

	return o.PlacementBlocks
}

// GetPlacementBlocksOk returns a tuple with the PlacementBlocks field value
// and a boolean to check if the value has been set.
func (o *ReplicaPlacement) GetPlacementBlocksOk() (*[]PlacementBlock, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PlacementBlocks, true
}

// SetPlacementBlocks sets field value
func (o *ReplicaPlacement) SetPlacementBlocks(v []PlacementBlock) {
	o.PlacementBlocks = v
}

func (o ReplicaPlacement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["numReplicas"] = o.NumReplicas
	}
	if true {
		toSerialize["placementBlocks"] = o.PlacementBlocks
	}
	return json.Marshal(toSerialize)
}

type NullableReplicaPlacement struct {
	value *ReplicaPlacement
	isSet bool
}

func (v NullableReplicaPlacement) Get() *ReplicaPlacement {
	return v.value
}

func (v *NullableReplicaPlacement) Set(val *ReplicaPlacement) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicaPlacement) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicaPlacement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicaPlacement(val *ReplicaPlacement) *NullableReplicaPlacement {
	return &NullableReplicaPlacement{value: val, isSet: true}
}

func (v NullableReplicaPlacement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicaPlacement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


