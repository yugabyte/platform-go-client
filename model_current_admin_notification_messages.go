/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// CurrentAdminNotificationMessages struct for CurrentAdminNotificationMessages
type CurrentAdminNotificationMessages struct {
	// Messages
	Messages *[]AdminNotification `json:"messages,omitempty"`
}

// NewCurrentAdminNotificationMessages instantiates a new CurrentAdminNotificationMessages object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCurrentAdminNotificationMessages() *CurrentAdminNotificationMessages {
	this := CurrentAdminNotificationMessages{}
	return &this
}

// NewCurrentAdminNotificationMessagesWithDefaults instantiates a new CurrentAdminNotificationMessages object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCurrentAdminNotificationMessagesWithDefaults() *CurrentAdminNotificationMessages {
	this := CurrentAdminNotificationMessages{}
	return &this
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *CurrentAdminNotificationMessages) GetMessages() []AdminNotification {
	if o == nil || o.Messages == nil {
		var ret []AdminNotification
		return ret
	}
	return *o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurrentAdminNotificationMessages) GetMessagesOk() (*[]AdminNotification, bool) {
	if o == nil || o.Messages == nil {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *CurrentAdminNotificationMessages) HasMessages() bool {
	if o != nil && o.Messages != nil {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []AdminNotification and assigns it to the Messages field.
func (o *CurrentAdminNotificationMessages) SetMessages(v []AdminNotification) {
	o.Messages = &v
}

func (o CurrentAdminNotificationMessages) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Messages != nil {
		toSerialize["messages"] = o.Messages
	}
	return json.Marshal(toSerialize)
}

type NullableCurrentAdminNotificationMessages struct {
	value *CurrentAdminNotificationMessages
	isSet bool
}

func (v NullableCurrentAdminNotificationMessages) Get() *CurrentAdminNotificationMessages {
	return v.value
}

func (v *NullableCurrentAdminNotificationMessages) Set(val *CurrentAdminNotificationMessages) {
	v.value = val
	v.isSet = true
}

func (v NullableCurrentAdminNotificationMessages) IsSet() bool {
	return v.isSet
}

func (v *NullableCurrentAdminNotificationMessages) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCurrentAdminNotificationMessages(val *CurrentAdminNotificationMessages) *NullableCurrentAdminNotificationMessages {
	return &NullableCurrentAdminNotificationMessages{value: val, isSet: true}
}

func (v NullableCurrentAdminNotificationMessages) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCurrentAdminNotificationMessages) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


