/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// GFlagsValidationResponse struct for GFlagsValidationResponse
type GFlagsValidationResponse struct {
	MASTER *GFlagValidationDetails `json:"MASTER,omitempty"`
	// WARNING: This is a preview API that could change. Name of the gflag
	Name *string `json:"Name,omitempty"`
	TSERVER *GFlagValidationDetails `json:"TSERVER,omitempty"`
}

// NewGFlagsValidationResponse instantiates a new GFlagsValidationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGFlagsValidationResponse() *GFlagsValidationResponse {
	this := GFlagsValidationResponse{}
	return &this
}

// NewGFlagsValidationResponseWithDefaults instantiates a new GFlagsValidationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGFlagsValidationResponseWithDefaults() *GFlagsValidationResponse {
	this := GFlagsValidationResponse{}
	return &this
}

// GetMASTER returns the MASTER field value if set, zero value otherwise.
func (o *GFlagsValidationResponse) GetMASTER() GFlagValidationDetails {
	if o == nil || o.MASTER == nil {
		var ret GFlagValidationDetails
		return ret
	}
	return *o.MASTER
}

// GetMASTEROk returns a tuple with the MASTER field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GFlagsValidationResponse) GetMASTEROk() (*GFlagValidationDetails, bool) {
	if o == nil || o.MASTER == nil {
		return nil, false
	}
	return o.MASTER, true
}

// HasMASTER returns a boolean if a field has been set.
func (o *GFlagsValidationResponse) HasMASTER() bool {
	if o != nil && o.MASTER != nil {
		return true
	}

	return false
}

// SetMASTER gets a reference to the given GFlagValidationDetails and assigns it to the MASTER field.
func (o *GFlagsValidationResponse) SetMASTER(v GFlagValidationDetails) {
	o.MASTER = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GFlagsValidationResponse) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GFlagsValidationResponse) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GFlagsValidationResponse) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GFlagsValidationResponse) SetName(v string) {
	o.Name = &v
}

// GetTSERVER returns the TSERVER field value if set, zero value otherwise.
func (o *GFlagsValidationResponse) GetTSERVER() GFlagValidationDetails {
	if o == nil || o.TSERVER == nil {
		var ret GFlagValidationDetails
		return ret
	}
	return *o.TSERVER
}

// GetTSERVEROk returns a tuple with the TSERVER field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GFlagsValidationResponse) GetTSERVEROk() (*GFlagValidationDetails, bool) {
	if o == nil || o.TSERVER == nil {
		return nil, false
	}
	return o.TSERVER, true
}

// HasTSERVER returns a boolean if a field has been set.
func (o *GFlagsValidationResponse) HasTSERVER() bool {
	if o != nil && o.TSERVER != nil {
		return true
	}

	return false
}

// SetTSERVER gets a reference to the given GFlagValidationDetails and assigns it to the TSERVER field.
func (o *GFlagsValidationResponse) SetTSERVER(v GFlagValidationDetails) {
	o.TSERVER = &v
}

func (o GFlagsValidationResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MASTER != nil {
		toSerialize["MASTER"] = o.MASTER
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	if o.TSERVER != nil {
		toSerialize["TSERVER"] = o.TSERVER
	}
	return json.Marshal(toSerialize)
}

type NullableGFlagsValidationResponse struct {
	value *GFlagsValidationResponse
	isSet bool
}

func (v NullableGFlagsValidationResponse) Get() *GFlagsValidationResponse {
	return v.value
}

func (v *NullableGFlagsValidationResponse) Set(val *GFlagsValidationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGFlagsValidationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGFlagsValidationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGFlagsValidationResponse(val *GFlagsValidationResponse) *NullableGFlagsValidationResponse {
	return &NullableGFlagsValidationResponse{value: val, isSet: true}
}

func (v NullableGFlagsValidationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGFlagsValidationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


