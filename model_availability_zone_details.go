/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// AvailabilityZoneDetails struct for AvailabilityZoneDetails
type AvailabilityZoneDetails struct {
	CloudInfo *AZCloudInfo `json:"cloudInfo,omitempty"`
}

// NewAvailabilityZoneDetails instantiates a new AvailabilityZoneDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAvailabilityZoneDetails() *AvailabilityZoneDetails {
	this := AvailabilityZoneDetails{}
	return &this
}

// NewAvailabilityZoneDetailsWithDefaults instantiates a new AvailabilityZoneDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAvailabilityZoneDetailsWithDefaults() *AvailabilityZoneDetails {
	this := AvailabilityZoneDetails{}
	return &this
}

// GetCloudInfo returns the CloudInfo field value if set, zero value otherwise.
func (o *AvailabilityZoneDetails) GetCloudInfo() AZCloudInfo {
	if o == nil || o.CloudInfo == nil {
		var ret AZCloudInfo
		return ret
	}
	return *o.CloudInfo
}

// GetCloudInfoOk returns a tuple with the CloudInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailabilityZoneDetails) GetCloudInfoOk() (*AZCloudInfo, bool) {
	if o == nil || o.CloudInfo == nil {
		return nil, false
	}
	return o.CloudInfo, true
}

// HasCloudInfo returns a boolean if a field has been set.
func (o *AvailabilityZoneDetails) HasCloudInfo() bool {
	if o != nil && o.CloudInfo != nil {
		return true
	}

	return false
}

// SetCloudInfo gets a reference to the given AZCloudInfo and assigns it to the CloudInfo field.
func (o *AvailabilityZoneDetails) SetCloudInfo(v AZCloudInfo) {
	o.CloudInfo = &v
}

func (o AvailabilityZoneDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CloudInfo != nil {
		toSerialize["cloudInfo"] = o.CloudInfo
	}
	return json.Marshal(toSerialize)
}

type NullableAvailabilityZoneDetails struct {
	value *AvailabilityZoneDetails
	isSet bool
}

func (v NullableAvailabilityZoneDetails) Get() *AvailabilityZoneDetails {
	return v.value
}

func (v *NullableAvailabilityZoneDetails) Set(val *AvailabilityZoneDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableAvailabilityZoneDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableAvailabilityZoneDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAvailabilityZoneDetails(val *AvailabilityZoneDetails) *NullableAvailabilityZoneDetails {
	return &NullableAvailabilityZoneDetails{value: val, isSet: true}
}

func (v NullableAvailabilityZoneDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAvailabilityZoneDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


