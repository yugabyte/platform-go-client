/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// XClusterConfigCreateFormData xcluster create form
type XClusterConfigCreateFormData struct {
	// Name
	Name string `json:"name"`
	// Source Universe UUID
	SourceUniverseUUID string `json:"sourceUniverseUUID"`
	// Source Universe table IDs
	Tables []string `json:"tables"`
	// Target Universe UUID
	TargetUniverseUUID string `json:"targetUniverseUUID"`
}

// NewXClusterConfigCreateFormData instantiates a new XClusterConfigCreateFormData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewXClusterConfigCreateFormData(name string, sourceUniverseUUID string, tables []string, targetUniverseUUID string, ) *XClusterConfigCreateFormData {
	this := XClusterConfigCreateFormData{}
	this.Name = name
	this.SourceUniverseUUID = sourceUniverseUUID
	this.Tables = tables
	this.TargetUniverseUUID = targetUniverseUUID
	return &this
}

// NewXClusterConfigCreateFormDataWithDefaults instantiates a new XClusterConfigCreateFormData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewXClusterConfigCreateFormDataWithDefaults() *XClusterConfigCreateFormData {
	this := XClusterConfigCreateFormData{}
	return &this
}

// GetName returns the Name field value
func (o *XClusterConfigCreateFormData) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *XClusterConfigCreateFormData) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *XClusterConfigCreateFormData) SetName(v string) {
	o.Name = v
}

// GetSourceUniverseUUID returns the SourceUniverseUUID field value
func (o *XClusterConfigCreateFormData) GetSourceUniverseUUID() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SourceUniverseUUID
}

// GetSourceUniverseUUIDOk returns a tuple with the SourceUniverseUUID field value
// and a boolean to check if the value has been set.
func (o *XClusterConfigCreateFormData) GetSourceUniverseUUIDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SourceUniverseUUID, true
}

// SetSourceUniverseUUID sets field value
func (o *XClusterConfigCreateFormData) SetSourceUniverseUUID(v string) {
	o.SourceUniverseUUID = v
}

// GetTables returns the Tables field value
func (o *XClusterConfigCreateFormData) GetTables() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.Tables
}

// GetTablesOk returns a tuple with the Tables field value
// and a boolean to check if the value has been set.
func (o *XClusterConfigCreateFormData) GetTablesOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Tables, true
}

// SetTables sets field value
func (o *XClusterConfigCreateFormData) SetTables(v []string) {
	o.Tables = v
}

// GetTargetUniverseUUID returns the TargetUniverseUUID field value
func (o *XClusterConfigCreateFormData) GetTargetUniverseUUID() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.TargetUniverseUUID
}

// GetTargetUniverseUUIDOk returns a tuple with the TargetUniverseUUID field value
// and a boolean to check if the value has been set.
func (o *XClusterConfigCreateFormData) GetTargetUniverseUUIDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TargetUniverseUUID, true
}

// SetTargetUniverseUUID sets field value
func (o *XClusterConfigCreateFormData) SetTargetUniverseUUID(v string) {
	o.TargetUniverseUUID = v
}

func (o XClusterConfigCreateFormData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["sourceUniverseUUID"] = o.SourceUniverseUUID
	}
	if true {
		toSerialize["tables"] = o.Tables
	}
	if true {
		toSerialize["targetUniverseUUID"] = o.TargetUniverseUUID
	}
	return json.Marshal(toSerialize)
}

type NullableXClusterConfigCreateFormData struct {
	value *XClusterConfigCreateFormData
	isSet bool
}

func (v NullableXClusterConfigCreateFormData) Get() *XClusterConfigCreateFormData {
	return v.value
}

func (v *NullableXClusterConfigCreateFormData) Set(val *XClusterConfigCreateFormData) {
	v.value = val
	v.isSet = true
}

func (v NullableXClusterConfigCreateFormData) IsSet() bool {
	return v.isSet
}

func (v *NullableXClusterConfigCreateFormData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableXClusterConfigCreateFormData(val *XClusterConfigCreateFormData) *NullableXClusterConfigCreateFormData {
	return &NullableXClusterConfigCreateFormData{value: val, isSet: true}
}

func (v NullableXClusterConfigCreateFormData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableXClusterConfigCreateFormData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


