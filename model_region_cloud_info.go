/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// RegionCloudInfo struct for RegionCloudInfo
type RegionCloudInfo struct {
	Aws *AWSRegionCloudInfo `json:"aws,omitempty"`
	Azu *AzureRegionCloudInfo `json:"azu,omitempty"`
	Gcp *GCPRegionCloudInfo `json:"gcp,omitempty"`
	Kubernetes *KubernetesRegionInfo `json:"kubernetes,omitempty"`
}

// NewRegionCloudInfo instantiates a new RegionCloudInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegionCloudInfo() *RegionCloudInfo {
	this := RegionCloudInfo{}
	return &this
}

// NewRegionCloudInfoWithDefaults instantiates a new RegionCloudInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegionCloudInfoWithDefaults() *RegionCloudInfo {
	this := RegionCloudInfo{}
	return &this
}

// GetAws returns the Aws field value if set, zero value otherwise.
func (o *RegionCloudInfo) GetAws() AWSRegionCloudInfo {
	if o == nil || o.Aws == nil {
		var ret AWSRegionCloudInfo
		return ret
	}
	return *o.Aws
}

// GetAwsOk returns a tuple with the Aws field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionCloudInfo) GetAwsOk() (*AWSRegionCloudInfo, bool) {
	if o == nil || o.Aws == nil {
		return nil, false
	}
	return o.Aws, true
}

// HasAws returns a boolean if a field has been set.
func (o *RegionCloudInfo) HasAws() bool {
	if o != nil && o.Aws != nil {
		return true
	}

	return false
}

// SetAws gets a reference to the given AWSRegionCloudInfo and assigns it to the Aws field.
func (o *RegionCloudInfo) SetAws(v AWSRegionCloudInfo) {
	o.Aws = &v
}

// GetAzu returns the Azu field value if set, zero value otherwise.
func (o *RegionCloudInfo) GetAzu() AzureRegionCloudInfo {
	if o == nil || o.Azu == nil {
		var ret AzureRegionCloudInfo
		return ret
	}
	return *o.Azu
}

// GetAzuOk returns a tuple with the Azu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionCloudInfo) GetAzuOk() (*AzureRegionCloudInfo, bool) {
	if o == nil || o.Azu == nil {
		return nil, false
	}
	return o.Azu, true
}

// HasAzu returns a boolean if a field has been set.
func (o *RegionCloudInfo) HasAzu() bool {
	if o != nil && o.Azu != nil {
		return true
	}

	return false
}

// SetAzu gets a reference to the given AzureRegionCloudInfo and assigns it to the Azu field.
func (o *RegionCloudInfo) SetAzu(v AzureRegionCloudInfo) {
	o.Azu = &v
}

// GetGcp returns the Gcp field value if set, zero value otherwise.
func (o *RegionCloudInfo) GetGcp() GCPRegionCloudInfo {
	if o == nil || o.Gcp == nil {
		var ret GCPRegionCloudInfo
		return ret
	}
	return *o.Gcp
}

// GetGcpOk returns a tuple with the Gcp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionCloudInfo) GetGcpOk() (*GCPRegionCloudInfo, bool) {
	if o == nil || o.Gcp == nil {
		return nil, false
	}
	return o.Gcp, true
}

// HasGcp returns a boolean if a field has been set.
func (o *RegionCloudInfo) HasGcp() bool {
	if o != nil && o.Gcp != nil {
		return true
	}

	return false
}

// SetGcp gets a reference to the given GCPRegionCloudInfo and assigns it to the Gcp field.
func (o *RegionCloudInfo) SetGcp(v GCPRegionCloudInfo) {
	o.Gcp = &v
}

// GetKubernetes returns the Kubernetes field value if set, zero value otherwise.
func (o *RegionCloudInfo) GetKubernetes() KubernetesRegionInfo {
	if o == nil || o.Kubernetes == nil {
		var ret KubernetesRegionInfo
		return ret
	}
	return *o.Kubernetes
}

// GetKubernetesOk returns a tuple with the Kubernetes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionCloudInfo) GetKubernetesOk() (*KubernetesRegionInfo, bool) {
	if o == nil || o.Kubernetes == nil {
		return nil, false
	}
	return o.Kubernetes, true
}

// HasKubernetes returns a boolean if a field has been set.
func (o *RegionCloudInfo) HasKubernetes() bool {
	if o != nil && o.Kubernetes != nil {
		return true
	}

	return false
}

// SetKubernetes gets a reference to the given KubernetesRegionInfo and assigns it to the Kubernetes field.
func (o *RegionCloudInfo) SetKubernetes(v KubernetesRegionInfo) {
	o.Kubernetes = &v
}

func (o RegionCloudInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Aws != nil {
		toSerialize["aws"] = o.Aws
	}
	if o.Azu != nil {
		toSerialize["azu"] = o.Azu
	}
	if o.Gcp != nil {
		toSerialize["gcp"] = o.Gcp
	}
	if o.Kubernetes != nil {
		toSerialize["kubernetes"] = o.Kubernetes
	}
	return json.Marshal(toSerialize)
}

type NullableRegionCloudInfo struct {
	value *RegionCloudInfo
	isSet bool
}

func (v NullableRegionCloudInfo) Get() *RegionCloudInfo {
	return v.value
}

func (v *NullableRegionCloudInfo) Set(val *RegionCloudInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableRegionCloudInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableRegionCloudInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegionCloudInfo(val *RegionCloudInfo) *NullableRegionCloudInfo {
	return &NullableRegionCloudInfo{value: val, isSet: true}
}

func (v NullableRegionCloudInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegionCloudInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


