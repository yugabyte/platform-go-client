/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// PerformanceRecommendation struct for PerformanceRecommendation
type PerformanceRecommendation struct {
	CustomerId string `json:"customerId"`
	EntityNames string `json:"entityNames"`
	EntityType string `json:"entityType"`
	Id string `json:"id"`
	IsStale bool `json:"isStale"`
	New bool `json:"new"`
	Observation string `json:"observation"`
	Recommendation string `json:"recommendation"`
	RecommendationInfo map[string]map[string]interface{} `json:"recommendationInfo"`
	RecommendationPriority string `json:"recommendationPriority"`
	RecommendationState string `json:"recommendationState"`
	RecommendationTimestamp int64 `json:"recommendationTimestamp"`
	RecommendationType string `json:"recommendationType"`
	StateChangeAuditInfoList []StateChangeAuditInfo `json:"stateChangeAuditInfoList"`
	UniverseId string `json:"universeId"`
}

// NewPerformanceRecommendation instantiates a new PerformanceRecommendation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPerformanceRecommendation(customerId string, entityNames string, entityType string, id string, isStale bool, new bool, observation string, recommendation string, recommendationInfo map[string]map[string]interface{}, recommendationPriority string, recommendationState string, recommendationTimestamp int64, recommendationType string, stateChangeAuditInfoList []StateChangeAuditInfo, universeId string) *PerformanceRecommendation {
	this := PerformanceRecommendation{}
	this.CustomerId = customerId
	this.EntityNames = entityNames
	this.EntityType = entityType
	this.Id = id
	this.IsStale = isStale
	this.New = new
	this.Observation = observation
	this.Recommendation = recommendation
	this.RecommendationInfo = recommendationInfo
	this.RecommendationPriority = recommendationPriority
	this.RecommendationState = recommendationState
	this.RecommendationTimestamp = recommendationTimestamp
	this.RecommendationType = recommendationType
	this.StateChangeAuditInfoList = stateChangeAuditInfoList
	this.UniverseId = universeId
	return &this
}

// NewPerformanceRecommendationWithDefaults instantiates a new PerformanceRecommendation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPerformanceRecommendationWithDefaults() *PerformanceRecommendation {
	this := PerformanceRecommendation{}
	return &this
}

// GetCustomerId returns the CustomerId field value
func (o *PerformanceRecommendation) GetCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
func (o *PerformanceRecommendation) GetCustomerIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CustomerId, true
}

// SetCustomerId sets field value
func (o *PerformanceRecommendation) SetCustomerId(v string) {
	o.CustomerId = v
}

// GetEntityNames returns the EntityNames field value
func (o *PerformanceRecommendation) GetEntityNames() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityNames
}

// GetEntityNamesOk returns a tuple with the EntityNames field value
// and a boolean to check if the value has been set.
func (o *PerformanceRecommendation) GetEntityNamesOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EntityNames, true
}

// SetEntityNames sets field value
func (o *PerformanceRecommendation) SetEntityNames(v string) {
	o.EntityNames = v
}

// GetEntityType returns the EntityType field value
func (o *PerformanceRecommendation) GetEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *PerformanceRecommendation) GetEntityTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *PerformanceRecommendation) SetEntityType(v string) {
	o.EntityType = v
}

// GetId returns the Id field value
func (o *PerformanceRecommendation) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PerformanceRecommendation) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PerformanceRecommendation) SetId(v string) {
	o.Id = v
}

// GetIsStale returns the IsStale field value
func (o *PerformanceRecommendation) GetIsStale() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsStale
}

// GetIsStaleOk returns a tuple with the IsStale field value
// and a boolean to check if the value has been set.
func (o *PerformanceRecommendation) GetIsStaleOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsStale, true
}

// SetIsStale sets field value
func (o *PerformanceRecommendation) SetIsStale(v bool) {
	o.IsStale = v
}

// GetNew returns the New field value
func (o *PerformanceRecommendation) GetNew() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.New
}

// GetNewOk returns a tuple with the New field value
// and a boolean to check if the value has been set.
func (o *PerformanceRecommendation) GetNewOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.New, true
}

// SetNew sets field value
func (o *PerformanceRecommendation) SetNew(v bool) {
	o.New = v
}

// GetObservation returns the Observation field value
func (o *PerformanceRecommendation) GetObservation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Observation
}

// GetObservationOk returns a tuple with the Observation field value
// and a boolean to check if the value has been set.
func (o *PerformanceRecommendation) GetObservationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Observation, true
}

// SetObservation sets field value
func (o *PerformanceRecommendation) SetObservation(v string) {
	o.Observation = v
}

// GetRecommendation returns the Recommendation field value
func (o *PerformanceRecommendation) GetRecommendation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Recommendation
}

// GetRecommendationOk returns a tuple with the Recommendation field value
// and a boolean to check if the value has been set.
func (o *PerformanceRecommendation) GetRecommendationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Recommendation, true
}

// SetRecommendation sets field value
func (o *PerformanceRecommendation) SetRecommendation(v string) {
	o.Recommendation = v
}

// GetRecommendationInfo returns the RecommendationInfo field value
func (o *PerformanceRecommendation) GetRecommendationInfo() map[string]map[string]interface{} {
	if o == nil {
		var ret map[string]map[string]interface{}
		return ret
	}

	return o.RecommendationInfo
}

// GetRecommendationInfoOk returns a tuple with the RecommendationInfo field value
// and a boolean to check if the value has been set.
func (o *PerformanceRecommendation) GetRecommendationInfoOk() (*map[string]map[string]interface{}, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RecommendationInfo, true
}

// SetRecommendationInfo sets field value
func (o *PerformanceRecommendation) SetRecommendationInfo(v map[string]map[string]interface{}) {
	o.RecommendationInfo = v
}

// GetRecommendationPriority returns the RecommendationPriority field value
func (o *PerformanceRecommendation) GetRecommendationPriority() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecommendationPriority
}

// GetRecommendationPriorityOk returns a tuple with the RecommendationPriority field value
// and a boolean to check if the value has been set.
func (o *PerformanceRecommendation) GetRecommendationPriorityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RecommendationPriority, true
}

// SetRecommendationPriority sets field value
func (o *PerformanceRecommendation) SetRecommendationPriority(v string) {
	o.RecommendationPriority = v
}

// GetRecommendationState returns the RecommendationState field value
func (o *PerformanceRecommendation) GetRecommendationState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecommendationState
}

// GetRecommendationStateOk returns a tuple with the RecommendationState field value
// and a boolean to check if the value has been set.
func (o *PerformanceRecommendation) GetRecommendationStateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RecommendationState, true
}

// SetRecommendationState sets field value
func (o *PerformanceRecommendation) SetRecommendationState(v string) {
	o.RecommendationState = v
}

// GetRecommendationTimestamp returns the RecommendationTimestamp field value
func (o *PerformanceRecommendation) GetRecommendationTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.RecommendationTimestamp
}

// GetRecommendationTimestampOk returns a tuple with the RecommendationTimestamp field value
// and a boolean to check if the value has been set.
func (o *PerformanceRecommendation) GetRecommendationTimestampOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RecommendationTimestamp, true
}

// SetRecommendationTimestamp sets field value
func (o *PerformanceRecommendation) SetRecommendationTimestamp(v int64) {
	o.RecommendationTimestamp = v
}

// GetRecommendationType returns the RecommendationType field value
func (o *PerformanceRecommendation) GetRecommendationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecommendationType
}

// GetRecommendationTypeOk returns a tuple with the RecommendationType field value
// and a boolean to check if the value has been set.
func (o *PerformanceRecommendation) GetRecommendationTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RecommendationType, true
}

// SetRecommendationType sets field value
func (o *PerformanceRecommendation) SetRecommendationType(v string) {
	o.RecommendationType = v
}

// GetStateChangeAuditInfoList returns the StateChangeAuditInfoList field value
func (o *PerformanceRecommendation) GetStateChangeAuditInfoList() []StateChangeAuditInfo {
	if o == nil {
		var ret []StateChangeAuditInfo
		return ret
	}

	return o.StateChangeAuditInfoList
}

// GetStateChangeAuditInfoListOk returns a tuple with the StateChangeAuditInfoList field value
// and a boolean to check if the value has been set.
func (o *PerformanceRecommendation) GetStateChangeAuditInfoListOk() (*[]StateChangeAuditInfo, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StateChangeAuditInfoList, true
}

// SetStateChangeAuditInfoList sets field value
func (o *PerformanceRecommendation) SetStateChangeAuditInfoList(v []StateChangeAuditInfo) {
	o.StateChangeAuditInfoList = v
}

// GetUniverseId returns the UniverseId field value
func (o *PerformanceRecommendation) GetUniverseId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UniverseId
}

// GetUniverseIdOk returns a tuple with the UniverseId field value
// and a boolean to check if the value has been set.
func (o *PerformanceRecommendation) GetUniverseIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UniverseId, true
}

// SetUniverseId sets field value
func (o *PerformanceRecommendation) SetUniverseId(v string) {
	o.UniverseId = v
}

func (o PerformanceRecommendation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["customerId"] = o.CustomerId
	}
	if true {
		toSerialize["entityNames"] = o.EntityNames
	}
	if true {
		toSerialize["entityType"] = o.EntityType
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["isStale"] = o.IsStale
	}
	if true {
		toSerialize["new"] = o.New
	}
	if true {
		toSerialize["observation"] = o.Observation
	}
	if true {
		toSerialize["recommendation"] = o.Recommendation
	}
	if true {
		toSerialize["recommendationInfo"] = o.RecommendationInfo
	}
	if true {
		toSerialize["recommendationPriority"] = o.RecommendationPriority
	}
	if true {
		toSerialize["recommendationState"] = o.RecommendationState
	}
	if true {
		toSerialize["recommendationTimestamp"] = o.RecommendationTimestamp
	}
	if true {
		toSerialize["recommendationType"] = o.RecommendationType
	}
	if true {
		toSerialize["stateChangeAuditInfoList"] = o.StateChangeAuditInfoList
	}
	if true {
		toSerialize["universeId"] = o.UniverseId
	}
	return json.Marshal(toSerialize)
}

type NullablePerformanceRecommendation struct {
	value *PerformanceRecommendation
	isSet bool
}

func (v NullablePerformanceRecommendation) Get() *PerformanceRecommendation {
	return v.value
}

func (v *NullablePerformanceRecommendation) Set(val *PerformanceRecommendation) {
	v.value = val
	v.isSet = true
}

func (v NullablePerformanceRecommendation) IsSet() bool {
	return v.isSet
}

func (v *NullablePerformanceRecommendation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePerformanceRecommendation(val *PerformanceRecommendation) *NullablePerformanceRecommendation {
	return &NullablePerformanceRecommendation{value: val, isSet: true}
}

func (v NullablePerformanceRecommendation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePerformanceRecommendation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


