/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// ThrottleParamValue struct for ThrottleParamValue
type ThrottleParamValue struct {
	CurrentValue int32 `json:"currentValue"`
	PresetValues PresetThrottleValues `json:"presetValues"`
}

// NewThrottleParamValue instantiates a new ThrottleParamValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThrottleParamValue(currentValue int32, presetValues PresetThrottleValues) *ThrottleParamValue {
	this := ThrottleParamValue{}
	this.CurrentValue = currentValue
	this.PresetValues = presetValues
	return &this
}

// NewThrottleParamValueWithDefaults instantiates a new ThrottleParamValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThrottleParamValueWithDefaults() *ThrottleParamValue {
	this := ThrottleParamValue{}
	return &this
}

// GetCurrentValue returns the CurrentValue field value
func (o *ThrottleParamValue) GetCurrentValue() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CurrentValue
}

// GetCurrentValueOk returns a tuple with the CurrentValue field value
// and a boolean to check if the value has been set.
func (o *ThrottleParamValue) GetCurrentValueOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CurrentValue, true
}

// SetCurrentValue sets field value
func (o *ThrottleParamValue) SetCurrentValue(v int32) {
	o.CurrentValue = v
}

// GetPresetValues returns the PresetValues field value
func (o *ThrottleParamValue) GetPresetValues() PresetThrottleValues {
	if o == nil {
		var ret PresetThrottleValues
		return ret
	}

	return o.PresetValues
}

// GetPresetValuesOk returns a tuple with the PresetValues field value
// and a boolean to check if the value has been set.
func (o *ThrottleParamValue) GetPresetValuesOk() (*PresetThrottleValues, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PresetValues, true
}

// SetPresetValues sets field value
func (o *ThrottleParamValue) SetPresetValues(v PresetThrottleValues) {
	o.PresetValues = v
}

func (o ThrottleParamValue) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["currentValue"] = o.CurrentValue
	}
	if true {
		toSerialize["presetValues"] = o.PresetValues
	}
	return json.Marshal(toSerialize)
}

type NullableThrottleParamValue struct {
	value *ThrottleParamValue
	isSet bool
}

func (v NullableThrottleParamValue) Get() *ThrottleParamValue {
	return v.value
}

func (v *NullableThrottleParamValue) Set(val *ThrottleParamValue) {
	v.value = val
	v.isSet = true
}

func (v NullableThrottleParamValue) IsSet() bool {
	return v.isSet
}

func (v *NullableThrottleParamValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThrottleParamValue(val *ThrottleParamValue) *NullableThrottleParamValue {
	return &NullableThrottleParamValue{value: val, isSet: true}
}

func (v NullableThrottleParamValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThrottleParamValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


