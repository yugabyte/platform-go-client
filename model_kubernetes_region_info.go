/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// KubernetesRegionInfo struct for KubernetesRegionInfo
type KubernetesRegionInfo struct {
	CertManagerClusterIssuer *string `json:"certManagerClusterIssuer,omitempty"`
	CertManagerIssuer *string `json:"certManagerIssuer,omitempty"`
	KubeConfig *string `json:"kubeConfig,omitempty"`
	KubeConfigContent *string `json:"kubeConfigContent,omitempty"`
	KubeConfigName *string `json:"kubeConfigName,omitempty"`
	KubeDomain *string `json:"kubeDomain,omitempty"`
	KubeNamespace *string `json:"kubeNamespace,omitempty"`
	KubePodAddressTemplate *string `json:"kubePodAddressTemplate,omitempty"`
	KubernetesImagePullSecretName *string `json:"kubernetesImagePullSecretName,omitempty"`
	KubernetesImageRegistry *string `json:"kubernetesImageRegistry,omitempty"`
	KubernetesProvider *string `json:"kubernetesProvider,omitempty"`
	KubernetesPullSecret *string `json:"kubernetesPullSecret,omitempty"`
	KubernetesPullSecretContent *string `json:"kubernetesPullSecretContent,omitempty"`
	KubernetesPullSecretName *string `json:"kubernetesPullSecretName,omitempty"`
	KubernetesServiceAccount *string `json:"kubernetesServiceAccount,omitempty"`
	KubernetesStorageClass *string `json:"kubernetesStorageClass,omitempty"`
	Overrides *string `json:"overrides,omitempty"`
}

// NewKubernetesRegionInfo instantiates a new KubernetesRegionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesRegionInfo() *KubernetesRegionInfo {
	this := KubernetesRegionInfo{}
	return &this
}

// NewKubernetesRegionInfoWithDefaults instantiates a new KubernetesRegionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesRegionInfoWithDefaults() *KubernetesRegionInfo {
	this := KubernetesRegionInfo{}
	return &this
}

// GetCertManagerClusterIssuer returns the CertManagerClusterIssuer field value if set, zero value otherwise.
func (o *KubernetesRegionInfo) GetCertManagerClusterIssuer() string {
	if o == nil || o.CertManagerClusterIssuer == nil {
		var ret string
		return ret
	}
	return *o.CertManagerClusterIssuer
}

// GetCertManagerClusterIssuerOk returns a tuple with the CertManagerClusterIssuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRegionInfo) GetCertManagerClusterIssuerOk() (*string, bool) {
	if o == nil || o.CertManagerClusterIssuer == nil {
		return nil, false
	}
	return o.CertManagerClusterIssuer, true
}

// HasCertManagerClusterIssuer returns a boolean if a field has been set.
func (o *KubernetesRegionInfo) HasCertManagerClusterIssuer() bool {
	if o != nil && o.CertManagerClusterIssuer != nil {
		return true
	}

	return false
}

// SetCertManagerClusterIssuer gets a reference to the given string and assigns it to the CertManagerClusterIssuer field.
func (o *KubernetesRegionInfo) SetCertManagerClusterIssuer(v string) {
	o.CertManagerClusterIssuer = &v
}

// GetCertManagerIssuer returns the CertManagerIssuer field value if set, zero value otherwise.
func (o *KubernetesRegionInfo) GetCertManagerIssuer() string {
	if o == nil || o.CertManagerIssuer == nil {
		var ret string
		return ret
	}
	return *o.CertManagerIssuer
}

// GetCertManagerIssuerOk returns a tuple with the CertManagerIssuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRegionInfo) GetCertManagerIssuerOk() (*string, bool) {
	if o == nil || o.CertManagerIssuer == nil {
		return nil, false
	}
	return o.CertManagerIssuer, true
}

// HasCertManagerIssuer returns a boolean if a field has been set.
func (o *KubernetesRegionInfo) HasCertManagerIssuer() bool {
	if o != nil && o.CertManagerIssuer != nil {
		return true
	}

	return false
}

// SetCertManagerIssuer gets a reference to the given string and assigns it to the CertManagerIssuer field.
func (o *KubernetesRegionInfo) SetCertManagerIssuer(v string) {
	o.CertManagerIssuer = &v
}

// GetKubeConfig returns the KubeConfig field value if set, zero value otherwise.
func (o *KubernetesRegionInfo) GetKubeConfig() string {
	if o == nil || o.KubeConfig == nil {
		var ret string
		return ret
	}
	return *o.KubeConfig
}

// GetKubeConfigOk returns a tuple with the KubeConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRegionInfo) GetKubeConfigOk() (*string, bool) {
	if o == nil || o.KubeConfig == nil {
		return nil, false
	}
	return o.KubeConfig, true
}

// HasKubeConfig returns a boolean if a field has been set.
func (o *KubernetesRegionInfo) HasKubeConfig() bool {
	if o != nil && o.KubeConfig != nil {
		return true
	}

	return false
}

// SetKubeConfig gets a reference to the given string and assigns it to the KubeConfig field.
func (o *KubernetesRegionInfo) SetKubeConfig(v string) {
	o.KubeConfig = &v
}

// GetKubeConfigContent returns the KubeConfigContent field value if set, zero value otherwise.
func (o *KubernetesRegionInfo) GetKubeConfigContent() string {
	if o == nil || o.KubeConfigContent == nil {
		var ret string
		return ret
	}
	return *o.KubeConfigContent
}

// GetKubeConfigContentOk returns a tuple with the KubeConfigContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRegionInfo) GetKubeConfigContentOk() (*string, bool) {
	if o == nil || o.KubeConfigContent == nil {
		return nil, false
	}
	return o.KubeConfigContent, true
}

// HasKubeConfigContent returns a boolean if a field has been set.
func (o *KubernetesRegionInfo) HasKubeConfigContent() bool {
	if o != nil && o.KubeConfigContent != nil {
		return true
	}

	return false
}

// SetKubeConfigContent gets a reference to the given string and assigns it to the KubeConfigContent field.
func (o *KubernetesRegionInfo) SetKubeConfigContent(v string) {
	o.KubeConfigContent = &v
}

// GetKubeConfigName returns the KubeConfigName field value if set, zero value otherwise.
func (o *KubernetesRegionInfo) GetKubeConfigName() string {
	if o == nil || o.KubeConfigName == nil {
		var ret string
		return ret
	}
	return *o.KubeConfigName
}

// GetKubeConfigNameOk returns a tuple with the KubeConfigName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRegionInfo) GetKubeConfigNameOk() (*string, bool) {
	if o == nil || o.KubeConfigName == nil {
		return nil, false
	}
	return o.KubeConfigName, true
}

// HasKubeConfigName returns a boolean if a field has been set.
func (o *KubernetesRegionInfo) HasKubeConfigName() bool {
	if o != nil && o.KubeConfigName != nil {
		return true
	}

	return false
}

// SetKubeConfigName gets a reference to the given string and assigns it to the KubeConfigName field.
func (o *KubernetesRegionInfo) SetKubeConfigName(v string) {
	o.KubeConfigName = &v
}

// GetKubeDomain returns the KubeDomain field value if set, zero value otherwise.
func (o *KubernetesRegionInfo) GetKubeDomain() string {
	if o == nil || o.KubeDomain == nil {
		var ret string
		return ret
	}
	return *o.KubeDomain
}

// GetKubeDomainOk returns a tuple with the KubeDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRegionInfo) GetKubeDomainOk() (*string, bool) {
	if o == nil || o.KubeDomain == nil {
		return nil, false
	}
	return o.KubeDomain, true
}

// HasKubeDomain returns a boolean if a field has been set.
func (o *KubernetesRegionInfo) HasKubeDomain() bool {
	if o != nil && o.KubeDomain != nil {
		return true
	}

	return false
}

// SetKubeDomain gets a reference to the given string and assigns it to the KubeDomain field.
func (o *KubernetesRegionInfo) SetKubeDomain(v string) {
	o.KubeDomain = &v
}

// GetKubeNamespace returns the KubeNamespace field value if set, zero value otherwise.
func (o *KubernetesRegionInfo) GetKubeNamespace() string {
	if o == nil || o.KubeNamespace == nil {
		var ret string
		return ret
	}
	return *o.KubeNamespace
}

// GetKubeNamespaceOk returns a tuple with the KubeNamespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRegionInfo) GetKubeNamespaceOk() (*string, bool) {
	if o == nil || o.KubeNamespace == nil {
		return nil, false
	}
	return o.KubeNamespace, true
}

// HasKubeNamespace returns a boolean if a field has been set.
func (o *KubernetesRegionInfo) HasKubeNamespace() bool {
	if o != nil && o.KubeNamespace != nil {
		return true
	}

	return false
}

// SetKubeNamespace gets a reference to the given string and assigns it to the KubeNamespace field.
func (o *KubernetesRegionInfo) SetKubeNamespace(v string) {
	o.KubeNamespace = &v
}

// GetKubePodAddressTemplate returns the KubePodAddressTemplate field value if set, zero value otherwise.
func (o *KubernetesRegionInfo) GetKubePodAddressTemplate() string {
	if o == nil || o.KubePodAddressTemplate == nil {
		var ret string
		return ret
	}
	return *o.KubePodAddressTemplate
}

// GetKubePodAddressTemplateOk returns a tuple with the KubePodAddressTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRegionInfo) GetKubePodAddressTemplateOk() (*string, bool) {
	if o == nil || o.KubePodAddressTemplate == nil {
		return nil, false
	}
	return o.KubePodAddressTemplate, true
}

// HasKubePodAddressTemplate returns a boolean if a field has been set.
func (o *KubernetesRegionInfo) HasKubePodAddressTemplate() bool {
	if o != nil && o.KubePodAddressTemplate != nil {
		return true
	}

	return false
}

// SetKubePodAddressTemplate gets a reference to the given string and assigns it to the KubePodAddressTemplate field.
func (o *KubernetesRegionInfo) SetKubePodAddressTemplate(v string) {
	o.KubePodAddressTemplate = &v
}

// GetKubernetesImagePullSecretName returns the KubernetesImagePullSecretName field value if set, zero value otherwise.
func (o *KubernetesRegionInfo) GetKubernetesImagePullSecretName() string {
	if o == nil || o.KubernetesImagePullSecretName == nil {
		var ret string
		return ret
	}
	return *o.KubernetesImagePullSecretName
}

// GetKubernetesImagePullSecretNameOk returns a tuple with the KubernetesImagePullSecretName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRegionInfo) GetKubernetesImagePullSecretNameOk() (*string, bool) {
	if o == nil || o.KubernetesImagePullSecretName == nil {
		return nil, false
	}
	return o.KubernetesImagePullSecretName, true
}

// HasKubernetesImagePullSecretName returns a boolean if a field has been set.
func (o *KubernetesRegionInfo) HasKubernetesImagePullSecretName() bool {
	if o != nil && o.KubernetesImagePullSecretName != nil {
		return true
	}

	return false
}

// SetKubernetesImagePullSecretName gets a reference to the given string and assigns it to the KubernetesImagePullSecretName field.
func (o *KubernetesRegionInfo) SetKubernetesImagePullSecretName(v string) {
	o.KubernetesImagePullSecretName = &v
}

// GetKubernetesImageRegistry returns the KubernetesImageRegistry field value if set, zero value otherwise.
func (o *KubernetesRegionInfo) GetKubernetesImageRegistry() string {
	if o == nil || o.KubernetesImageRegistry == nil {
		var ret string
		return ret
	}
	return *o.KubernetesImageRegistry
}

// GetKubernetesImageRegistryOk returns a tuple with the KubernetesImageRegistry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRegionInfo) GetKubernetesImageRegistryOk() (*string, bool) {
	if o == nil || o.KubernetesImageRegistry == nil {
		return nil, false
	}
	return o.KubernetesImageRegistry, true
}

// HasKubernetesImageRegistry returns a boolean if a field has been set.
func (o *KubernetesRegionInfo) HasKubernetesImageRegistry() bool {
	if o != nil && o.KubernetesImageRegistry != nil {
		return true
	}

	return false
}

// SetKubernetesImageRegistry gets a reference to the given string and assigns it to the KubernetesImageRegistry field.
func (o *KubernetesRegionInfo) SetKubernetesImageRegistry(v string) {
	o.KubernetesImageRegistry = &v
}

// GetKubernetesProvider returns the KubernetesProvider field value if set, zero value otherwise.
func (o *KubernetesRegionInfo) GetKubernetesProvider() string {
	if o == nil || o.KubernetesProvider == nil {
		var ret string
		return ret
	}
	return *o.KubernetesProvider
}

// GetKubernetesProviderOk returns a tuple with the KubernetesProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRegionInfo) GetKubernetesProviderOk() (*string, bool) {
	if o == nil || o.KubernetesProvider == nil {
		return nil, false
	}
	return o.KubernetesProvider, true
}

// HasKubernetesProvider returns a boolean if a field has been set.
func (o *KubernetesRegionInfo) HasKubernetesProvider() bool {
	if o != nil && o.KubernetesProvider != nil {
		return true
	}

	return false
}

// SetKubernetesProvider gets a reference to the given string and assigns it to the KubernetesProvider field.
func (o *KubernetesRegionInfo) SetKubernetesProvider(v string) {
	o.KubernetesProvider = &v
}

// GetKubernetesPullSecret returns the KubernetesPullSecret field value if set, zero value otherwise.
func (o *KubernetesRegionInfo) GetKubernetesPullSecret() string {
	if o == nil || o.KubernetesPullSecret == nil {
		var ret string
		return ret
	}
	return *o.KubernetesPullSecret
}

// GetKubernetesPullSecretOk returns a tuple with the KubernetesPullSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRegionInfo) GetKubernetesPullSecretOk() (*string, bool) {
	if o == nil || o.KubernetesPullSecret == nil {
		return nil, false
	}
	return o.KubernetesPullSecret, true
}

// HasKubernetesPullSecret returns a boolean if a field has been set.
func (o *KubernetesRegionInfo) HasKubernetesPullSecret() bool {
	if o != nil && o.KubernetesPullSecret != nil {
		return true
	}

	return false
}

// SetKubernetesPullSecret gets a reference to the given string and assigns it to the KubernetesPullSecret field.
func (o *KubernetesRegionInfo) SetKubernetesPullSecret(v string) {
	o.KubernetesPullSecret = &v
}

// GetKubernetesPullSecretContent returns the KubernetesPullSecretContent field value if set, zero value otherwise.
func (o *KubernetesRegionInfo) GetKubernetesPullSecretContent() string {
	if o == nil || o.KubernetesPullSecretContent == nil {
		var ret string
		return ret
	}
	return *o.KubernetesPullSecretContent
}

// GetKubernetesPullSecretContentOk returns a tuple with the KubernetesPullSecretContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRegionInfo) GetKubernetesPullSecretContentOk() (*string, bool) {
	if o == nil || o.KubernetesPullSecretContent == nil {
		return nil, false
	}
	return o.KubernetesPullSecretContent, true
}

// HasKubernetesPullSecretContent returns a boolean if a field has been set.
func (o *KubernetesRegionInfo) HasKubernetesPullSecretContent() bool {
	if o != nil && o.KubernetesPullSecretContent != nil {
		return true
	}

	return false
}

// SetKubernetesPullSecretContent gets a reference to the given string and assigns it to the KubernetesPullSecretContent field.
func (o *KubernetesRegionInfo) SetKubernetesPullSecretContent(v string) {
	o.KubernetesPullSecretContent = &v
}

// GetKubernetesPullSecretName returns the KubernetesPullSecretName field value if set, zero value otherwise.
func (o *KubernetesRegionInfo) GetKubernetesPullSecretName() string {
	if o == nil || o.KubernetesPullSecretName == nil {
		var ret string
		return ret
	}
	return *o.KubernetesPullSecretName
}

// GetKubernetesPullSecretNameOk returns a tuple with the KubernetesPullSecretName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRegionInfo) GetKubernetesPullSecretNameOk() (*string, bool) {
	if o == nil || o.KubernetesPullSecretName == nil {
		return nil, false
	}
	return o.KubernetesPullSecretName, true
}

// HasKubernetesPullSecretName returns a boolean if a field has been set.
func (o *KubernetesRegionInfo) HasKubernetesPullSecretName() bool {
	if o != nil && o.KubernetesPullSecretName != nil {
		return true
	}

	return false
}

// SetKubernetesPullSecretName gets a reference to the given string and assigns it to the KubernetesPullSecretName field.
func (o *KubernetesRegionInfo) SetKubernetesPullSecretName(v string) {
	o.KubernetesPullSecretName = &v
}

// GetKubernetesServiceAccount returns the KubernetesServiceAccount field value if set, zero value otherwise.
func (o *KubernetesRegionInfo) GetKubernetesServiceAccount() string {
	if o == nil || o.KubernetesServiceAccount == nil {
		var ret string
		return ret
	}
	return *o.KubernetesServiceAccount
}

// GetKubernetesServiceAccountOk returns a tuple with the KubernetesServiceAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRegionInfo) GetKubernetesServiceAccountOk() (*string, bool) {
	if o == nil || o.KubernetesServiceAccount == nil {
		return nil, false
	}
	return o.KubernetesServiceAccount, true
}

// HasKubernetesServiceAccount returns a boolean if a field has been set.
func (o *KubernetesRegionInfo) HasKubernetesServiceAccount() bool {
	if o != nil && o.KubernetesServiceAccount != nil {
		return true
	}

	return false
}

// SetKubernetesServiceAccount gets a reference to the given string and assigns it to the KubernetesServiceAccount field.
func (o *KubernetesRegionInfo) SetKubernetesServiceAccount(v string) {
	o.KubernetesServiceAccount = &v
}

// GetKubernetesStorageClass returns the KubernetesStorageClass field value if set, zero value otherwise.
func (o *KubernetesRegionInfo) GetKubernetesStorageClass() string {
	if o == nil || o.KubernetesStorageClass == nil {
		var ret string
		return ret
	}
	return *o.KubernetesStorageClass
}

// GetKubernetesStorageClassOk returns a tuple with the KubernetesStorageClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRegionInfo) GetKubernetesStorageClassOk() (*string, bool) {
	if o == nil || o.KubernetesStorageClass == nil {
		return nil, false
	}
	return o.KubernetesStorageClass, true
}

// HasKubernetesStorageClass returns a boolean if a field has been set.
func (o *KubernetesRegionInfo) HasKubernetesStorageClass() bool {
	if o != nil && o.KubernetesStorageClass != nil {
		return true
	}

	return false
}

// SetKubernetesStorageClass gets a reference to the given string and assigns it to the KubernetesStorageClass field.
func (o *KubernetesRegionInfo) SetKubernetesStorageClass(v string) {
	o.KubernetesStorageClass = &v
}

// GetOverrides returns the Overrides field value if set, zero value otherwise.
func (o *KubernetesRegionInfo) GetOverrides() string {
	if o == nil || o.Overrides == nil {
		var ret string
		return ret
	}
	return *o.Overrides
}

// GetOverridesOk returns a tuple with the Overrides field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesRegionInfo) GetOverridesOk() (*string, bool) {
	if o == nil || o.Overrides == nil {
		return nil, false
	}
	return o.Overrides, true
}

// HasOverrides returns a boolean if a field has been set.
func (o *KubernetesRegionInfo) HasOverrides() bool {
	if o != nil && o.Overrides != nil {
		return true
	}

	return false
}

// SetOverrides gets a reference to the given string and assigns it to the Overrides field.
func (o *KubernetesRegionInfo) SetOverrides(v string) {
	o.Overrides = &v
}

func (o KubernetesRegionInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CertManagerClusterIssuer != nil {
		toSerialize["certManagerClusterIssuer"] = o.CertManagerClusterIssuer
	}
	if o.CertManagerIssuer != nil {
		toSerialize["certManagerIssuer"] = o.CertManagerIssuer
	}
	if o.KubeConfig != nil {
		toSerialize["kubeConfig"] = o.KubeConfig
	}
	if o.KubeConfigContent != nil {
		toSerialize["kubeConfigContent"] = o.KubeConfigContent
	}
	if o.KubeConfigName != nil {
		toSerialize["kubeConfigName"] = o.KubeConfigName
	}
	if o.KubeDomain != nil {
		toSerialize["kubeDomain"] = o.KubeDomain
	}
	if o.KubeNamespace != nil {
		toSerialize["kubeNamespace"] = o.KubeNamespace
	}
	if o.KubePodAddressTemplate != nil {
		toSerialize["kubePodAddressTemplate"] = o.KubePodAddressTemplate
	}
	if o.KubernetesImagePullSecretName != nil {
		toSerialize["kubernetesImagePullSecretName"] = o.KubernetesImagePullSecretName
	}
	if o.KubernetesImageRegistry != nil {
		toSerialize["kubernetesImageRegistry"] = o.KubernetesImageRegistry
	}
	if o.KubernetesProvider != nil {
		toSerialize["kubernetesProvider"] = o.KubernetesProvider
	}
	if o.KubernetesPullSecret != nil {
		toSerialize["kubernetesPullSecret"] = o.KubernetesPullSecret
	}
	if o.KubernetesPullSecretContent != nil {
		toSerialize["kubernetesPullSecretContent"] = o.KubernetesPullSecretContent
	}
	if o.KubernetesPullSecretName != nil {
		toSerialize["kubernetesPullSecretName"] = o.KubernetesPullSecretName
	}
	if o.KubernetesServiceAccount != nil {
		toSerialize["kubernetesServiceAccount"] = o.KubernetesServiceAccount
	}
	if o.KubernetesStorageClass != nil {
		toSerialize["kubernetesStorageClass"] = o.KubernetesStorageClass
	}
	if o.Overrides != nil {
		toSerialize["overrides"] = o.Overrides
	}
	return json.Marshal(toSerialize)
}

type NullableKubernetesRegionInfo struct {
	value *KubernetesRegionInfo
	isSet bool
}

func (v NullableKubernetesRegionInfo) Get() *KubernetesRegionInfo {
	return v.value
}

func (v *NullableKubernetesRegionInfo) Set(val *KubernetesRegionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesRegionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesRegionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesRegionInfo(val *KubernetesRegionInfo) *NullableKubernetesRegionInfo {
	return &NullableKubernetesRegionInfo{value: val, isSet: true}
}

func (v NullableKubernetesRegionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesRegionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


