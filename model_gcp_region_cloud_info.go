/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// GCPRegionCloudInfo struct for GCPRegionCloudInfo
type GCPRegionCloudInfo struct {
	// The instance template to be used for nodes created in this region.
	InstanceTemplate *string `json:"instanceTemplate,omitempty"`
	// <b style=\"color:#ff0000\">Deprecated since YBA version 2.20.0.</b> Use provider.imageBundle instead
	YbImage *string `json:"ybImage,omitempty"`
}

// NewGCPRegionCloudInfo instantiates a new GCPRegionCloudInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGCPRegionCloudInfo() *GCPRegionCloudInfo {
	this := GCPRegionCloudInfo{}
	return &this
}

// NewGCPRegionCloudInfoWithDefaults instantiates a new GCPRegionCloudInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGCPRegionCloudInfoWithDefaults() *GCPRegionCloudInfo {
	this := GCPRegionCloudInfo{}
	return &this
}

// GetInstanceTemplate returns the InstanceTemplate field value if set, zero value otherwise.
func (o *GCPRegionCloudInfo) GetInstanceTemplate() string {
	if o == nil || o.InstanceTemplate == nil {
		var ret string
		return ret
	}
	return *o.InstanceTemplate
}

// GetInstanceTemplateOk returns a tuple with the InstanceTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GCPRegionCloudInfo) GetInstanceTemplateOk() (*string, bool) {
	if o == nil || o.InstanceTemplate == nil {
		return nil, false
	}
	return o.InstanceTemplate, true
}

// HasInstanceTemplate returns a boolean if a field has been set.
func (o *GCPRegionCloudInfo) HasInstanceTemplate() bool {
	if o != nil && o.InstanceTemplate != nil {
		return true
	}

	return false
}

// SetInstanceTemplate gets a reference to the given string and assigns it to the InstanceTemplate field.
func (o *GCPRegionCloudInfo) SetInstanceTemplate(v string) {
	o.InstanceTemplate = &v
}

// GetYbImage returns the YbImage field value if set, zero value otherwise.
func (o *GCPRegionCloudInfo) GetYbImage() string {
	if o == nil || o.YbImage == nil {
		var ret string
		return ret
	}
	return *o.YbImage
}

// GetYbImageOk returns a tuple with the YbImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GCPRegionCloudInfo) GetYbImageOk() (*string, bool) {
	if o == nil || o.YbImage == nil {
		return nil, false
	}
	return o.YbImage, true
}

// HasYbImage returns a boolean if a field has been set.
func (o *GCPRegionCloudInfo) HasYbImage() bool {
	if o != nil && o.YbImage != nil {
		return true
	}

	return false
}

// SetYbImage gets a reference to the given string and assigns it to the YbImage field.
func (o *GCPRegionCloudInfo) SetYbImage(v string) {
	o.YbImage = &v
}

func (o GCPRegionCloudInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InstanceTemplate != nil {
		toSerialize["instanceTemplate"] = o.InstanceTemplate
	}
	if o.YbImage != nil {
		toSerialize["ybImage"] = o.YbImage
	}
	return json.Marshal(toSerialize)
}

type NullableGCPRegionCloudInfo struct {
	value *GCPRegionCloudInfo
	isSet bool
}

func (v NullableGCPRegionCloudInfo) Get() *GCPRegionCloudInfo {
	return v.value
}

func (v *NullableGCPRegionCloudInfo) Set(val *GCPRegionCloudInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableGCPRegionCloudInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableGCPRegionCloudInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGCPRegionCloudInfo(val *GCPRegionCloudInfo) *NullableGCPRegionCloudInfo {
	return &NullableGCPRegionCloudInfo{value: val, isSet: true}
}

func (v NullableGCPRegionCloudInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGCPRegionCloudInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


