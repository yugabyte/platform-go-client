/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// CustomCACertParams struct for CustomCACertParams
type CustomCACertParams struct {
	Contents string `json:"contents"`
	Name string `json:"name"`
}

// NewCustomCACertParams instantiates a new CustomCACertParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomCACertParams(contents string, name string, ) *CustomCACertParams {
	this := CustomCACertParams{}
	this.Contents = contents
	this.Name = name
	return &this
}

// NewCustomCACertParamsWithDefaults instantiates a new CustomCACertParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomCACertParamsWithDefaults() *CustomCACertParams {
	this := CustomCACertParams{}
	return &this
}

// GetContents returns the Contents field value
func (o *CustomCACertParams) GetContents() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Contents
}

// GetContentsOk returns a tuple with the Contents field value
// and a boolean to check if the value has been set.
func (o *CustomCACertParams) GetContentsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Contents, true
}

// SetContents sets field value
func (o *CustomCACertParams) SetContents(v string) {
	o.Contents = v
}

// GetName returns the Name field value
func (o *CustomCACertParams) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CustomCACertParams) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CustomCACertParams) SetName(v string) {
	o.Name = v
}

func (o CustomCACertParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["contents"] = o.Contents
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableCustomCACertParams struct {
	value *CustomCACertParams
	isSet bool
}

func (v NullableCustomCACertParams) Get() *CustomCACertParams {
	return v.value
}

func (v *NullableCustomCACertParams) Set(val *CustomCACertParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomCACertParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomCACertParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomCACertParams(val *CustomCACertParams) *NullableCustomCACertParams {
	return &NullableCustomCACertParams{value: val, isSet: true}
}

func (v NullableCustomCACertParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomCACertParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


