/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// K8SNodeResourceSpec struct for K8SNodeResourceSpec
type K8SNodeResourceSpec struct {
	CpuCoreCount float64 `json:"cpuCoreCount"`
	MemoryGib float64 `json:"memoryGib"`
}

// NewK8SNodeResourceSpec instantiates a new K8SNodeResourceSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewK8SNodeResourceSpec(cpuCoreCount float64, memoryGib float64, ) *K8SNodeResourceSpec {
	this := K8SNodeResourceSpec{}
	this.CpuCoreCount = cpuCoreCount
	this.MemoryGib = memoryGib
	return &this
}

// NewK8SNodeResourceSpecWithDefaults instantiates a new K8SNodeResourceSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewK8SNodeResourceSpecWithDefaults() *K8SNodeResourceSpec {
	this := K8SNodeResourceSpec{}
	return &this
}

// GetCpuCoreCount returns the CpuCoreCount field value
func (o *K8SNodeResourceSpec) GetCpuCoreCount() float64 {
	if o == nil  {
		var ret float64
		return ret
	}

	return o.CpuCoreCount
}

// GetCpuCoreCountOk returns a tuple with the CpuCoreCount field value
// and a boolean to check if the value has been set.
func (o *K8SNodeResourceSpec) GetCpuCoreCountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CpuCoreCount, true
}

// SetCpuCoreCount sets field value
func (o *K8SNodeResourceSpec) SetCpuCoreCount(v float64) {
	o.CpuCoreCount = v
}

// GetMemoryGib returns the MemoryGib field value
func (o *K8SNodeResourceSpec) GetMemoryGib() float64 {
	if o == nil  {
		var ret float64
		return ret
	}

	return o.MemoryGib
}

// GetMemoryGibOk returns a tuple with the MemoryGib field value
// and a boolean to check if the value has been set.
func (o *K8SNodeResourceSpec) GetMemoryGibOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MemoryGib, true
}

// SetMemoryGib sets field value
func (o *K8SNodeResourceSpec) SetMemoryGib(v float64) {
	o.MemoryGib = v
}

func (o K8SNodeResourceSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cpuCoreCount"] = o.CpuCoreCount
	}
	if true {
		toSerialize["memoryGib"] = o.MemoryGib
	}
	return json.Marshal(toSerialize)
}

type NullableK8SNodeResourceSpec struct {
	value *K8SNodeResourceSpec
	isSet bool
}

func (v NullableK8SNodeResourceSpec) Get() *K8SNodeResourceSpec {
	return v.value
}

func (v *NullableK8SNodeResourceSpec) Set(val *K8SNodeResourceSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableK8SNodeResourceSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableK8SNodeResourceSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableK8SNodeResourceSpec(val *K8SNodeResourceSpec) *NullableK8SNodeResourceSpec {
	return &NullableK8SNodeResourceSpec{value: val, isSet: true}
}

func (v NullableK8SNodeResourceSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableK8SNodeResourceSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


