/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// AvailabilityZoneData Details of an availability zone, used by the API and UI to validate data against input constraints
type AvailabilityZoneData struct {
	// AZ code
	Code string `json:"code"`
	// AZ name
	Name string `json:"name"`
	// AZ secondary subnet
	SecondarySubnet *string `json:"secondarySubnet,omitempty"`
	// AZ subnet
	Subnet *string `json:"subnet,omitempty"`
}

// NewAvailabilityZoneData instantiates a new AvailabilityZoneData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAvailabilityZoneData(code string, name string) *AvailabilityZoneData {
	this := AvailabilityZoneData{}
	this.Code = code
	this.Name = name
	return &this
}

// NewAvailabilityZoneDataWithDefaults instantiates a new AvailabilityZoneData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAvailabilityZoneDataWithDefaults() *AvailabilityZoneData {
	this := AvailabilityZoneData{}
	return &this
}

// GetCode returns the Code field value
func (o *AvailabilityZoneData) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *AvailabilityZoneData) GetCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *AvailabilityZoneData) SetCode(v string) {
	o.Code = v
}

// GetName returns the Name field value
func (o *AvailabilityZoneData) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AvailabilityZoneData) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AvailabilityZoneData) SetName(v string) {
	o.Name = v
}

// GetSecondarySubnet returns the SecondarySubnet field value if set, zero value otherwise.
func (o *AvailabilityZoneData) GetSecondarySubnet() string {
	if o == nil || o.SecondarySubnet == nil {
		var ret string
		return ret
	}
	return *o.SecondarySubnet
}

// GetSecondarySubnetOk returns a tuple with the SecondarySubnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailabilityZoneData) GetSecondarySubnetOk() (*string, bool) {
	if o == nil || o.SecondarySubnet == nil {
		return nil, false
	}
	return o.SecondarySubnet, true
}

// HasSecondarySubnet returns a boolean if a field has been set.
func (o *AvailabilityZoneData) HasSecondarySubnet() bool {
	if o != nil && o.SecondarySubnet != nil {
		return true
	}

	return false
}

// SetSecondarySubnet gets a reference to the given string and assigns it to the SecondarySubnet field.
func (o *AvailabilityZoneData) SetSecondarySubnet(v string) {
	o.SecondarySubnet = &v
}

// GetSubnet returns the Subnet field value if set, zero value otherwise.
func (o *AvailabilityZoneData) GetSubnet() string {
	if o == nil || o.Subnet == nil {
		var ret string
		return ret
	}
	return *o.Subnet
}

// GetSubnetOk returns a tuple with the Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailabilityZoneData) GetSubnetOk() (*string, bool) {
	if o == nil || o.Subnet == nil {
		return nil, false
	}
	return o.Subnet, true
}

// HasSubnet returns a boolean if a field has been set.
func (o *AvailabilityZoneData) HasSubnet() bool {
	if o != nil && o.Subnet != nil {
		return true
	}

	return false
}

// SetSubnet gets a reference to the given string and assigns it to the Subnet field.
func (o *AvailabilityZoneData) SetSubnet(v string) {
	o.Subnet = &v
}

func (o AvailabilityZoneData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["code"] = o.Code
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.SecondarySubnet != nil {
		toSerialize["secondarySubnet"] = o.SecondarySubnet
	}
	if o.Subnet != nil {
		toSerialize["subnet"] = o.Subnet
	}
	return json.Marshal(toSerialize)
}

type NullableAvailabilityZoneData struct {
	value *AvailabilityZoneData
	isSet bool
}

func (v NullableAvailabilityZoneData) Get() *AvailabilityZoneData {
	return v.value
}

func (v *NullableAvailabilityZoneData) Set(val *AvailabilityZoneData) {
	v.value = val
	v.isSet = true
}

func (v NullableAvailabilityZoneData) IsSet() bool {
	return v.isSet
}

func (v *NullableAvailabilityZoneData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAvailabilityZoneData(val *AvailabilityZoneData) *NullableAvailabilityZoneData {
	return &NullableAvailabilityZoneData{value: val, isSet: true}
}

func (v NullableAvailabilityZoneData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAvailabilityZoneData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


