/*
 * Yugabyte Platform APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package yb_platform_client

import (
	"encoding/json"
)

// BundleDetails struct for BundleDetails
type BundleDetails struct {
	Components []string `json:"components"`
}

// NewBundleDetails instantiates a new BundleDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBundleDetails(components []string, ) *BundleDetails {
	this := BundleDetails{}
	this.Components = components
	return &this
}

// NewBundleDetailsWithDefaults instantiates a new BundleDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBundleDetailsWithDefaults() *BundleDetails {
	this := BundleDetails{}
	return &this
}

// GetComponents returns the Components field value
func (o *BundleDetails) GetComponents() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.Components
}

// GetComponentsOk returns a tuple with the Components field value
// and a boolean to check if the value has been set.
func (o *BundleDetails) GetComponentsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Components, true
}

// SetComponents sets field value
func (o *BundleDetails) SetComponents(v []string) {
	o.Components = v
}

func (o BundleDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["components"] = o.Components
	}
	return json.Marshal(toSerialize)
}

type NullableBundleDetails struct {
	value *BundleDetails
	isSet bool
}

func (v NullableBundleDetails) Get() *BundleDetails {
	return v.value
}

func (v *NullableBundleDetails) Set(val *BundleDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableBundleDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableBundleDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBundleDetails(val *BundleDetails) *NullableBundleDetails {
	return &NullableBundleDetails{value: val, isSet: true}
}

func (v NullableBundleDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBundleDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


