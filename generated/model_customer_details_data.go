/*
 * Yugabyte Platform APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package yb_platform_client

import (
	"encoding/json"
	"time"
)

// CustomerDetailsData Customer details, including their universe UUIDs. Only the customer code and name are modifiable.
type CustomerDetailsData struct {
	AlertingData *AlertingData `json:"alertingData,omitempty"`
	// Call-home level
	CallhomeLevel *string `json:"callhomeLevel,omitempty"`
	// Customer code
	Code string `json:"code"`
	// Creation timestamp
	CreationDate *time.Time `json:"creationDate,omitempty"`
	// Customer ID
	CustomerId *int32 `json:"customerId,omitempty"`
	// Customer name
	Name string `json:"name"`
	SmtpData *SmtpData `json:"smtpData,omitempty"`
	// Associated universe IDs
	UniverseUUIDs *[]string `json:"universeUUIDs,omitempty"`
	// User UUID
	Uuid *string `json:"uuid,omitempty"`
}

// NewCustomerDetailsData instantiates a new CustomerDetailsData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerDetailsData(code string, name string, ) *CustomerDetailsData {
	this := CustomerDetailsData{}
	this.Code = code
	this.Name = name
	return &this
}

// NewCustomerDetailsDataWithDefaults instantiates a new CustomerDetailsData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerDetailsDataWithDefaults() *CustomerDetailsData {
	this := CustomerDetailsData{}
	return &this
}

// GetAlertingData returns the AlertingData field value if set, zero value otherwise.
func (o *CustomerDetailsData) GetAlertingData() AlertingData {
	if o == nil || o.AlertingData == nil {
		var ret AlertingData
		return ret
	}
	return *o.AlertingData
}

// GetAlertingDataOk returns a tuple with the AlertingData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDetailsData) GetAlertingDataOk() (*AlertingData, bool) {
	if o == nil || o.AlertingData == nil {
		return nil, false
	}
	return o.AlertingData, true
}

// HasAlertingData returns a boolean if a field has been set.
func (o *CustomerDetailsData) HasAlertingData() bool {
	if o != nil && o.AlertingData != nil {
		return true
	}

	return false
}

// SetAlertingData gets a reference to the given AlertingData and assigns it to the AlertingData field.
func (o *CustomerDetailsData) SetAlertingData(v AlertingData) {
	o.AlertingData = &v
}

// GetCallhomeLevel returns the CallhomeLevel field value if set, zero value otherwise.
func (o *CustomerDetailsData) GetCallhomeLevel() string {
	if o == nil || o.CallhomeLevel == nil {
		var ret string
		return ret
	}
	return *o.CallhomeLevel
}

// GetCallhomeLevelOk returns a tuple with the CallhomeLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDetailsData) GetCallhomeLevelOk() (*string, bool) {
	if o == nil || o.CallhomeLevel == nil {
		return nil, false
	}
	return o.CallhomeLevel, true
}

// HasCallhomeLevel returns a boolean if a field has been set.
func (o *CustomerDetailsData) HasCallhomeLevel() bool {
	if o != nil && o.CallhomeLevel != nil {
		return true
	}

	return false
}

// SetCallhomeLevel gets a reference to the given string and assigns it to the CallhomeLevel field.
func (o *CustomerDetailsData) SetCallhomeLevel(v string) {
	o.CallhomeLevel = &v
}

// GetCode returns the Code field value
func (o *CustomerDetailsData) GetCode() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *CustomerDetailsData) GetCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *CustomerDetailsData) SetCode(v string) {
	o.Code = v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *CustomerDetailsData) GetCreationDate() time.Time {
	if o == nil || o.CreationDate == nil {
		var ret time.Time
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDetailsData) GetCreationDateOk() (*time.Time, bool) {
	if o == nil || o.CreationDate == nil {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *CustomerDetailsData) HasCreationDate() bool {
	if o != nil && o.CreationDate != nil {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given time.Time and assigns it to the CreationDate field.
func (o *CustomerDetailsData) SetCreationDate(v time.Time) {
	o.CreationDate = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *CustomerDetailsData) GetCustomerId() int32 {
	if o == nil || o.CustomerId == nil {
		var ret int32
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDetailsData) GetCustomerIdOk() (*int32, bool) {
	if o == nil || o.CustomerId == nil {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *CustomerDetailsData) HasCustomerId() bool {
	if o != nil && o.CustomerId != nil {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given int32 and assigns it to the CustomerId field.
func (o *CustomerDetailsData) SetCustomerId(v int32) {
	o.CustomerId = &v
}

// GetName returns the Name field value
func (o *CustomerDetailsData) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CustomerDetailsData) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CustomerDetailsData) SetName(v string) {
	o.Name = v
}

// GetSmtpData returns the SmtpData field value if set, zero value otherwise.
func (o *CustomerDetailsData) GetSmtpData() SmtpData {
	if o == nil || o.SmtpData == nil {
		var ret SmtpData
		return ret
	}
	return *o.SmtpData
}

// GetSmtpDataOk returns a tuple with the SmtpData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDetailsData) GetSmtpDataOk() (*SmtpData, bool) {
	if o == nil || o.SmtpData == nil {
		return nil, false
	}
	return o.SmtpData, true
}

// HasSmtpData returns a boolean if a field has been set.
func (o *CustomerDetailsData) HasSmtpData() bool {
	if o != nil && o.SmtpData != nil {
		return true
	}

	return false
}

// SetSmtpData gets a reference to the given SmtpData and assigns it to the SmtpData field.
func (o *CustomerDetailsData) SetSmtpData(v SmtpData) {
	o.SmtpData = &v
}

// GetUniverseUUIDs returns the UniverseUUIDs field value if set, zero value otherwise.
func (o *CustomerDetailsData) GetUniverseUUIDs() []string {
	if o == nil || o.UniverseUUIDs == nil {
		var ret []string
		return ret
	}
	return *o.UniverseUUIDs
}

// GetUniverseUUIDsOk returns a tuple with the UniverseUUIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDetailsData) GetUniverseUUIDsOk() (*[]string, bool) {
	if o == nil || o.UniverseUUIDs == nil {
		return nil, false
	}
	return o.UniverseUUIDs, true
}

// HasUniverseUUIDs returns a boolean if a field has been set.
func (o *CustomerDetailsData) HasUniverseUUIDs() bool {
	if o != nil && o.UniverseUUIDs != nil {
		return true
	}

	return false
}

// SetUniverseUUIDs gets a reference to the given []string and assigns it to the UniverseUUIDs field.
func (o *CustomerDetailsData) SetUniverseUUIDs(v []string) {
	o.UniverseUUIDs = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *CustomerDetailsData) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDetailsData) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *CustomerDetailsData) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *CustomerDetailsData) SetUuid(v string) {
	o.Uuid = &v
}

func (o CustomerDetailsData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AlertingData != nil {
		toSerialize["alertingData"] = o.AlertingData
	}
	if o.CallhomeLevel != nil {
		toSerialize["callhomeLevel"] = o.CallhomeLevel
	}
	if true {
		toSerialize["code"] = o.Code
	}
	if o.CreationDate != nil {
		toSerialize["creationDate"] = o.CreationDate
	}
	if o.CustomerId != nil {
		toSerialize["customerId"] = o.CustomerId
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.SmtpData != nil {
		toSerialize["smtpData"] = o.SmtpData
	}
	if o.UniverseUUIDs != nil {
		toSerialize["universeUUIDs"] = o.UniverseUUIDs
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	return json.Marshal(toSerialize)
}

type NullableCustomerDetailsData struct {
	value *CustomerDetailsData
	isSet bool
}

func (v NullableCustomerDetailsData) Get() *CustomerDetailsData {
	return v.value
}

func (v *NullableCustomerDetailsData) Set(val *CustomerDetailsData) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerDetailsData) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerDetailsData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerDetailsData(val *CustomerDetailsData) *NullableCustomerDetailsData {
	return &NullableCustomerDetailsData{value: val, isSet: true}
}

func (v NullableCustomerDetailsData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerDetailsData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


