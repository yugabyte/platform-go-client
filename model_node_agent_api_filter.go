/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// NodeAgentApiFilter struct for NodeAgentApiFilter
type NodeAgentApiFilter struct {
	NodeIps []string `json:"nodeIps"`
}

// NewNodeAgentApiFilter instantiates a new NodeAgentApiFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodeAgentApiFilter(nodeIps []string, ) *NodeAgentApiFilter {
	this := NodeAgentApiFilter{}
	this.NodeIps = nodeIps
	return &this
}

// NewNodeAgentApiFilterWithDefaults instantiates a new NodeAgentApiFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeAgentApiFilterWithDefaults() *NodeAgentApiFilter {
	this := NodeAgentApiFilter{}
	return &this
}

// GetNodeIps returns the NodeIps field value
func (o *NodeAgentApiFilter) GetNodeIps() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.NodeIps
}

// GetNodeIpsOk returns a tuple with the NodeIps field value
// and a boolean to check if the value has been set.
func (o *NodeAgentApiFilter) GetNodeIpsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NodeIps, true
}

// SetNodeIps sets field value
func (o *NodeAgentApiFilter) SetNodeIps(v []string) {
	o.NodeIps = v
}

func (o NodeAgentApiFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["nodeIps"] = o.NodeIps
	}
	return json.Marshal(toSerialize)
}

type NullableNodeAgentApiFilter struct {
	value *NodeAgentApiFilter
	isSet bool
}

func (v NullableNodeAgentApiFilter) Get() *NodeAgentApiFilter {
	return v.value
}

func (v *NullableNodeAgentApiFilter) Set(val *NodeAgentApiFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableNodeAgentApiFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableNodeAgentApiFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodeAgentApiFilter(val *NodeAgentApiFilter) *NullableNodeAgentApiFilter {
	return &NullableNodeAgentApiFilter{value: val, isSet: true}
}

func (v NullableNodeAgentApiFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodeAgentApiFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


