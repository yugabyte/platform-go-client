/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
	"time"
)

// BackupResp struct for BackupResp
type BackupResp struct {
	BackupType string `json:"backupType"`
	Category string `json:"category"`
	CommonBackupInfo CommonBackupInfo `json:"commonBackupInfo"`
	CustomerUUID string `json:"customerUUID"`
	ExpiryTime time.Time `json:"expiryTime"`
	FullChainSizeInBytes int64 `json:"fullChainSizeInBytes"`
	HasIncrementalBackups bool `json:"hasIncrementalBackups"`
	IsFullBackup bool `json:"isFullBackup"`
	IsStorageConfigPresent bool `json:"isStorageConfigPresent"`
	IsUniversePresent bool `json:"isUniversePresent"`
	LastBackupState string `json:"lastBackupState"`
	LastIncrementalBackupTime time.Time `json:"lastIncrementalBackupTime"`
	OnDemand bool `json:"onDemand"`
	ScheduleUUID string `json:"scheduleUUID"`
	StorageConfigType string `json:"storageConfigType"`
	UniverseName string `json:"universeName"`
	UniverseUUID string `json:"universeUUID"`
}

// NewBackupResp instantiates a new BackupResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupResp(backupType string, category string, commonBackupInfo CommonBackupInfo, customerUUID string, expiryTime time.Time, fullChainSizeInBytes int64, hasIncrementalBackups bool, isFullBackup bool, isStorageConfigPresent bool, isUniversePresent bool, lastBackupState string, lastIncrementalBackupTime time.Time, onDemand bool, scheduleUUID string, storageConfigType string, universeName string, universeUUID string, ) *BackupResp {
	this := BackupResp{}
	this.BackupType = backupType
	this.Category = category
	this.CommonBackupInfo = commonBackupInfo
	this.CustomerUUID = customerUUID
	this.ExpiryTime = expiryTime
	this.FullChainSizeInBytes = fullChainSizeInBytes
	this.HasIncrementalBackups = hasIncrementalBackups
	this.IsFullBackup = isFullBackup
	this.IsStorageConfigPresent = isStorageConfigPresent
	this.IsUniversePresent = isUniversePresent
	this.LastBackupState = lastBackupState
	this.LastIncrementalBackupTime = lastIncrementalBackupTime
	this.OnDemand = onDemand
	this.ScheduleUUID = scheduleUUID
	this.StorageConfigType = storageConfigType
	this.UniverseName = universeName
	this.UniverseUUID = universeUUID
	return &this
}

// NewBackupRespWithDefaults instantiates a new BackupResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupRespWithDefaults() *BackupResp {
	this := BackupResp{}
	return &this
}

// GetBackupType returns the BackupType field value
func (o *BackupResp) GetBackupType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.BackupType
}

// GetBackupTypeOk returns a tuple with the BackupType field value
// and a boolean to check if the value has been set.
func (o *BackupResp) GetBackupTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BackupType, true
}

// SetBackupType sets field value
func (o *BackupResp) SetBackupType(v string) {
	o.BackupType = v
}

// GetCategory returns the Category field value
func (o *BackupResp) GetCategory() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *BackupResp) GetCategoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *BackupResp) SetCategory(v string) {
	o.Category = v
}

// GetCommonBackupInfo returns the CommonBackupInfo field value
func (o *BackupResp) GetCommonBackupInfo() CommonBackupInfo {
	if o == nil  {
		var ret CommonBackupInfo
		return ret
	}

	return o.CommonBackupInfo
}

// GetCommonBackupInfoOk returns a tuple with the CommonBackupInfo field value
// and a boolean to check if the value has been set.
func (o *BackupResp) GetCommonBackupInfoOk() (*CommonBackupInfo, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CommonBackupInfo, true
}

// SetCommonBackupInfo sets field value
func (o *BackupResp) SetCommonBackupInfo(v CommonBackupInfo) {
	o.CommonBackupInfo = v
}

// GetCustomerUUID returns the CustomerUUID field value
func (o *BackupResp) GetCustomerUUID() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.CustomerUUID
}

// GetCustomerUUIDOk returns a tuple with the CustomerUUID field value
// and a boolean to check if the value has been set.
func (o *BackupResp) GetCustomerUUIDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CustomerUUID, true
}

// SetCustomerUUID sets field value
func (o *BackupResp) SetCustomerUUID(v string) {
	o.CustomerUUID = v
}

// GetExpiryTime returns the ExpiryTime field value
func (o *BackupResp) GetExpiryTime() time.Time {
	if o == nil  {
		var ret time.Time
		return ret
	}

	return o.ExpiryTime
}

// GetExpiryTimeOk returns a tuple with the ExpiryTime field value
// and a boolean to check if the value has been set.
func (o *BackupResp) GetExpiryTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ExpiryTime, true
}

// SetExpiryTime sets field value
func (o *BackupResp) SetExpiryTime(v time.Time) {
	o.ExpiryTime = v
}

// GetFullChainSizeInBytes returns the FullChainSizeInBytes field value
func (o *BackupResp) GetFullChainSizeInBytes() int64 {
	if o == nil  {
		var ret int64
		return ret
	}

	return o.FullChainSizeInBytes
}

// GetFullChainSizeInBytesOk returns a tuple with the FullChainSizeInBytes field value
// and a boolean to check if the value has been set.
func (o *BackupResp) GetFullChainSizeInBytesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FullChainSizeInBytes, true
}

// SetFullChainSizeInBytes sets field value
func (o *BackupResp) SetFullChainSizeInBytes(v int64) {
	o.FullChainSizeInBytes = v
}

// GetHasIncrementalBackups returns the HasIncrementalBackups field value
func (o *BackupResp) GetHasIncrementalBackups() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.HasIncrementalBackups
}

// GetHasIncrementalBackupsOk returns a tuple with the HasIncrementalBackups field value
// and a boolean to check if the value has been set.
func (o *BackupResp) GetHasIncrementalBackupsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.HasIncrementalBackups, true
}

// SetHasIncrementalBackups sets field value
func (o *BackupResp) SetHasIncrementalBackups(v bool) {
	o.HasIncrementalBackups = v
}

// GetIsFullBackup returns the IsFullBackup field value
func (o *BackupResp) GetIsFullBackup() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.IsFullBackup
}

// GetIsFullBackupOk returns a tuple with the IsFullBackup field value
// and a boolean to check if the value has been set.
func (o *BackupResp) GetIsFullBackupOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsFullBackup, true
}

// SetIsFullBackup sets field value
func (o *BackupResp) SetIsFullBackup(v bool) {
	o.IsFullBackup = v
}

// GetIsStorageConfigPresent returns the IsStorageConfigPresent field value
func (o *BackupResp) GetIsStorageConfigPresent() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.IsStorageConfigPresent
}

// GetIsStorageConfigPresentOk returns a tuple with the IsStorageConfigPresent field value
// and a boolean to check if the value has been set.
func (o *BackupResp) GetIsStorageConfigPresentOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsStorageConfigPresent, true
}

// SetIsStorageConfigPresent sets field value
func (o *BackupResp) SetIsStorageConfigPresent(v bool) {
	o.IsStorageConfigPresent = v
}

// GetIsUniversePresent returns the IsUniversePresent field value
func (o *BackupResp) GetIsUniversePresent() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.IsUniversePresent
}

// GetIsUniversePresentOk returns a tuple with the IsUniversePresent field value
// and a boolean to check if the value has been set.
func (o *BackupResp) GetIsUniversePresentOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsUniversePresent, true
}

// SetIsUniversePresent sets field value
func (o *BackupResp) SetIsUniversePresent(v bool) {
	o.IsUniversePresent = v
}

// GetLastBackupState returns the LastBackupState field value
func (o *BackupResp) GetLastBackupState() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.LastBackupState
}

// GetLastBackupStateOk returns a tuple with the LastBackupState field value
// and a boolean to check if the value has been set.
func (o *BackupResp) GetLastBackupStateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LastBackupState, true
}

// SetLastBackupState sets field value
func (o *BackupResp) SetLastBackupState(v string) {
	o.LastBackupState = v
}

// GetLastIncrementalBackupTime returns the LastIncrementalBackupTime field value
func (o *BackupResp) GetLastIncrementalBackupTime() time.Time {
	if o == nil  {
		var ret time.Time
		return ret
	}

	return o.LastIncrementalBackupTime
}

// GetLastIncrementalBackupTimeOk returns a tuple with the LastIncrementalBackupTime field value
// and a boolean to check if the value has been set.
func (o *BackupResp) GetLastIncrementalBackupTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LastIncrementalBackupTime, true
}

// SetLastIncrementalBackupTime sets field value
func (o *BackupResp) SetLastIncrementalBackupTime(v time.Time) {
	o.LastIncrementalBackupTime = v
}

// GetOnDemand returns the OnDemand field value
func (o *BackupResp) GetOnDemand() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.OnDemand
}

// GetOnDemandOk returns a tuple with the OnDemand field value
// and a boolean to check if the value has been set.
func (o *BackupResp) GetOnDemandOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OnDemand, true
}

// SetOnDemand sets field value
func (o *BackupResp) SetOnDemand(v bool) {
	o.OnDemand = v
}

// GetScheduleUUID returns the ScheduleUUID field value
func (o *BackupResp) GetScheduleUUID() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ScheduleUUID
}

// GetScheduleUUIDOk returns a tuple with the ScheduleUUID field value
// and a boolean to check if the value has been set.
func (o *BackupResp) GetScheduleUUIDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ScheduleUUID, true
}

// SetScheduleUUID sets field value
func (o *BackupResp) SetScheduleUUID(v string) {
	o.ScheduleUUID = v
}

// GetStorageConfigType returns the StorageConfigType field value
func (o *BackupResp) GetStorageConfigType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.StorageConfigType
}

// GetStorageConfigTypeOk returns a tuple with the StorageConfigType field value
// and a boolean to check if the value has been set.
func (o *BackupResp) GetStorageConfigTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StorageConfigType, true
}

// SetStorageConfigType sets field value
func (o *BackupResp) SetStorageConfigType(v string) {
	o.StorageConfigType = v
}

// GetUniverseName returns the UniverseName field value
func (o *BackupResp) GetUniverseName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.UniverseName
}

// GetUniverseNameOk returns a tuple with the UniverseName field value
// and a boolean to check if the value has been set.
func (o *BackupResp) GetUniverseNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UniverseName, true
}

// SetUniverseName sets field value
func (o *BackupResp) SetUniverseName(v string) {
	o.UniverseName = v
}

// GetUniverseUUID returns the UniverseUUID field value
func (o *BackupResp) GetUniverseUUID() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.UniverseUUID
}

// GetUniverseUUIDOk returns a tuple with the UniverseUUID field value
// and a boolean to check if the value has been set.
func (o *BackupResp) GetUniverseUUIDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UniverseUUID, true
}

// SetUniverseUUID sets field value
func (o *BackupResp) SetUniverseUUID(v string) {
	o.UniverseUUID = v
}

func (o BackupResp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["backupType"] = o.BackupType
	}
	if true {
		toSerialize["category"] = o.Category
	}
	if true {
		toSerialize["commonBackupInfo"] = o.CommonBackupInfo
	}
	if true {
		toSerialize["customerUUID"] = o.CustomerUUID
	}
	if true {
		toSerialize["expiryTime"] = o.ExpiryTime
	}
	if true {
		toSerialize["fullChainSizeInBytes"] = o.FullChainSizeInBytes
	}
	if true {
		toSerialize["hasIncrementalBackups"] = o.HasIncrementalBackups
	}
	if true {
		toSerialize["isFullBackup"] = o.IsFullBackup
	}
	if true {
		toSerialize["isStorageConfigPresent"] = o.IsStorageConfigPresent
	}
	if true {
		toSerialize["isUniversePresent"] = o.IsUniversePresent
	}
	if true {
		toSerialize["lastBackupState"] = o.LastBackupState
	}
	if true {
		toSerialize["lastIncrementalBackupTime"] = o.LastIncrementalBackupTime
	}
	if true {
		toSerialize["onDemand"] = o.OnDemand
	}
	if true {
		toSerialize["scheduleUUID"] = o.ScheduleUUID
	}
	if true {
		toSerialize["storageConfigType"] = o.StorageConfigType
	}
	if true {
		toSerialize["universeName"] = o.UniverseName
	}
	if true {
		toSerialize["universeUUID"] = o.UniverseUUID
	}
	return json.Marshal(toSerialize)
}

type NullableBackupResp struct {
	value *BackupResp
	isSet bool
}

func (v NullableBackupResp) Get() *BackupResp {
	return v.value
}

func (v *NullableBackupResp) Set(val *BackupResp) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupResp) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupResp(val *BackupResp) *NullableBackupResp {
	return &NullableBackupResp{value: val, isSet: true}
}

func (v NullableBackupResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


