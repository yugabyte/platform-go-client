/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// EditAccessKeyRotationScheduleParams struct for EditAccessKeyRotationScheduleParams
type EditAccessKeyRotationScheduleParams struct {
	// Frequency of the schedule in days
	SchedulingFrequencyDays *int32 `json:"schedulingFrequencyDays,omitempty"`
	// State of the schedule
	Status *string `json:"status,omitempty"`
}

// NewEditAccessKeyRotationScheduleParams instantiates a new EditAccessKeyRotationScheduleParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditAccessKeyRotationScheduleParams() *EditAccessKeyRotationScheduleParams {
	this := EditAccessKeyRotationScheduleParams{}
	return &this
}

// NewEditAccessKeyRotationScheduleParamsWithDefaults instantiates a new EditAccessKeyRotationScheduleParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditAccessKeyRotationScheduleParamsWithDefaults() *EditAccessKeyRotationScheduleParams {
	this := EditAccessKeyRotationScheduleParams{}
	return &this
}

// GetSchedulingFrequencyDays returns the SchedulingFrequencyDays field value if set, zero value otherwise.
func (o *EditAccessKeyRotationScheduleParams) GetSchedulingFrequencyDays() int32 {
	if o == nil || o.SchedulingFrequencyDays == nil {
		var ret int32
		return ret
	}
	return *o.SchedulingFrequencyDays
}

// GetSchedulingFrequencyDaysOk returns a tuple with the SchedulingFrequencyDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditAccessKeyRotationScheduleParams) GetSchedulingFrequencyDaysOk() (*int32, bool) {
	if o == nil || o.SchedulingFrequencyDays == nil {
		return nil, false
	}
	return o.SchedulingFrequencyDays, true
}

// HasSchedulingFrequencyDays returns a boolean if a field has been set.
func (o *EditAccessKeyRotationScheduleParams) HasSchedulingFrequencyDays() bool {
	if o != nil && o.SchedulingFrequencyDays != nil {
		return true
	}

	return false
}

// SetSchedulingFrequencyDays gets a reference to the given int32 and assigns it to the SchedulingFrequencyDays field.
func (o *EditAccessKeyRotationScheduleParams) SetSchedulingFrequencyDays(v int32) {
	o.SchedulingFrequencyDays = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *EditAccessKeyRotationScheduleParams) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditAccessKeyRotationScheduleParams) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *EditAccessKeyRotationScheduleParams) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *EditAccessKeyRotationScheduleParams) SetStatus(v string) {
	o.Status = &v
}

func (o EditAccessKeyRotationScheduleParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SchedulingFrequencyDays != nil {
		toSerialize["schedulingFrequencyDays"] = o.SchedulingFrequencyDays
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableEditAccessKeyRotationScheduleParams struct {
	value *EditAccessKeyRotationScheduleParams
	isSet bool
}

func (v NullableEditAccessKeyRotationScheduleParams) Get() *EditAccessKeyRotationScheduleParams {
	return v.value
}

func (v *NullableEditAccessKeyRotationScheduleParams) Set(val *EditAccessKeyRotationScheduleParams) {
	v.value = val
	v.isSet = true
}

func (v NullableEditAccessKeyRotationScheduleParams) IsSet() bool {
	return v.isSet
}

func (v *NullableEditAccessKeyRotationScheduleParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditAccessKeyRotationScheduleParams(val *EditAccessKeyRotationScheduleParams) *NullableEditAccessKeyRotationScheduleParams {
	return &NullableEditAccessKeyRotationScheduleParams{value: val, isSet: true}
}

func (v NullableEditAccessKeyRotationScheduleParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditAccessKeyRotationScheduleParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


