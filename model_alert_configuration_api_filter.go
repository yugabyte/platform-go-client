/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// AlertConfigurationApiFilter struct for AlertConfigurationApiFilter
type AlertConfigurationApiFilter struct {
	// Whether the alert configuration is active.
	Active *bool `json:"active,omitempty"`
	// The destination type of the alert configuration. 
	DestinationType *string `json:"destinationType,omitempty"`
	// The destination uuid of the alert configuration. 
	DestinationUuid *string `json:"destinationUuid,omitempty"`
	// The name of the alert configuration.
	Name *string `json:"name,omitempty"`
	// The severity of the alert configuration.
	Severity *string `json:"severity,omitempty"`
	Target *AlertConfigurationTarget `json:"target,omitempty"`
	// The target type of the alert configuration.
	TargetType *string `json:"targetType,omitempty"`
	// The template of the alert configuration.
	Template *string `json:"template,omitempty"`
	// The uuids of the alert configurations.
	Uuids *[]string `json:"uuids,omitempty"`
}

// NewAlertConfigurationApiFilter instantiates a new AlertConfigurationApiFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertConfigurationApiFilter() *AlertConfigurationApiFilter {
	this := AlertConfigurationApiFilter{}
	return &this
}

// NewAlertConfigurationApiFilterWithDefaults instantiates a new AlertConfigurationApiFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertConfigurationApiFilterWithDefaults() *AlertConfigurationApiFilter {
	this := AlertConfigurationApiFilter{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *AlertConfigurationApiFilter) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertConfigurationApiFilter) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *AlertConfigurationApiFilter) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *AlertConfigurationApiFilter) SetActive(v bool) {
	o.Active = &v
}

// GetDestinationType returns the DestinationType field value if set, zero value otherwise.
func (o *AlertConfigurationApiFilter) GetDestinationType() string {
	if o == nil || o.DestinationType == nil {
		var ret string
		return ret
	}
	return *o.DestinationType
}

// GetDestinationTypeOk returns a tuple with the DestinationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertConfigurationApiFilter) GetDestinationTypeOk() (*string, bool) {
	if o == nil || o.DestinationType == nil {
		return nil, false
	}
	return o.DestinationType, true
}

// HasDestinationType returns a boolean if a field has been set.
func (o *AlertConfigurationApiFilter) HasDestinationType() bool {
	if o != nil && o.DestinationType != nil {
		return true
	}

	return false
}

// SetDestinationType gets a reference to the given string and assigns it to the DestinationType field.
func (o *AlertConfigurationApiFilter) SetDestinationType(v string) {
	o.DestinationType = &v
}

// GetDestinationUuid returns the DestinationUuid field value if set, zero value otherwise.
func (o *AlertConfigurationApiFilter) GetDestinationUuid() string {
	if o == nil || o.DestinationUuid == nil {
		var ret string
		return ret
	}
	return *o.DestinationUuid
}

// GetDestinationUuidOk returns a tuple with the DestinationUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertConfigurationApiFilter) GetDestinationUuidOk() (*string, bool) {
	if o == nil || o.DestinationUuid == nil {
		return nil, false
	}
	return o.DestinationUuid, true
}

// HasDestinationUuid returns a boolean if a field has been set.
func (o *AlertConfigurationApiFilter) HasDestinationUuid() bool {
	if o != nil && o.DestinationUuid != nil {
		return true
	}

	return false
}

// SetDestinationUuid gets a reference to the given string and assigns it to the DestinationUuid field.
func (o *AlertConfigurationApiFilter) SetDestinationUuid(v string) {
	o.DestinationUuid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AlertConfigurationApiFilter) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertConfigurationApiFilter) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AlertConfigurationApiFilter) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AlertConfigurationApiFilter) SetName(v string) {
	o.Name = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *AlertConfigurationApiFilter) GetSeverity() string {
	if o == nil || o.Severity == nil {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertConfigurationApiFilter) GetSeverityOk() (*string, bool) {
	if o == nil || o.Severity == nil {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *AlertConfigurationApiFilter) HasSeverity() bool {
	if o != nil && o.Severity != nil {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *AlertConfigurationApiFilter) SetSeverity(v string) {
	o.Severity = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *AlertConfigurationApiFilter) GetTarget() AlertConfigurationTarget {
	if o == nil || o.Target == nil {
		var ret AlertConfigurationTarget
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertConfigurationApiFilter) GetTargetOk() (*AlertConfigurationTarget, bool) {
	if o == nil || o.Target == nil {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *AlertConfigurationApiFilter) HasTarget() bool {
	if o != nil && o.Target != nil {
		return true
	}

	return false
}

// SetTarget gets a reference to the given AlertConfigurationTarget and assigns it to the Target field.
func (o *AlertConfigurationApiFilter) SetTarget(v AlertConfigurationTarget) {
	o.Target = &v
}

// GetTargetType returns the TargetType field value if set, zero value otherwise.
func (o *AlertConfigurationApiFilter) GetTargetType() string {
	if o == nil || o.TargetType == nil {
		var ret string
		return ret
	}
	return *o.TargetType
}

// GetTargetTypeOk returns a tuple with the TargetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertConfigurationApiFilter) GetTargetTypeOk() (*string, bool) {
	if o == nil || o.TargetType == nil {
		return nil, false
	}
	return o.TargetType, true
}

// HasTargetType returns a boolean if a field has been set.
func (o *AlertConfigurationApiFilter) HasTargetType() bool {
	if o != nil && o.TargetType != nil {
		return true
	}

	return false
}

// SetTargetType gets a reference to the given string and assigns it to the TargetType field.
func (o *AlertConfigurationApiFilter) SetTargetType(v string) {
	o.TargetType = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *AlertConfigurationApiFilter) GetTemplate() string {
	if o == nil || o.Template == nil {
		var ret string
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertConfigurationApiFilter) GetTemplateOk() (*string, bool) {
	if o == nil || o.Template == nil {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *AlertConfigurationApiFilter) HasTemplate() bool {
	if o != nil && o.Template != nil {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given string and assigns it to the Template field.
func (o *AlertConfigurationApiFilter) SetTemplate(v string) {
	o.Template = &v
}

// GetUuids returns the Uuids field value if set, zero value otherwise.
func (o *AlertConfigurationApiFilter) GetUuids() []string {
	if o == nil || o.Uuids == nil {
		var ret []string
		return ret
	}
	return *o.Uuids
}

// GetUuidsOk returns a tuple with the Uuids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertConfigurationApiFilter) GetUuidsOk() (*[]string, bool) {
	if o == nil || o.Uuids == nil {
		return nil, false
	}
	return o.Uuids, true
}

// HasUuids returns a boolean if a field has been set.
func (o *AlertConfigurationApiFilter) HasUuids() bool {
	if o != nil && o.Uuids != nil {
		return true
	}

	return false
}

// SetUuids gets a reference to the given []string and assigns it to the Uuids field.
func (o *AlertConfigurationApiFilter) SetUuids(v []string) {
	o.Uuids = &v
}

func (o AlertConfigurationApiFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.DestinationType != nil {
		toSerialize["destinationType"] = o.DestinationType
	}
	if o.DestinationUuid != nil {
		toSerialize["destinationUuid"] = o.DestinationUuid
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Severity != nil {
		toSerialize["severity"] = o.Severity
	}
	if o.Target != nil {
		toSerialize["target"] = o.Target
	}
	if o.TargetType != nil {
		toSerialize["targetType"] = o.TargetType
	}
	if o.Template != nil {
		toSerialize["template"] = o.Template
	}
	if o.Uuids != nil {
		toSerialize["uuids"] = o.Uuids
	}
	return json.Marshal(toSerialize)
}

type NullableAlertConfigurationApiFilter struct {
	value *AlertConfigurationApiFilter
	isSet bool
}

func (v NullableAlertConfigurationApiFilter) Get() *AlertConfigurationApiFilter {
	return v.value
}

func (v *NullableAlertConfigurationApiFilter) Set(val *AlertConfigurationApiFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertConfigurationApiFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertConfigurationApiFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertConfigurationApiFilter(val *AlertConfigurationApiFilter) *NullableAlertConfigurationApiFilter {
	return &NullableAlertConfigurationApiFilter{value: val, isSet: true}
}

func (v NullableAlertConfigurationApiFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertConfigurationApiFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


