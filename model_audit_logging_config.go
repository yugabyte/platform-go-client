/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// AuditLoggingConfig Audit Logging Configuration
type AuditLoggingConfig struct {
	// Max number of days up till which logs are kept
	MaxHistory *int32 `json:"maxHistory,omitempty"`
	// Flag to enable/disable audit logs output to file
	OutputToFile bool `json:"outputToFile"`
	// Flag to enable/disable audit logs output to stdout
	OutputToStdout bool `json:"outputToStdout"`
	// Rollover Pattern
	RolloverPattern *string `json:"rolloverPattern,omitempty"`
}

// NewAuditLoggingConfig instantiates a new AuditLoggingConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditLoggingConfig(outputToFile bool, outputToStdout bool, ) *AuditLoggingConfig {
	this := AuditLoggingConfig{}
	this.OutputToFile = outputToFile
	this.OutputToStdout = outputToStdout
	return &this
}

// NewAuditLoggingConfigWithDefaults instantiates a new AuditLoggingConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditLoggingConfigWithDefaults() *AuditLoggingConfig {
	this := AuditLoggingConfig{}
	return &this
}

// GetMaxHistory returns the MaxHistory field value if set, zero value otherwise.
func (o *AuditLoggingConfig) GetMaxHistory() int32 {
	if o == nil || o.MaxHistory == nil {
		var ret int32
		return ret
	}
	return *o.MaxHistory
}

// GetMaxHistoryOk returns a tuple with the MaxHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLoggingConfig) GetMaxHistoryOk() (*int32, bool) {
	if o == nil || o.MaxHistory == nil {
		return nil, false
	}
	return o.MaxHistory, true
}

// HasMaxHistory returns a boolean if a field has been set.
func (o *AuditLoggingConfig) HasMaxHistory() bool {
	if o != nil && o.MaxHistory != nil {
		return true
	}

	return false
}

// SetMaxHistory gets a reference to the given int32 and assigns it to the MaxHistory field.
func (o *AuditLoggingConfig) SetMaxHistory(v int32) {
	o.MaxHistory = &v
}

// GetOutputToFile returns the OutputToFile field value
func (o *AuditLoggingConfig) GetOutputToFile() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.OutputToFile
}

// GetOutputToFileOk returns a tuple with the OutputToFile field value
// and a boolean to check if the value has been set.
func (o *AuditLoggingConfig) GetOutputToFileOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OutputToFile, true
}

// SetOutputToFile sets field value
func (o *AuditLoggingConfig) SetOutputToFile(v bool) {
	o.OutputToFile = v
}

// GetOutputToStdout returns the OutputToStdout field value
func (o *AuditLoggingConfig) GetOutputToStdout() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.OutputToStdout
}

// GetOutputToStdoutOk returns a tuple with the OutputToStdout field value
// and a boolean to check if the value has been set.
func (o *AuditLoggingConfig) GetOutputToStdoutOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OutputToStdout, true
}

// SetOutputToStdout sets field value
func (o *AuditLoggingConfig) SetOutputToStdout(v bool) {
	o.OutputToStdout = v
}

// GetRolloverPattern returns the RolloverPattern field value if set, zero value otherwise.
func (o *AuditLoggingConfig) GetRolloverPattern() string {
	if o == nil || o.RolloverPattern == nil {
		var ret string
		return ret
	}
	return *o.RolloverPattern
}

// GetRolloverPatternOk returns a tuple with the RolloverPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLoggingConfig) GetRolloverPatternOk() (*string, bool) {
	if o == nil || o.RolloverPattern == nil {
		return nil, false
	}
	return o.RolloverPattern, true
}

// HasRolloverPattern returns a boolean if a field has been set.
func (o *AuditLoggingConfig) HasRolloverPattern() bool {
	if o != nil && o.RolloverPattern != nil {
		return true
	}

	return false
}

// SetRolloverPattern gets a reference to the given string and assigns it to the RolloverPattern field.
func (o *AuditLoggingConfig) SetRolloverPattern(v string) {
	o.RolloverPattern = &v
}

func (o AuditLoggingConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MaxHistory != nil {
		toSerialize["maxHistory"] = o.MaxHistory
	}
	if true {
		toSerialize["outputToFile"] = o.OutputToFile
	}
	if true {
		toSerialize["outputToStdout"] = o.OutputToStdout
	}
	if o.RolloverPattern != nil {
		toSerialize["rolloverPattern"] = o.RolloverPattern
	}
	return json.Marshal(toSerialize)
}

type NullableAuditLoggingConfig struct {
	value *AuditLoggingConfig
	isSet bool
}

func (v NullableAuditLoggingConfig) Get() *AuditLoggingConfig {
	return v.value
}

func (v *NullableAuditLoggingConfig) Set(val *AuditLoggingConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditLoggingConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditLoggingConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditLoggingConfig(val *AuditLoggingConfig) *NullableAuditLoggingConfig {
	return &NullableAuditLoggingConfig{value: val, isSet: true}
}

func (v NullableAuditLoggingConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditLoggingConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


