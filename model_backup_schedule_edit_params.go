/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// BackupScheduleEditParams struct for BackupScheduleEditParams
type BackupScheduleEditParams struct {
	// Cron expression for scheduling
	CronExpression *string `json:"cronExpression,omitempty"`
	// Time Unit for frequency
	FrequencyTimeUnit *string `json:"frequencyTimeUnit,omitempty"`
	// Frequency of incremental backup schedule
	IncrementalBackupFrequency *int64 `json:"incrementalBackupFrequency,omitempty"`
	// TimeUnit for incremental Backup Schedule frequency
	IncrementalBackupFrequencyTimeUnit *string `json:"incrementalBackupFrequencyTimeUnit,omitempty"`
	// Frequency of the schedule
	SchedulingFrequency *int64 `json:"schedulingFrequency,omitempty"`
}

// NewBackupScheduleEditParams instantiates a new BackupScheduleEditParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupScheduleEditParams() *BackupScheduleEditParams {
	this := BackupScheduleEditParams{}
	return &this
}

// NewBackupScheduleEditParamsWithDefaults instantiates a new BackupScheduleEditParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupScheduleEditParamsWithDefaults() *BackupScheduleEditParams {
	this := BackupScheduleEditParams{}
	return &this
}

// GetCronExpression returns the CronExpression field value if set, zero value otherwise.
func (o *BackupScheduleEditParams) GetCronExpression() string {
	if o == nil || o.CronExpression == nil {
		var ret string
		return ret
	}
	return *o.CronExpression
}

// GetCronExpressionOk returns a tuple with the CronExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleEditParams) GetCronExpressionOk() (*string, bool) {
	if o == nil || o.CronExpression == nil {
		return nil, false
	}
	return o.CronExpression, true
}

// HasCronExpression returns a boolean if a field has been set.
func (o *BackupScheduleEditParams) HasCronExpression() bool {
	if o != nil && o.CronExpression != nil {
		return true
	}

	return false
}

// SetCronExpression gets a reference to the given string and assigns it to the CronExpression field.
func (o *BackupScheduleEditParams) SetCronExpression(v string) {
	o.CronExpression = &v
}

// GetFrequencyTimeUnit returns the FrequencyTimeUnit field value if set, zero value otherwise.
func (o *BackupScheduleEditParams) GetFrequencyTimeUnit() string {
	if o == nil || o.FrequencyTimeUnit == nil {
		var ret string
		return ret
	}
	return *o.FrequencyTimeUnit
}

// GetFrequencyTimeUnitOk returns a tuple with the FrequencyTimeUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleEditParams) GetFrequencyTimeUnitOk() (*string, bool) {
	if o == nil || o.FrequencyTimeUnit == nil {
		return nil, false
	}
	return o.FrequencyTimeUnit, true
}

// HasFrequencyTimeUnit returns a boolean if a field has been set.
func (o *BackupScheduleEditParams) HasFrequencyTimeUnit() bool {
	if o != nil && o.FrequencyTimeUnit != nil {
		return true
	}

	return false
}

// SetFrequencyTimeUnit gets a reference to the given string and assigns it to the FrequencyTimeUnit field.
func (o *BackupScheduleEditParams) SetFrequencyTimeUnit(v string) {
	o.FrequencyTimeUnit = &v
}

// GetIncrementalBackupFrequency returns the IncrementalBackupFrequency field value if set, zero value otherwise.
func (o *BackupScheduleEditParams) GetIncrementalBackupFrequency() int64 {
	if o == nil || o.IncrementalBackupFrequency == nil {
		var ret int64
		return ret
	}
	return *o.IncrementalBackupFrequency
}

// GetIncrementalBackupFrequencyOk returns a tuple with the IncrementalBackupFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleEditParams) GetIncrementalBackupFrequencyOk() (*int64, bool) {
	if o == nil || o.IncrementalBackupFrequency == nil {
		return nil, false
	}
	return o.IncrementalBackupFrequency, true
}

// HasIncrementalBackupFrequency returns a boolean if a field has been set.
func (o *BackupScheduleEditParams) HasIncrementalBackupFrequency() bool {
	if o != nil && o.IncrementalBackupFrequency != nil {
		return true
	}

	return false
}

// SetIncrementalBackupFrequency gets a reference to the given int64 and assigns it to the IncrementalBackupFrequency field.
func (o *BackupScheduleEditParams) SetIncrementalBackupFrequency(v int64) {
	o.IncrementalBackupFrequency = &v
}

// GetIncrementalBackupFrequencyTimeUnit returns the IncrementalBackupFrequencyTimeUnit field value if set, zero value otherwise.
func (o *BackupScheduleEditParams) GetIncrementalBackupFrequencyTimeUnit() string {
	if o == nil || o.IncrementalBackupFrequencyTimeUnit == nil {
		var ret string
		return ret
	}
	return *o.IncrementalBackupFrequencyTimeUnit
}

// GetIncrementalBackupFrequencyTimeUnitOk returns a tuple with the IncrementalBackupFrequencyTimeUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleEditParams) GetIncrementalBackupFrequencyTimeUnitOk() (*string, bool) {
	if o == nil || o.IncrementalBackupFrequencyTimeUnit == nil {
		return nil, false
	}
	return o.IncrementalBackupFrequencyTimeUnit, true
}

// HasIncrementalBackupFrequencyTimeUnit returns a boolean if a field has been set.
func (o *BackupScheduleEditParams) HasIncrementalBackupFrequencyTimeUnit() bool {
	if o != nil && o.IncrementalBackupFrequencyTimeUnit != nil {
		return true
	}

	return false
}

// SetIncrementalBackupFrequencyTimeUnit gets a reference to the given string and assigns it to the IncrementalBackupFrequencyTimeUnit field.
func (o *BackupScheduleEditParams) SetIncrementalBackupFrequencyTimeUnit(v string) {
	o.IncrementalBackupFrequencyTimeUnit = &v
}

// GetSchedulingFrequency returns the SchedulingFrequency field value if set, zero value otherwise.
func (o *BackupScheduleEditParams) GetSchedulingFrequency() int64 {
	if o == nil || o.SchedulingFrequency == nil {
		var ret int64
		return ret
	}
	return *o.SchedulingFrequency
}

// GetSchedulingFrequencyOk returns a tuple with the SchedulingFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleEditParams) GetSchedulingFrequencyOk() (*int64, bool) {
	if o == nil || o.SchedulingFrequency == nil {
		return nil, false
	}
	return o.SchedulingFrequency, true
}

// HasSchedulingFrequency returns a boolean if a field has been set.
func (o *BackupScheduleEditParams) HasSchedulingFrequency() bool {
	if o != nil && o.SchedulingFrequency != nil {
		return true
	}

	return false
}

// SetSchedulingFrequency gets a reference to the given int64 and assigns it to the SchedulingFrequency field.
func (o *BackupScheduleEditParams) SetSchedulingFrequency(v int64) {
	o.SchedulingFrequency = &v
}

func (o BackupScheduleEditParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CronExpression != nil {
		toSerialize["cronExpression"] = o.CronExpression
	}
	if o.FrequencyTimeUnit != nil {
		toSerialize["frequencyTimeUnit"] = o.FrequencyTimeUnit
	}
	if o.IncrementalBackupFrequency != nil {
		toSerialize["incrementalBackupFrequency"] = o.IncrementalBackupFrequency
	}
	if o.IncrementalBackupFrequencyTimeUnit != nil {
		toSerialize["incrementalBackupFrequencyTimeUnit"] = o.IncrementalBackupFrequencyTimeUnit
	}
	if o.SchedulingFrequency != nil {
		toSerialize["schedulingFrequency"] = o.SchedulingFrequency
	}
	return json.Marshal(toSerialize)
}

type NullableBackupScheduleEditParams struct {
	value *BackupScheduleEditParams
	isSet bool
}

func (v NullableBackupScheduleEditParams) Get() *BackupScheduleEditParams {
	return v.value
}

func (v *NullableBackupScheduleEditParams) Set(val *BackupScheduleEditParams) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupScheduleEditParams) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupScheduleEditParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupScheduleEditParams(val *BackupScheduleEditParams) *NullableBackupScheduleEditParams {
	return &NullableBackupScheduleEditParams{value: val, isSet: true}
}

func (v NullableBackupScheduleEditParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupScheduleEditParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


