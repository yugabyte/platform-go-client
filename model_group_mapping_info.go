/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
	"time"
)

// GroupMappingInfo struct for GroupMappingInfo
type GroupMappingInfo struct {
	// Group mapping creation time
	CreationDate *time.Time `json:"creationDate,omitempty"`
	CustomerUUID string `json:"customerUUID"`
	GroupUUID string `json:"groupUUID"`
	Identifier string `json:"identifier"`
	RoleUUID string `json:"roleUUID"`
	Type string `json:"type"`
}

// NewGroupMappingInfo instantiates a new GroupMappingInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupMappingInfo(customerUUID string, groupUUID string, identifier string, roleUUID string, type_ string) *GroupMappingInfo {
	this := GroupMappingInfo{}
	this.CustomerUUID = customerUUID
	this.GroupUUID = groupUUID
	this.Identifier = identifier
	this.RoleUUID = roleUUID
	this.Type = type_
	return &this
}

// NewGroupMappingInfoWithDefaults instantiates a new GroupMappingInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupMappingInfoWithDefaults() *GroupMappingInfo {
	this := GroupMappingInfo{}
	return &this
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *GroupMappingInfo) GetCreationDate() time.Time {
	if o == nil || o.CreationDate == nil {
		var ret time.Time
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupMappingInfo) GetCreationDateOk() (*time.Time, bool) {
	if o == nil || o.CreationDate == nil {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *GroupMappingInfo) HasCreationDate() bool {
	if o != nil && o.CreationDate != nil {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given time.Time and assigns it to the CreationDate field.
func (o *GroupMappingInfo) SetCreationDate(v time.Time) {
	o.CreationDate = &v
}

// GetCustomerUUID returns the CustomerUUID field value
func (o *GroupMappingInfo) GetCustomerUUID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerUUID
}

// GetCustomerUUIDOk returns a tuple with the CustomerUUID field value
// and a boolean to check if the value has been set.
func (o *GroupMappingInfo) GetCustomerUUIDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CustomerUUID, true
}

// SetCustomerUUID sets field value
func (o *GroupMappingInfo) SetCustomerUUID(v string) {
	o.CustomerUUID = v
}

// GetGroupUUID returns the GroupUUID field value
func (o *GroupMappingInfo) GetGroupUUID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupUUID
}

// GetGroupUUIDOk returns a tuple with the GroupUUID field value
// and a boolean to check if the value has been set.
func (o *GroupMappingInfo) GetGroupUUIDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.GroupUUID, true
}

// SetGroupUUID sets field value
func (o *GroupMappingInfo) SetGroupUUID(v string) {
	o.GroupUUID = v
}

// GetIdentifier returns the Identifier field value
func (o *GroupMappingInfo) GetIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *GroupMappingInfo) GetIdentifierOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *GroupMappingInfo) SetIdentifier(v string) {
	o.Identifier = v
}

// GetRoleUUID returns the RoleUUID field value
func (o *GroupMappingInfo) GetRoleUUID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleUUID
}

// GetRoleUUIDOk returns a tuple with the RoleUUID field value
// and a boolean to check if the value has been set.
func (o *GroupMappingInfo) GetRoleUUIDOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RoleUUID, true
}

// SetRoleUUID sets field value
func (o *GroupMappingInfo) SetRoleUUID(v string) {
	o.RoleUUID = v
}

// GetType returns the Type field value
func (o *GroupMappingInfo) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *GroupMappingInfo) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *GroupMappingInfo) SetType(v string) {
	o.Type = v
}

func (o GroupMappingInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreationDate != nil {
		toSerialize["creationDate"] = o.CreationDate
	}
	if true {
		toSerialize["customerUUID"] = o.CustomerUUID
	}
	if true {
		toSerialize["groupUUID"] = o.GroupUUID
	}
	if true {
		toSerialize["identifier"] = o.Identifier
	}
	if true {
		toSerialize["roleUUID"] = o.RoleUUID
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableGroupMappingInfo struct {
	value *GroupMappingInfo
	isSet bool
}

func (v NullableGroupMappingInfo) Get() *GroupMappingInfo {
	return v.value
}

func (v *NullableGroupMappingInfo) Set(val *GroupMappingInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupMappingInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupMappingInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupMappingInfo(val *GroupMappingInfo) *NullableGroupMappingInfo {
	return &NullableGroupMappingInfo{value: val, isSet: true}
}

func (v NullableGroupMappingInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupMappingInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


