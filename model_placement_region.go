/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// PlacementRegion struct for PlacementRegion
type PlacementRegion struct {
	AzList *[]PlacementAZ `json:"azList,omitempty"`
	Code *string `json:"code,omitempty"`
	LbFQDN *string `json:"lbFQDN,omitempty"`
	Name *string `json:"name,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
}

// NewPlacementRegion instantiates a new PlacementRegion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlacementRegion() *PlacementRegion {
	this := PlacementRegion{}
	return &this
}

// NewPlacementRegionWithDefaults instantiates a new PlacementRegion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlacementRegionWithDefaults() *PlacementRegion {
	this := PlacementRegion{}
	return &this
}

// GetAzList returns the AzList field value if set, zero value otherwise.
func (o *PlacementRegion) GetAzList() []PlacementAZ {
	if o == nil || o.AzList == nil {
		var ret []PlacementAZ
		return ret
	}
	return *o.AzList
}

// GetAzListOk returns a tuple with the AzList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlacementRegion) GetAzListOk() (*[]PlacementAZ, bool) {
	if o == nil || o.AzList == nil {
		return nil, false
	}
	return o.AzList, true
}

// HasAzList returns a boolean if a field has been set.
func (o *PlacementRegion) HasAzList() bool {
	if o != nil && o.AzList != nil {
		return true
	}

	return false
}

// SetAzList gets a reference to the given []PlacementAZ and assigns it to the AzList field.
func (o *PlacementRegion) SetAzList(v []PlacementAZ) {
	o.AzList = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *PlacementRegion) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlacementRegion) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *PlacementRegion) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *PlacementRegion) SetCode(v string) {
	o.Code = &v
}

// GetLbFQDN returns the LbFQDN field value if set, zero value otherwise.
func (o *PlacementRegion) GetLbFQDN() string {
	if o == nil || o.LbFQDN == nil {
		var ret string
		return ret
	}
	return *o.LbFQDN
}

// GetLbFQDNOk returns a tuple with the LbFQDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlacementRegion) GetLbFQDNOk() (*string, bool) {
	if o == nil || o.LbFQDN == nil {
		return nil, false
	}
	return o.LbFQDN, true
}

// HasLbFQDN returns a boolean if a field has been set.
func (o *PlacementRegion) HasLbFQDN() bool {
	if o != nil && o.LbFQDN != nil {
		return true
	}

	return false
}

// SetLbFQDN gets a reference to the given string and assigns it to the LbFQDN field.
func (o *PlacementRegion) SetLbFQDN(v string) {
	o.LbFQDN = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PlacementRegion) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlacementRegion) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PlacementRegion) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PlacementRegion) SetName(v string) {
	o.Name = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *PlacementRegion) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlacementRegion) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *PlacementRegion) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *PlacementRegion) SetUuid(v string) {
	o.Uuid = &v
}

func (o PlacementRegion) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AzList != nil {
		toSerialize["azList"] = o.AzList
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.LbFQDN != nil {
		toSerialize["lbFQDN"] = o.LbFQDN
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	return json.Marshal(toSerialize)
}

type NullablePlacementRegion struct {
	value *PlacementRegion
	isSet bool
}

func (v NullablePlacementRegion) Get() *PlacementRegion {
	return v.value
}

func (v *NullablePlacementRegion) Set(val *PlacementRegion) {
	v.value = val
	v.isSet = true
}

func (v NullablePlacementRegion) IsSet() bool {
	return v.isSet
}

func (v *NullablePlacementRegion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlacementRegion(val *PlacementRegion) *NullablePlacementRegion {
	return &NullablePlacementRegion{value: val, isSet: true}
}

func (v NullablePlacementRegion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlacementRegion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


