/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// EditBackupScheduleParams Info to edit the schedule params for backups
type EditBackupScheduleParams struct {
	// Cron expression for scheduling
	CronExpression *string `json:"cronExpression,omitempty"`
	// Frequency of the schedule
	Frequency *int64 `json:"frequency,omitempty"`
	// Time Unit for frequency
	FrequencyTimeUnit *string `json:"frequencyTimeUnit,omitempty"`
	// Frequency of incremental backup schedule
	IncrementalBackupFrequency *int64 `json:"incrementalBackupFrequency,omitempty"`
	// TimeUnit for incremental Backup Schedule frequency
	IncrementalBackupFrequencyTimeUnit *string `json:"incrementalBackupFrequencyTimeUnit,omitempty"`
	// Run a full or incremental backup if the schedule is expired when resuming a stopped schedule
	RunImmediateBackupOnResume *bool `json:"runImmediateBackupOnResume,omitempty"`
	// State of the schedule
	Status *string `json:"status,omitempty"`
	// Time before deleting the backup from storage, in milliseconds
	TimeBeforeDelete *int64 `json:"timeBeforeDelete,omitempty"`
}

// NewEditBackupScheduleParams instantiates a new EditBackupScheduleParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditBackupScheduleParams() *EditBackupScheduleParams {
	this := EditBackupScheduleParams{}
	return &this
}

// NewEditBackupScheduleParamsWithDefaults instantiates a new EditBackupScheduleParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditBackupScheduleParamsWithDefaults() *EditBackupScheduleParams {
	this := EditBackupScheduleParams{}
	return &this
}

// GetCronExpression returns the CronExpression field value if set, zero value otherwise.
func (o *EditBackupScheduleParams) GetCronExpression() string {
	if o == nil || o.CronExpression == nil {
		var ret string
		return ret
	}
	return *o.CronExpression
}

// GetCronExpressionOk returns a tuple with the CronExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditBackupScheduleParams) GetCronExpressionOk() (*string, bool) {
	if o == nil || o.CronExpression == nil {
		return nil, false
	}
	return o.CronExpression, true
}

// HasCronExpression returns a boolean if a field has been set.
func (o *EditBackupScheduleParams) HasCronExpression() bool {
	if o != nil && o.CronExpression != nil {
		return true
	}

	return false
}

// SetCronExpression gets a reference to the given string and assigns it to the CronExpression field.
func (o *EditBackupScheduleParams) SetCronExpression(v string) {
	o.CronExpression = &v
}

// GetFrequency returns the Frequency field value if set, zero value otherwise.
func (o *EditBackupScheduleParams) GetFrequency() int64 {
	if o == nil || o.Frequency == nil {
		var ret int64
		return ret
	}
	return *o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditBackupScheduleParams) GetFrequencyOk() (*int64, bool) {
	if o == nil || o.Frequency == nil {
		return nil, false
	}
	return o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *EditBackupScheduleParams) HasFrequency() bool {
	if o != nil && o.Frequency != nil {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given int64 and assigns it to the Frequency field.
func (o *EditBackupScheduleParams) SetFrequency(v int64) {
	o.Frequency = &v
}

// GetFrequencyTimeUnit returns the FrequencyTimeUnit field value if set, zero value otherwise.
func (o *EditBackupScheduleParams) GetFrequencyTimeUnit() string {
	if o == nil || o.FrequencyTimeUnit == nil {
		var ret string
		return ret
	}
	return *o.FrequencyTimeUnit
}

// GetFrequencyTimeUnitOk returns a tuple with the FrequencyTimeUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditBackupScheduleParams) GetFrequencyTimeUnitOk() (*string, bool) {
	if o == nil || o.FrequencyTimeUnit == nil {
		return nil, false
	}
	return o.FrequencyTimeUnit, true
}

// HasFrequencyTimeUnit returns a boolean if a field has been set.
func (o *EditBackupScheduleParams) HasFrequencyTimeUnit() bool {
	if o != nil && o.FrequencyTimeUnit != nil {
		return true
	}

	return false
}

// SetFrequencyTimeUnit gets a reference to the given string and assigns it to the FrequencyTimeUnit field.
func (o *EditBackupScheduleParams) SetFrequencyTimeUnit(v string) {
	o.FrequencyTimeUnit = &v
}

// GetIncrementalBackupFrequency returns the IncrementalBackupFrequency field value if set, zero value otherwise.
func (o *EditBackupScheduleParams) GetIncrementalBackupFrequency() int64 {
	if o == nil || o.IncrementalBackupFrequency == nil {
		var ret int64
		return ret
	}
	return *o.IncrementalBackupFrequency
}

// GetIncrementalBackupFrequencyOk returns a tuple with the IncrementalBackupFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditBackupScheduleParams) GetIncrementalBackupFrequencyOk() (*int64, bool) {
	if o == nil || o.IncrementalBackupFrequency == nil {
		return nil, false
	}
	return o.IncrementalBackupFrequency, true
}

// HasIncrementalBackupFrequency returns a boolean if a field has been set.
func (o *EditBackupScheduleParams) HasIncrementalBackupFrequency() bool {
	if o != nil && o.IncrementalBackupFrequency != nil {
		return true
	}

	return false
}

// SetIncrementalBackupFrequency gets a reference to the given int64 and assigns it to the IncrementalBackupFrequency field.
func (o *EditBackupScheduleParams) SetIncrementalBackupFrequency(v int64) {
	o.IncrementalBackupFrequency = &v
}

// GetIncrementalBackupFrequencyTimeUnit returns the IncrementalBackupFrequencyTimeUnit field value if set, zero value otherwise.
func (o *EditBackupScheduleParams) GetIncrementalBackupFrequencyTimeUnit() string {
	if o == nil || o.IncrementalBackupFrequencyTimeUnit == nil {
		var ret string
		return ret
	}
	return *o.IncrementalBackupFrequencyTimeUnit
}

// GetIncrementalBackupFrequencyTimeUnitOk returns a tuple with the IncrementalBackupFrequencyTimeUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditBackupScheduleParams) GetIncrementalBackupFrequencyTimeUnitOk() (*string, bool) {
	if o == nil || o.IncrementalBackupFrequencyTimeUnit == nil {
		return nil, false
	}
	return o.IncrementalBackupFrequencyTimeUnit, true
}

// HasIncrementalBackupFrequencyTimeUnit returns a boolean if a field has been set.
func (o *EditBackupScheduleParams) HasIncrementalBackupFrequencyTimeUnit() bool {
	if o != nil && o.IncrementalBackupFrequencyTimeUnit != nil {
		return true
	}

	return false
}

// SetIncrementalBackupFrequencyTimeUnit gets a reference to the given string and assigns it to the IncrementalBackupFrequencyTimeUnit field.
func (o *EditBackupScheduleParams) SetIncrementalBackupFrequencyTimeUnit(v string) {
	o.IncrementalBackupFrequencyTimeUnit = &v
}

// GetRunImmediateBackupOnResume returns the RunImmediateBackupOnResume field value if set, zero value otherwise.
func (o *EditBackupScheduleParams) GetRunImmediateBackupOnResume() bool {
	if o == nil || o.RunImmediateBackupOnResume == nil {
		var ret bool
		return ret
	}
	return *o.RunImmediateBackupOnResume
}

// GetRunImmediateBackupOnResumeOk returns a tuple with the RunImmediateBackupOnResume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditBackupScheduleParams) GetRunImmediateBackupOnResumeOk() (*bool, bool) {
	if o == nil || o.RunImmediateBackupOnResume == nil {
		return nil, false
	}
	return o.RunImmediateBackupOnResume, true
}

// HasRunImmediateBackupOnResume returns a boolean if a field has been set.
func (o *EditBackupScheduleParams) HasRunImmediateBackupOnResume() bool {
	if o != nil && o.RunImmediateBackupOnResume != nil {
		return true
	}

	return false
}

// SetRunImmediateBackupOnResume gets a reference to the given bool and assigns it to the RunImmediateBackupOnResume field.
func (o *EditBackupScheduleParams) SetRunImmediateBackupOnResume(v bool) {
	o.RunImmediateBackupOnResume = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *EditBackupScheduleParams) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditBackupScheduleParams) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *EditBackupScheduleParams) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *EditBackupScheduleParams) SetStatus(v string) {
	o.Status = &v
}

// GetTimeBeforeDelete returns the TimeBeforeDelete field value if set, zero value otherwise.
func (o *EditBackupScheduleParams) GetTimeBeforeDelete() int64 {
	if o == nil || o.TimeBeforeDelete == nil {
		var ret int64
		return ret
	}
	return *o.TimeBeforeDelete
}

// GetTimeBeforeDeleteOk returns a tuple with the TimeBeforeDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditBackupScheduleParams) GetTimeBeforeDeleteOk() (*int64, bool) {
	if o == nil || o.TimeBeforeDelete == nil {
		return nil, false
	}
	return o.TimeBeforeDelete, true
}

// HasTimeBeforeDelete returns a boolean if a field has been set.
func (o *EditBackupScheduleParams) HasTimeBeforeDelete() bool {
	if o != nil && o.TimeBeforeDelete != nil {
		return true
	}

	return false
}

// SetTimeBeforeDelete gets a reference to the given int64 and assigns it to the TimeBeforeDelete field.
func (o *EditBackupScheduleParams) SetTimeBeforeDelete(v int64) {
	o.TimeBeforeDelete = &v
}

func (o EditBackupScheduleParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CronExpression != nil {
		toSerialize["cronExpression"] = o.CronExpression
	}
	if o.Frequency != nil {
		toSerialize["frequency"] = o.Frequency
	}
	if o.FrequencyTimeUnit != nil {
		toSerialize["frequencyTimeUnit"] = o.FrequencyTimeUnit
	}
	if o.IncrementalBackupFrequency != nil {
		toSerialize["incrementalBackupFrequency"] = o.IncrementalBackupFrequency
	}
	if o.IncrementalBackupFrequencyTimeUnit != nil {
		toSerialize["incrementalBackupFrequencyTimeUnit"] = o.IncrementalBackupFrequencyTimeUnit
	}
	if o.RunImmediateBackupOnResume != nil {
		toSerialize["runImmediateBackupOnResume"] = o.RunImmediateBackupOnResume
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.TimeBeforeDelete != nil {
		toSerialize["timeBeforeDelete"] = o.TimeBeforeDelete
	}
	return json.Marshal(toSerialize)
}

type NullableEditBackupScheduleParams struct {
	value *EditBackupScheduleParams
	isSet bool
}

func (v NullableEditBackupScheduleParams) Get() *EditBackupScheduleParams {
	return v.value
}

func (v *NullableEditBackupScheduleParams) Set(val *EditBackupScheduleParams) {
	v.value = val
	v.isSet = true
}

func (v NullableEditBackupScheduleParams) IsSet() bool {
	return v.isSet
}

func (v *NullableEditBackupScheduleParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditBackupScheduleParams(val *EditBackupScheduleParams) *NullableEditBackupScheduleParams {
	return &NullableEditBackupScheduleParams{value: val, isSet: true}
}

func (v NullableEditBackupScheduleParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditBackupScheduleParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


