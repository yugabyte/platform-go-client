/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
	"time"
)

// SupportBundleFormData Support bundle form metadata
type SupportBundleFormData struct {
	// List of components to be included in the support bundle
	Components []string `json:"components"`
	// End date to filter logs till
	EndDate time.Time `json:"endDate"`
	// Max size in bytes of the recent collected cores (if any)
	MaxCoreFileSize *int64 `json:"maxCoreFileSize,omitempty"`
	// Max number of the most recent cores to collect (if any)
	MaxNumRecentCores *int32 `json:"maxNumRecentCores,omitempty"`
	// Start date to filter logs from
	StartDate time.Time `json:"startDate"`
}

// NewSupportBundleFormData instantiates a new SupportBundleFormData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSupportBundleFormData(components []string, endDate time.Time, startDate time.Time) *SupportBundleFormData {
	this := SupportBundleFormData{}
	this.Components = components
	this.EndDate = endDate
	this.StartDate = startDate
	return &this
}

// NewSupportBundleFormDataWithDefaults instantiates a new SupportBundleFormData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSupportBundleFormDataWithDefaults() *SupportBundleFormData {
	this := SupportBundleFormData{}
	return &this
}

// GetComponents returns the Components field value
func (o *SupportBundleFormData) GetComponents() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Components
}

// GetComponentsOk returns a tuple with the Components field value
// and a boolean to check if the value has been set.
func (o *SupportBundleFormData) GetComponentsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Components, true
}

// SetComponents sets field value
func (o *SupportBundleFormData) SetComponents(v []string) {
	o.Components = v
}

// GetEndDate returns the EndDate field value
func (o *SupportBundleFormData) GetEndDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value
// and a boolean to check if the value has been set.
func (o *SupportBundleFormData) GetEndDateOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EndDate, true
}

// SetEndDate sets field value
func (o *SupportBundleFormData) SetEndDate(v time.Time) {
	o.EndDate = v
}

// GetMaxCoreFileSize returns the MaxCoreFileSize field value if set, zero value otherwise.
func (o *SupportBundleFormData) GetMaxCoreFileSize() int64 {
	if o == nil || o.MaxCoreFileSize == nil {
		var ret int64
		return ret
	}
	return *o.MaxCoreFileSize
}

// GetMaxCoreFileSizeOk returns a tuple with the MaxCoreFileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportBundleFormData) GetMaxCoreFileSizeOk() (*int64, bool) {
	if o == nil || o.MaxCoreFileSize == nil {
		return nil, false
	}
	return o.MaxCoreFileSize, true
}

// HasMaxCoreFileSize returns a boolean if a field has been set.
func (o *SupportBundleFormData) HasMaxCoreFileSize() bool {
	if o != nil && o.MaxCoreFileSize != nil {
		return true
	}

	return false
}

// SetMaxCoreFileSize gets a reference to the given int64 and assigns it to the MaxCoreFileSize field.
func (o *SupportBundleFormData) SetMaxCoreFileSize(v int64) {
	o.MaxCoreFileSize = &v
}

// GetMaxNumRecentCores returns the MaxNumRecentCores field value if set, zero value otherwise.
func (o *SupportBundleFormData) GetMaxNumRecentCores() int32 {
	if o == nil || o.MaxNumRecentCores == nil {
		var ret int32
		return ret
	}
	return *o.MaxNumRecentCores
}

// GetMaxNumRecentCoresOk returns a tuple with the MaxNumRecentCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportBundleFormData) GetMaxNumRecentCoresOk() (*int32, bool) {
	if o == nil || o.MaxNumRecentCores == nil {
		return nil, false
	}
	return o.MaxNumRecentCores, true
}

// HasMaxNumRecentCores returns a boolean if a field has been set.
func (o *SupportBundleFormData) HasMaxNumRecentCores() bool {
	if o != nil && o.MaxNumRecentCores != nil {
		return true
	}

	return false
}

// SetMaxNumRecentCores gets a reference to the given int32 and assigns it to the MaxNumRecentCores field.
func (o *SupportBundleFormData) SetMaxNumRecentCores(v int32) {
	o.MaxNumRecentCores = &v
}

// GetStartDate returns the StartDate field value
func (o *SupportBundleFormData) GetStartDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *SupportBundleFormData) GetStartDateOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *SupportBundleFormData) SetStartDate(v time.Time) {
	o.StartDate = v
}

func (o SupportBundleFormData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["components"] = o.Components
	}
	if true {
		toSerialize["endDate"] = o.EndDate
	}
	if o.MaxCoreFileSize != nil {
		toSerialize["maxCoreFileSize"] = o.MaxCoreFileSize
	}
	if o.MaxNumRecentCores != nil {
		toSerialize["maxNumRecentCores"] = o.MaxNumRecentCores
	}
	if true {
		toSerialize["startDate"] = o.StartDate
	}
	return json.Marshal(toSerialize)
}

type NullableSupportBundleFormData struct {
	value *SupportBundleFormData
	isSet bool
}

func (v NullableSupportBundleFormData) Get() *SupportBundleFormData {
	return v.value
}

func (v *NullableSupportBundleFormData) Set(val *SupportBundleFormData) {
	v.value = val
	v.isSet = true
}

func (v NullableSupportBundleFormData) IsSet() bool {
	return v.isSet
}

func (v *NullableSupportBundleFormData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSupportBundleFormData(val *SupportBundleFormData) *NullableSupportBundleFormData {
	return &NullableSupportBundleFormData{value: val, isSet: true}
}

func (v NullableSupportBundleFormData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSupportBundleFormData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


