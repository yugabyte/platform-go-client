/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// SoftwareUpgradeInfoRequest Software upgrade info request
type SoftwareUpgradeInfoRequest struct {
	// WARNING: This is a preview API that could change. DB version
	YbSoftwareVersion string `json:"ybSoftwareVersion"`
}

// NewSoftwareUpgradeInfoRequest instantiates a new SoftwareUpgradeInfoRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSoftwareUpgradeInfoRequest(ybSoftwareVersion string) *SoftwareUpgradeInfoRequest {
	this := SoftwareUpgradeInfoRequest{}
	this.YbSoftwareVersion = ybSoftwareVersion
	return &this
}

// NewSoftwareUpgradeInfoRequestWithDefaults instantiates a new SoftwareUpgradeInfoRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSoftwareUpgradeInfoRequestWithDefaults() *SoftwareUpgradeInfoRequest {
	this := SoftwareUpgradeInfoRequest{}
	return &this
}

// GetYbSoftwareVersion returns the YbSoftwareVersion field value
func (o *SoftwareUpgradeInfoRequest) GetYbSoftwareVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.YbSoftwareVersion
}

// GetYbSoftwareVersionOk returns a tuple with the YbSoftwareVersion field value
// and a boolean to check if the value has been set.
func (o *SoftwareUpgradeInfoRequest) GetYbSoftwareVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.YbSoftwareVersion, true
}

// SetYbSoftwareVersion sets field value
func (o *SoftwareUpgradeInfoRequest) SetYbSoftwareVersion(v string) {
	o.YbSoftwareVersion = v
}

func (o SoftwareUpgradeInfoRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ybSoftwareVersion"] = o.YbSoftwareVersion
	}
	return json.Marshal(toSerialize)
}

type NullableSoftwareUpgradeInfoRequest struct {
	value *SoftwareUpgradeInfoRequest
	isSet bool
}

func (v NullableSoftwareUpgradeInfoRequest) Get() *SoftwareUpgradeInfoRequest {
	return v.value
}

func (v *NullableSoftwareUpgradeInfoRequest) Set(val *SoftwareUpgradeInfoRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSoftwareUpgradeInfoRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSoftwareUpgradeInfoRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSoftwareUpgradeInfoRequest(val *SoftwareUpgradeInfoRequest) *NullableSoftwareUpgradeInfoRequest {
	return &NullableSoftwareUpgradeInfoRequest{value: val, isSet: true}
}

func (v NullableSoftwareUpgradeInfoRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSoftwareUpgradeInfoRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


