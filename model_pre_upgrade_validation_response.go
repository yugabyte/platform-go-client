/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// PreUpgradeValidationResponse Upgrade Validation Response
type PreUpgradeValidationResponse struct {
	// WARNING: This is a preview API that could change. List of errors that occurred during validation
	Errors *[]string `json:"errors,omitempty"`
	// WARNING: This is a preview API that could change. Indicates whether all the checks passed
	Success *bool `json:"success,omitempty"`
}

// NewPreUpgradeValidationResponse instantiates a new PreUpgradeValidationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPreUpgradeValidationResponse() *PreUpgradeValidationResponse {
	this := PreUpgradeValidationResponse{}
	return &this
}

// NewPreUpgradeValidationResponseWithDefaults instantiates a new PreUpgradeValidationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPreUpgradeValidationResponseWithDefaults() *PreUpgradeValidationResponse {
	this := PreUpgradeValidationResponse{}
	return &this
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *PreUpgradeValidationResponse) GetErrors() []string {
	if o == nil || o.Errors == nil {
		var ret []string
		return ret
	}
	return *o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreUpgradeValidationResponse) GetErrorsOk() (*[]string, bool) {
	if o == nil || o.Errors == nil {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *PreUpgradeValidationResponse) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []string and assigns it to the Errors field.
func (o *PreUpgradeValidationResponse) SetErrors(v []string) {
	o.Errors = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *PreUpgradeValidationResponse) GetSuccess() bool {
	if o == nil || o.Success == nil {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreUpgradeValidationResponse) GetSuccessOk() (*bool, bool) {
	if o == nil || o.Success == nil {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *PreUpgradeValidationResponse) HasSuccess() bool {
	if o != nil && o.Success != nil {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *PreUpgradeValidationResponse) SetSuccess(v bool) {
	o.Success = &v
}

func (o PreUpgradeValidationResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	if o.Success != nil {
		toSerialize["success"] = o.Success
	}
	return json.Marshal(toSerialize)
}

type NullablePreUpgradeValidationResponse struct {
	value *PreUpgradeValidationResponse
	isSet bool
}

func (v NullablePreUpgradeValidationResponse) Get() *PreUpgradeValidationResponse {
	return v.value
}

func (v *NullablePreUpgradeValidationResponse) Set(val *PreUpgradeValidationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePreUpgradeValidationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePreUpgradeValidationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePreUpgradeValidationResponse(val *PreUpgradeValidationResponse) *NullablePreUpgradeValidationResponse {
	return &NullablePreUpgradeValidationResponse{value: val, isSet: true}
}

func (v NullablePreUpgradeValidationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePreUpgradeValidationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


