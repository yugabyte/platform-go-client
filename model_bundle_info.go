/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// BundleInfo struct for BundleInfo
type BundleInfo struct {
	// sshPortOverride for the bundle. <b style=\"color:#ff0000\">Deprecated since YBA version 2.20.3.0.</b> Use imageBundles.details.sshUser instead.
	SshPortOverride *int32 `json:"sshPortOverride,omitempty"`
	// sshUserOverride for the bundle. <b style=\"color:#ff0000\">Deprecated since YBA version 2.20.3.0.</b> Use imageBundles.details.sshUser instead.
	SshUserOverride *string `json:"sshUserOverride,omitempty"`
	YbImage *string `json:"ybImage,omitempty"`
}

// NewBundleInfo instantiates a new BundleInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBundleInfo() *BundleInfo {
	this := BundleInfo{}
	return &this
}

// NewBundleInfoWithDefaults instantiates a new BundleInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBundleInfoWithDefaults() *BundleInfo {
	this := BundleInfo{}
	return &this
}

// GetSshPortOverride returns the SshPortOverride field value if set, zero value otherwise.
func (o *BundleInfo) GetSshPortOverride() int32 {
	if o == nil || o.SshPortOverride == nil {
		var ret int32
		return ret
	}
	return *o.SshPortOverride
}

// GetSshPortOverrideOk returns a tuple with the SshPortOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleInfo) GetSshPortOverrideOk() (*int32, bool) {
	if o == nil || o.SshPortOverride == nil {
		return nil, false
	}
	return o.SshPortOverride, true
}

// HasSshPortOverride returns a boolean if a field has been set.
func (o *BundleInfo) HasSshPortOverride() bool {
	if o != nil && o.SshPortOverride != nil {
		return true
	}

	return false
}

// SetSshPortOverride gets a reference to the given int32 and assigns it to the SshPortOverride field.
func (o *BundleInfo) SetSshPortOverride(v int32) {
	o.SshPortOverride = &v
}

// GetSshUserOverride returns the SshUserOverride field value if set, zero value otherwise.
func (o *BundleInfo) GetSshUserOverride() string {
	if o == nil || o.SshUserOverride == nil {
		var ret string
		return ret
	}
	return *o.SshUserOverride
}

// GetSshUserOverrideOk returns a tuple with the SshUserOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleInfo) GetSshUserOverrideOk() (*string, bool) {
	if o == nil || o.SshUserOverride == nil {
		return nil, false
	}
	return o.SshUserOverride, true
}

// HasSshUserOverride returns a boolean if a field has been set.
func (o *BundleInfo) HasSshUserOverride() bool {
	if o != nil && o.SshUserOverride != nil {
		return true
	}

	return false
}

// SetSshUserOverride gets a reference to the given string and assigns it to the SshUserOverride field.
func (o *BundleInfo) SetSshUserOverride(v string) {
	o.SshUserOverride = &v
}

// GetYbImage returns the YbImage field value if set, zero value otherwise.
func (o *BundleInfo) GetYbImage() string {
	if o == nil || o.YbImage == nil {
		var ret string
		return ret
	}
	return *o.YbImage
}

// GetYbImageOk returns a tuple with the YbImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleInfo) GetYbImageOk() (*string, bool) {
	if o == nil || o.YbImage == nil {
		return nil, false
	}
	return o.YbImage, true
}

// HasYbImage returns a boolean if a field has been set.
func (o *BundleInfo) HasYbImage() bool {
	if o != nil && o.YbImage != nil {
		return true
	}

	return false
}

// SetYbImage gets a reference to the given string and assigns it to the YbImage field.
func (o *BundleInfo) SetYbImage(v string) {
	o.YbImage = &v
}

func (o BundleInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SshPortOverride != nil {
		toSerialize["sshPortOverride"] = o.SshPortOverride
	}
	if o.SshUserOverride != nil {
		toSerialize["sshUserOverride"] = o.SshUserOverride
	}
	if o.YbImage != nil {
		toSerialize["ybImage"] = o.YbImage
	}
	return json.Marshal(toSerialize)
}

type NullableBundleInfo struct {
	value *BundleInfo
	isSet bool
}

func (v NullableBundleInfo) Get() *BundleInfo {
	return v.value
}

func (v *NullableBundleInfo) Set(val *BundleInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBundleInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBundleInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBundleInfo(val *BundleInfo) *NullableBundleInfo {
	return &NullableBundleInfo{value: val, isSet: true}
}

func (v NullableBundleInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBundleInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


