/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// PrevYBSoftwareConfig struct for PrevYBSoftwareConfig
type PrevYBSoftwareConfig struct {
	AutoFlagConfigVersion *int32 `json:"autoFlagConfigVersion,omitempty"`
	SoftwareVersion *string `json:"softwareVersion,omitempty"`
	TargetUpgradeSoftwareVersion *string `json:"targetUpgradeSoftwareVersion,omitempty"`
}

// NewPrevYBSoftwareConfig instantiates a new PrevYBSoftwareConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrevYBSoftwareConfig() *PrevYBSoftwareConfig {
	this := PrevYBSoftwareConfig{}
	return &this
}

// NewPrevYBSoftwareConfigWithDefaults instantiates a new PrevYBSoftwareConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrevYBSoftwareConfigWithDefaults() *PrevYBSoftwareConfig {
	this := PrevYBSoftwareConfig{}
	return &this
}

// GetAutoFlagConfigVersion returns the AutoFlagConfigVersion field value if set, zero value otherwise.
func (o *PrevYBSoftwareConfig) GetAutoFlagConfigVersion() int32 {
	if o == nil || o.AutoFlagConfigVersion == nil {
		var ret int32
		return ret
	}
	return *o.AutoFlagConfigVersion
}

// GetAutoFlagConfigVersionOk returns a tuple with the AutoFlagConfigVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrevYBSoftwareConfig) GetAutoFlagConfigVersionOk() (*int32, bool) {
	if o == nil || o.AutoFlagConfigVersion == nil {
		return nil, false
	}
	return o.AutoFlagConfigVersion, true
}

// HasAutoFlagConfigVersion returns a boolean if a field has been set.
func (o *PrevYBSoftwareConfig) HasAutoFlagConfigVersion() bool {
	if o != nil && o.AutoFlagConfigVersion != nil {
		return true
	}

	return false
}

// SetAutoFlagConfigVersion gets a reference to the given int32 and assigns it to the AutoFlagConfigVersion field.
func (o *PrevYBSoftwareConfig) SetAutoFlagConfigVersion(v int32) {
	o.AutoFlagConfigVersion = &v
}

// GetSoftwareVersion returns the SoftwareVersion field value if set, zero value otherwise.
func (o *PrevYBSoftwareConfig) GetSoftwareVersion() string {
	if o == nil || o.SoftwareVersion == nil {
		var ret string
		return ret
	}
	return *o.SoftwareVersion
}

// GetSoftwareVersionOk returns a tuple with the SoftwareVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrevYBSoftwareConfig) GetSoftwareVersionOk() (*string, bool) {
	if o == nil || o.SoftwareVersion == nil {
		return nil, false
	}
	return o.SoftwareVersion, true
}

// HasSoftwareVersion returns a boolean if a field has been set.
func (o *PrevYBSoftwareConfig) HasSoftwareVersion() bool {
	if o != nil && o.SoftwareVersion != nil {
		return true
	}

	return false
}

// SetSoftwareVersion gets a reference to the given string and assigns it to the SoftwareVersion field.
func (o *PrevYBSoftwareConfig) SetSoftwareVersion(v string) {
	o.SoftwareVersion = &v
}

// GetTargetUpgradeSoftwareVersion returns the TargetUpgradeSoftwareVersion field value if set, zero value otherwise.
func (o *PrevYBSoftwareConfig) GetTargetUpgradeSoftwareVersion() string {
	if o == nil || o.TargetUpgradeSoftwareVersion == nil {
		var ret string
		return ret
	}
	return *o.TargetUpgradeSoftwareVersion
}

// GetTargetUpgradeSoftwareVersionOk returns a tuple with the TargetUpgradeSoftwareVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrevYBSoftwareConfig) GetTargetUpgradeSoftwareVersionOk() (*string, bool) {
	if o == nil || o.TargetUpgradeSoftwareVersion == nil {
		return nil, false
	}
	return o.TargetUpgradeSoftwareVersion, true
}

// HasTargetUpgradeSoftwareVersion returns a boolean if a field has been set.
func (o *PrevYBSoftwareConfig) HasTargetUpgradeSoftwareVersion() bool {
	if o != nil && o.TargetUpgradeSoftwareVersion != nil {
		return true
	}

	return false
}

// SetTargetUpgradeSoftwareVersion gets a reference to the given string and assigns it to the TargetUpgradeSoftwareVersion field.
func (o *PrevYBSoftwareConfig) SetTargetUpgradeSoftwareVersion(v string) {
	o.TargetUpgradeSoftwareVersion = &v
}

func (o PrevYBSoftwareConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AutoFlagConfigVersion != nil {
		toSerialize["autoFlagConfigVersion"] = o.AutoFlagConfigVersion
	}
	if o.SoftwareVersion != nil {
		toSerialize["softwareVersion"] = o.SoftwareVersion
	}
	if o.TargetUpgradeSoftwareVersion != nil {
		toSerialize["targetUpgradeSoftwareVersion"] = o.TargetUpgradeSoftwareVersion
	}
	return json.Marshal(toSerialize)
}

type NullablePrevYBSoftwareConfig struct {
	value *PrevYBSoftwareConfig
	isSet bool
}

func (v NullablePrevYBSoftwareConfig) Get() *PrevYBSoftwareConfig {
	return v.value
}

func (v *NullablePrevYBSoftwareConfig) Set(val *PrevYBSoftwareConfig) {
	v.value = val
	v.isSet = true
}

func (v NullablePrevYBSoftwareConfig) IsSet() bool {
	return v.isSet
}

func (v *NullablePrevYBSoftwareConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrevYBSoftwareConfig(val *PrevYBSoftwareConfig) *NullablePrevYBSoftwareConfig {
	return &NullablePrevYBSoftwareConfig{value: val, isSet: true}
}

func (v NullablePrevYBSoftwareConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrevYBSoftwareConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


