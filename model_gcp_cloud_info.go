/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// GCPCloudInfo struct for GCPCloudInfo
type GCPCloudInfo struct {
	DestVpcId *string `json:"destVpcId,omitempty"`
	GceApplicationCredentials *map[string]string `json:"gceApplicationCredentials,omitempty"`
	GceApplicationCredentialsPath *string `json:"gceApplicationCredentialsPath,omitempty"`
	GceProject *string `json:"gceProject,omitempty"`
	HostVpcId *string `json:"hostVpcId,omitempty"`
	SharedVPCProject *string `json:"sharedVPCProject,omitempty"`
	UseHostCredentials *bool `json:"useHostCredentials,omitempty"`
	UseHostVPC *bool `json:"useHostVPC,omitempty"`
	// New/Existing VPC for provider creation
	VpcType *string `json:"vpcType,omitempty"`
	YbFirewallTags *string `json:"ybFirewallTags,omitempty"`
}

// NewGCPCloudInfo instantiates a new GCPCloudInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGCPCloudInfo() *GCPCloudInfo {
	this := GCPCloudInfo{}
	return &this
}

// NewGCPCloudInfoWithDefaults instantiates a new GCPCloudInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGCPCloudInfoWithDefaults() *GCPCloudInfo {
	this := GCPCloudInfo{}
	return &this
}

// GetDestVpcId returns the DestVpcId field value if set, zero value otherwise.
func (o *GCPCloudInfo) GetDestVpcId() string {
	if o == nil || o.DestVpcId == nil {
		var ret string
		return ret
	}
	return *o.DestVpcId
}

// GetDestVpcIdOk returns a tuple with the DestVpcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GCPCloudInfo) GetDestVpcIdOk() (*string, bool) {
	if o == nil || o.DestVpcId == nil {
		return nil, false
	}
	return o.DestVpcId, true
}

// HasDestVpcId returns a boolean if a field has been set.
func (o *GCPCloudInfo) HasDestVpcId() bool {
	if o != nil && o.DestVpcId != nil {
		return true
	}

	return false
}

// SetDestVpcId gets a reference to the given string and assigns it to the DestVpcId field.
func (o *GCPCloudInfo) SetDestVpcId(v string) {
	o.DestVpcId = &v
}

// GetGceApplicationCredentials returns the GceApplicationCredentials field value if set, zero value otherwise.
func (o *GCPCloudInfo) GetGceApplicationCredentials() map[string]string {
	if o == nil || o.GceApplicationCredentials == nil {
		var ret map[string]string
		return ret
	}
	return *o.GceApplicationCredentials
}

// GetGceApplicationCredentialsOk returns a tuple with the GceApplicationCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GCPCloudInfo) GetGceApplicationCredentialsOk() (*map[string]string, bool) {
	if o == nil || o.GceApplicationCredentials == nil {
		return nil, false
	}
	return o.GceApplicationCredentials, true
}

// HasGceApplicationCredentials returns a boolean if a field has been set.
func (o *GCPCloudInfo) HasGceApplicationCredentials() bool {
	if o != nil && o.GceApplicationCredentials != nil {
		return true
	}

	return false
}

// SetGceApplicationCredentials gets a reference to the given map[string]string and assigns it to the GceApplicationCredentials field.
func (o *GCPCloudInfo) SetGceApplicationCredentials(v map[string]string) {
	o.GceApplicationCredentials = &v
}

// GetGceApplicationCredentialsPath returns the GceApplicationCredentialsPath field value if set, zero value otherwise.
func (o *GCPCloudInfo) GetGceApplicationCredentialsPath() string {
	if o == nil || o.GceApplicationCredentialsPath == nil {
		var ret string
		return ret
	}
	return *o.GceApplicationCredentialsPath
}

// GetGceApplicationCredentialsPathOk returns a tuple with the GceApplicationCredentialsPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GCPCloudInfo) GetGceApplicationCredentialsPathOk() (*string, bool) {
	if o == nil || o.GceApplicationCredentialsPath == nil {
		return nil, false
	}
	return o.GceApplicationCredentialsPath, true
}

// HasGceApplicationCredentialsPath returns a boolean if a field has been set.
func (o *GCPCloudInfo) HasGceApplicationCredentialsPath() bool {
	if o != nil && o.GceApplicationCredentialsPath != nil {
		return true
	}

	return false
}

// SetGceApplicationCredentialsPath gets a reference to the given string and assigns it to the GceApplicationCredentialsPath field.
func (o *GCPCloudInfo) SetGceApplicationCredentialsPath(v string) {
	o.GceApplicationCredentialsPath = &v
}

// GetGceProject returns the GceProject field value if set, zero value otherwise.
func (o *GCPCloudInfo) GetGceProject() string {
	if o == nil || o.GceProject == nil {
		var ret string
		return ret
	}
	return *o.GceProject
}

// GetGceProjectOk returns a tuple with the GceProject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GCPCloudInfo) GetGceProjectOk() (*string, bool) {
	if o == nil || o.GceProject == nil {
		return nil, false
	}
	return o.GceProject, true
}

// HasGceProject returns a boolean if a field has been set.
func (o *GCPCloudInfo) HasGceProject() bool {
	if o != nil && o.GceProject != nil {
		return true
	}

	return false
}

// SetGceProject gets a reference to the given string and assigns it to the GceProject field.
func (o *GCPCloudInfo) SetGceProject(v string) {
	o.GceProject = &v
}

// GetHostVpcId returns the HostVpcId field value if set, zero value otherwise.
func (o *GCPCloudInfo) GetHostVpcId() string {
	if o == nil || o.HostVpcId == nil {
		var ret string
		return ret
	}
	return *o.HostVpcId
}

// GetHostVpcIdOk returns a tuple with the HostVpcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GCPCloudInfo) GetHostVpcIdOk() (*string, bool) {
	if o == nil || o.HostVpcId == nil {
		return nil, false
	}
	return o.HostVpcId, true
}

// HasHostVpcId returns a boolean if a field has been set.
func (o *GCPCloudInfo) HasHostVpcId() bool {
	if o != nil && o.HostVpcId != nil {
		return true
	}

	return false
}

// SetHostVpcId gets a reference to the given string and assigns it to the HostVpcId field.
func (o *GCPCloudInfo) SetHostVpcId(v string) {
	o.HostVpcId = &v
}

// GetSharedVPCProject returns the SharedVPCProject field value if set, zero value otherwise.
func (o *GCPCloudInfo) GetSharedVPCProject() string {
	if o == nil || o.SharedVPCProject == nil {
		var ret string
		return ret
	}
	return *o.SharedVPCProject
}

// GetSharedVPCProjectOk returns a tuple with the SharedVPCProject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GCPCloudInfo) GetSharedVPCProjectOk() (*string, bool) {
	if o == nil || o.SharedVPCProject == nil {
		return nil, false
	}
	return o.SharedVPCProject, true
}

// HasSharedVPCProject returns a boolean if a field has been set.
func (o *GCPCloudInfo) HasSharedVPCProject() bool {
	if o != nil && o.SharedVPCProject != nil {
		return true
	}

	return false
}

// SetSharedVPCProject gets a reference to the given string and assigns it to the SharedVPCProject field.
func (o *GCPCloudInfo) SetSharedVPCProject(v string) {
	o.SharedVPCProject = &v
}

// GetUseHostCredentials returns the UseHostCredentials field value if set, zero value otherwise.
func (o *GCPCloudInfo) GetUseHostCredentials() bool {
	if o == nil || o.UseHostCredentials == nil {
		var ret bool
		return ret
	}
	return *o.UseHostCredentials
}

// GetUseHostCredentialsOk returns a tuple with the UseHostCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GCPCloudInfo) GetUseHostCredentialsOk() (*bool, bool) {
	if o == nil || o.UseHostCredentials == nil {
		return nil, false
	}
	return o.UseHostCredentials, true
}

// HasUseHostCredentials returns a boolean if a field has been set.
func (o *GCPCloudInfo) HasUseHostCredentials() bool {
	if o != nil && o.UseHostCredentials != nil {
		return true
	}

	return false
}

// SetUseHostCredentials gets a reference to the given bool and assigns it to the UseHostCredentials field.
func (o *GCPCloudInfo) SetUseHostCredentials(v bool) {
	o.UseHostCredentials = &v
}

// GetUseHostVPC returns the UseHostVPC field value if set, zero value otherwise.
func (o *GCPCloudInfo) GetUseHostVPC() bool {
	if o == nil || o.UseHostVPC == nil {
		var ret bool
		return ret
	}
	return *o.UseHostVPC
}

// GetUseHostVPCOk returns a tuple with the UseHostVPC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GCPCloudInfo) GetUseHostVPCOk() (*bool, bool) {
	if o == nil || o.UseHostVPC == nil {
		return nil, false
	}
	return o.UseHostVPC, true
}

// HasUseHostVPC returns a boolean if a field has been set.
func (o *GCPCloudInfo) HasUseHostVPC() bool {
	if o != nil && o.UseHostVPC != nil {
		return true
	}

	return false
}

// SetUseHostVPC gets a reference to the given bool and assigns it to the UseHostVPC field.
func (o *GCPCloudInfo) SetUseHostVPC(v bool) {
	o.UseHostVPC = &v
}

// GetVpcType returns the VpcType field value if set, zero value otherwise.
func (o *GCPCloudInfo) GetVpcType() string {
	if o == nil || o.VpcType == nil {
		var ret string
		return ret
	}
	return *o.VpcType
}

// GetVpcTypeOk returns a tuple with the VpcType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GCPCloudInfo) GetVpcTypeOk() (*string, bool) {
	if o == nil || o.VpcType == nil {
		return nil, false
	}
	return o.VpcType, true
}

// HasVpcType returns a boolean if a field has been set.
func (o *GCPCloudInfo) HasVpcType() bool {
	if o != nil && o.VpcType != nil {
		return true
	}

	return false
}

// SetVpcType gets a reference to the given string and assigns it to the VpcType field.
func (o *GCPCloudInfo) SetVpcType(v string) {
	o.VpcType = &v
}

// GetYbFirewallTags returns the YbFirewallTags field value if set, zero value otherwise.
func (o *GCPCloudInfo) GetYbFirewallTags() string {
	if o == nil || o.YbFirewallTags == nil {
		var ret string
		return ret
	}
	return *o.YbFirewallTags
}

// GetYbFirewallTagsOk returns a tuple with the YbFirewallTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GCPCloudInfo) GetYbFirewallTagsOk() (*string, bool) {
	if o == nil || o.YbFirewallTags == nil {
		return nil, false
	}
	return o.YbFirewallTags, true
}

// HasYbFirewallTags returns a boolean if a field has been set.
func (o *GCPCloudInfo) HasYbFirewallTags() bool {
	if o != nil && o.YbFirewallTags != nil {
		return true
	}

	return false
}

// SetYbFirewallTags gets a reference to the given string and assigns it to the YbFirewallTags field.
func (o *GCPCloudInfo) SetYbFirewallTags(v string) {
	o.YbFirewallTags = &v
}

func (o GCPCloudInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DestVpcId != nil {
		toSerialize["destVpcId"] = o.DestVpcId
	}
	if o.GceApplicationCredentials != nil {
		toSerialize["gceApplicationCredentials"] = o.GceApplicationCredentials
	}
	if o.GceApplicationCredentialsPath != nil {
		toSerialize["gceApplicationCredentialsPath"] = o.GceApplicationCredentialsPath
	}
	if o.GceProject != nil {
		toSerialize["gceProject"] = o.GceProject
	}
	if o.HostVpcId != nil {
		toSerialize["hostVpcId"] = o.HostVpcId
	}
	if o.SharedVPCProject != nil {
		toSerialize["sharedVPCProject"] = o.SharedVPCProject
	}
	if o.UseHostCredentials != nil {
		toSerialize["useHostCredentials"] = o.UseHostCredentials
	}
	if o.UseHostVPC != nil {
		toSerialize["useHostVPC"] = o.UseHostVPC
	}
	if o.VpcType != nil {
		toSerialize["vpcType"] = o.VpcType
	}
	if o.YbFirewallTags != nil {
		toSerialize["ybFirewallTags"] = o.YbFirewallTags
	}
	return json.Marshal(toSerialize)
}

type NullableGCPCloudInfo struct {
	value *GCPCloudInfo
	isSet bool
}

func (v NullableGCPCloudInfo) Get() *GCPCloudInfo {
	return v.value
}

func (v *NullableGCPCloudInfo) Set(val *GCPCloudInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableGCPCloudInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableGCPCloudInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGCPCloudInfo(val *GCPCloudInfo) *NullableGCPCloudInfo {
	return &NullableGCPCloudInfo{value: val, isSet: true}
}

func (v NullableGCPCloudInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGCPCloudInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


