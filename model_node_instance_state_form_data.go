/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// NodeInstanceStateFormData struct for NodeInstanceStateFormData
type NodeInstanceStateFormData struct {
	// Target state of the node instance
	State *string `json:"state,omitempty"`
}

// NewNodeInstanceStateFormData instantiates a new NodeInstanceStateFormData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodeInstanceStateFormData() *NodeInstanceStateFormData {
	this := NodeInstanceStateFormData{}
	return &this
}

// NewNodeInstanceStateFormDataWithDefaults instantiates a new NodeInstanceStateFormData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeInstanceStateFormDataWithDefaults() *NodeInstanceStateFormData {
	this := NodeInstanceStateFormData{}
	return &this
}

// GetState returns the State field value if set, zero value otherwise.
func (o *NodeInstanceStateFormData) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeInstanceStateFormData) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *NodeInstanceStateFormData) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *NodeInstanceStateFormData) SetState(v string) {
	o.State = &v
}

func (o NodeInstanceStateFormData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableNodeInstanceStateFormData struct {
	value *NodeInstanceStateFormData
	isSet bool
}

func (v NullableNodeInstanceStateFormData) Get() *NodeInstanceStateFormData {
	return v.value
}

func (v *NullableNodeInstanceStateFormData) Set(val *NodeInstanceStateFormData) {
	v.value = val
	v.isSet = true
}

func (v NullableNodeInstanceStateFormData) IsSet() bool {
	return v.isSet
}

func (v *NullableNodeInstanceStateFormData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodeInstanceStateFormData(val *NodeInstanceStateFormData) *NullableNodeInstanceStateFormData {
	return &NullableNodeInstanceStateFormData{value: val, isSet: true}
}

func (v NullableNodeInstanceStateFormData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodeInstanceStateFormData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


