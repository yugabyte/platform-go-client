/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
)

// UserIntent struct for UserIntent
type UserIntent struct {
	AccessKeyCode *string `json:"accessKeyCode,omitempty"`
	AssignPublicIP *bool `json:"assignPublicIP,omitempty"`
	// Whether to assign static public IP
	AssignStaticPublicIP *bool `json:"assignStaticPublicIP,omitempty"`
	AwsArnString *string `json:"awsArnString,omitempty"`
	AzOverrides *map[string]string `json:"azOverrides,omitempty"`
	CgroupSize *int32 `json:"cgroupSize,omitempty"`
	DedicatedNodes *bool `json:"dedicatedNodes,omitempty"`
	DeviceInfo *DeviceInfo `json:"deviceInfo,omitempty"`
	EnableClientToNodeEncrypt *bool `json:"enableClientToNodeEncrypt,omitempty"`
	EnableExposingService *string `json:"enableExposingService,omitempty"`
	EnableIPV6 *bool `json:"enableIPV6,omitempty"`
	EnableLB *bool `json:"enableLB,omitempty"`
	EnableNodeToNodeEncrypt *bool `json:"enableNodeToNodeEncrypt,omitempty"`
	EnableVolumeEncryption *bool `json:"enableVolumeEncryption,omitempty"`
	EnableYCQL *bool `json:"enableYCQL,omitempty"`
	EnableYCQLAuth *bool `json:"enableYCQLAuth,omitempty"`
	EnableYEDIS *bool `json:"enableYEDIS,omitempty"`
	EnableYSQL *bool `json:"enableYSQL,omitempty"`
	EnableYSQLAuth *bool `json:"enableYSQLAuth,omitempty"`
	ImageBundleUUID *string `json:"imageBundleUUID,omitempty"`
	InstanceTags *map[string]string `json:"instanceTags,omitempty"`
	InstanceType *string `json:"instanceType,omitempty"`
	KubernetesOperatorVersion *int64 `json:"kubernetesOperatorVersion,omitempty"`
	MasterDeviceInfo *DeviceInfo `json:"masterDeviceInfo,omitempty"`
	// User-defined gflags for master. Deprecated since YBA version 2.18.6.0, use specificGFlags
	MasterGFlags *map[string]string `json:"masterGFlags,omitempty"`
	MasterInstanceType *string `json:"masterInstanceType,omitempty"`
	MasterK8SNodeResourceSpec *K8SNodeResourceSpec `json:"masterK8SNodeResourceSpec,omitempty"`
	NumNodes *int32 `json:"numNodes,omitempty"`
	PreferredRegion *string `json:"preferredRegion,omitempty"`
	Provider *string `json:"provider,omitempty"`
	ProviderType *string `json:"providerType,omitempty"`
	RegionList *[]string `json:"regionList,omitempty"`
	ReplicationFactor *int32 `json:"replicationFactor,omitempty"`
	SpecificGFlags *SpecificGFlags `json:"specificGFlags,omitempty"`
	SpotPrice *float64 `json:"spotPrice,omitempty"`
	// User-defined gflags for tserver. Deprecated since YBA version 2.18.6.0, use specificGFlags
	TserverGFlags *map[string]string `json:"tserverGFlags,omitempty"`
	TserverK8SNodeResourceSpec *K8SNodeResourceSpec `json:"tserverK8SNodeResourceSpec,omitempty"`
	UniverseName *string `json:"universeName,omitempty"`
	UniverseOverrides *string `json:"universeOverrides,omitempty"`
	UseHostname *bool `json:"useHostname,omitempty"`
	UseSpotInstance *bool `json:"useSpotInstance,omitempty"`
	UseSystemd *bool `json:"useSystemd,omitempty"`
	UseTimeSync *bool `json:"useTimeSync,omitempty"`
	YbSoftwareVersion *string `json:"ybSoftwareVersion,omitempty"`
	YbcFlags *map[string]string `json:"ybcFlags,omitempty"`
	YcqlPassword *string `json:"ycqlPassword,omitempty"`
	YsqlPassword *string `json:"ysqlPassword,omitempty"`
}

// NewUserIntent instantiates a new UserIntent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserIntent() *UserIntent {
	this := UserIntent{}
	return &this
}

// NewUserIntentWithDefaults instantiates a new UserIntent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserIntentWithDefaults() *UserIntent {
	this := UserIntent{}
	return &this
}

// GetAccessKeyCode returns the AccessKeyCode field value if set, zero value otherwise.
func (o *UserIntent) GetAccessKeyCode() string {
	if o == nil || o.AccessKeyCode == nil {
		var ret string
		return ret
	}
	return *o.AccessKeyCode
}

// GetAccessKeyCodeOk returns a tuple with the AccessKeyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetAccessKeyCodeOk() (*string, bool) {
	if o == nil || o.AccessKeyCode == nil {
		return nil, false
	}
	return o.AccessKeyCode, true
}

// HasAccessKeyCode returns a boolean if a field has been set.
func (o *UserIntent) HasAccessKeyCode() bool {
	if o != nil && o.AccessKeyCode != nil {
		return true
	}

	return false
}

// SetAccessKeyCode gets a reference to the given string and assigns it to the AccessKeyCode field.
func (o *UserIntent) SetAccessKeyCode(v string) {
	o.AccessKeyCode = &v
}

// GetAssignPublicIP returns the AssignPublicIP field value if set, zero value otherwise.
func (o *UserIntent) GetAssignPublicIP() bool {
	if o == nil || o.AssignPublicIP == nil {
		var ret bool
		return ret
	}
	return *o.AssignPublicIP
}

// GetAssignPublicIPOk returns a tuple with the AssignPublicIP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetAssignPublicIPOk() (*bool, bool) {
	if o == nil || o.AssignPublicIP == nil {
		return nil, false
	}
	return o.AssignPublicIP, true
}

// HasAssignPublicIP returns a boolean if a field has been set.
func (o *UserIntent) HasAssignPublicIP() bool {
	if o != nil && o.AssignPublicIP != nil {
		return true
	}

	return false
}

// SetAssignPublicIP gets a reference to the given bool and assigns it to the AssignPublicIP field.
func (o *UserIntent) SetAssignPublicIP(v bool) {
	o.AssignPublicIP = &v
}

// GetAssignStaticPublicIP returns the AssignStaticPublicIP field value if set, zero value otherwise.
func (o *UserIntent) GetAssignStaticPublicIP() bool {
	if o == nil || o.AssignStaticPublicIP == nil {
		var ret bool
		return ret
	}
	return *o.AssignStaticPublicIP
}

// GetAssignStaticPublicIPOk returns a tuple with the AssignStaticPublicIP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetAssignStaticPublicIPOk() (*bool, bool) {
	if o == nil || o.AssignStaticPublicIP == nil {
		return nil, false
	}
	return o.AssignStaticPublicIP, true
}

// HasAssignStaticPublicIP returns a boolean if a field has been set.
func (o *UserIntent) HasAssignStaticPublicIP() bool {
	if o != nil && o.AssignStaticPublicIP != nil {
		return true
	}

	return false
}

// SetAssignStaticPublicIP gets a reference to the given bool and assigns it to the AssignStaticPublicIP field.
func (o *UserIntent) SetAssignStaticPublicIP(v bool) {
	o.AssignStaticPublicIP = &v
}

// GetAwsArnString returns the AwsArnString field value if set, zero value otherwise.
func (o *UserIntent) GetAwsArnString() string {
	if o == nil || o.AwsArnString == nil {
		var ret string
		return ret
	}
	return *o.AwsArnString
}

// GetAwsArnStringOk returns a tuple with the AwsArnString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetAwsArnStringOk() (*string, bool) {
	if o == nil || o.AwsArnString == nil {
		return nil, false
	}
	return o.AwsArnString, true
}

// HasAwsArnString returns a boolean if a field has been set.
func (o *UserIntent) HasAwsArnString() bool {
	if o != nil && o.AwsArnString != nil {
		return true
	}

	return false
}

// SetAwsArnString gets a reference to the given string and assigns it to the AwsArnString field.
func (o *UserIntent) SetAwsArnString(v string) {
	o.AwsArnString = &v
}

// GetAzOverrides returns the AzOverrides field value if set, zero value otherwise.
func (o *UserIntent) GetAzOverrides() map[string]string {
	if o == nil || o.AzOverrides == nil {
		var ret map[string]string
		return ret
	}
	return *o.AzOverrides
}

// GetAzOverridesOk returns a tuple with the AzOverrides field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetAzOverridesOk() (*map[string]string, bool) {
	if o == nil || o.AzOverrides == nil {
		return nil, false
	}
	return o.AzOverrides, true
}

// HasAzOverrides returns a boolean if a field has been set.
func (o *UserIntent) HasAzOverrides() bool {
	if o != nil && o.AzOverrides != nil {
		return true
	}

	return false
}

// SetAzOverrides gets a reference to the given map[string]string and assigns it to the AzOverrides field.
func (o *UserIntent) SetAzOverrides(v map[string]string) {
	o.AzOverrides = &v
}

// GetCgroupSize returns the CgroupSize field value if set, zero value otherwise.
func (o *UserIntent) GetCgroupSize() int32 {
	if o == nil || o.CgroupSize == nil {
		var ret int32
		return ret
	}
	return *o.CgroupSize
}

// GetCgroupSizeOk returns a tuple with the CgroupSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetCgroupSizeOk() (*int32, bool) {
	if o == nil || o.CgroupSize == nil {
		return nil, false
	}
	return o.CgroupSize, true
}

// HasCgroupSize returns a boolean if a field has been set.
func (o *UserIntent) HasCgroupSize() bool {
	if o != nil && o.CgroupSize != nil {
		return true
	}

	return false
}

// SetCgroupSize gets a reference to the given int32 and assigns it to the CgroupSize field.
func (o *UserIntent) SetCgroupSize(v int32) {
	o.CgroupSize = &v
}

// GetDedicatedNodes returns the DedicatedNodes field value if set, zero value otherwise.
func (o *UserIntent) GetDedicatedNodes() bool {
	if o == nil || o.DedicatedNodes == nil {
		var ret bool
		return ret
	}
	return *o.DedicatedNodes
}

// GetDedicatedNodesOk returns a tuple with the DedicatedNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetDedicatedNodesOk() (*bool, bool) {
	if o == nil || o.DedicatedNodes == nil {
		return nil, false
	}
	return o.DedicatedNodes, true
}

// HasDedicatedNodes returns a boolean if a field has been set.
func (o *UserIntent) HasDedicatedNodes() bool {
	if o != nil && o.DedicatedNodes != nil {
		return true
	}

	return false
}

// SetDedicatedNodes gets a reference to the given bool and assigns it to the DedicatedNodes field.
func (o *UserIntent) SetDedicatedNodes(v bool) {
	o.DedicatedNodes = &v
}

// GetDeviceInfo returns the DeviceInfo field value if set, zero value otherwise.
func (o *UserIntent) GetDeviceInfo() DeviceInfo {
	if o == nil || o.DeviceInfo == nil {
		var ret DeviceInfo
		return ret
	}
	return *o.DeviceInfo
}

// GetDeviceInfoOk returns a tuple with the DeviceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetDeviceInfoOk() (*DeviceInfo, bool) {
	if o == nil || o.DeviceInfo == nil {
		return nil, false
	}
	return o.DeviceInfo, true
}

// HasDeviceInfo returns a boolean if a field has been set.
func (o *UserIntent) HasDeviceInfo() bool {
	if o != nil && o.DeviceInfo != nil {
		return true
	}

	return false
}

// SetDeviceInfo gets a reference to the given DeviceInfo and assigns it to the DeviceInfo field.
func (o *UserIntent) SetDeviceInfo(v DeviceInfo) {
	o.DeviceInfo = &v
}

// GetEnableClientToNodeEncrypt returns the EnableClientToNodeEncrypt field value if set, zero value otherwise.
func (o *UserIntent) GetEnableClientToNodeEncrypt() bool {
	if o == nil || o.EnableClientToNodeEncrypt == nil {
		var ret bool
		return ret
	}
	return *o.EnableClientToNodeEncrypt
}

// GetEnableClientToNodeEncryptOk returns a tuple with the EnableClientToNodeEncrypt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetEnableClientToNodeEncryptOk() (*bool, bool) {
	if o == nil || o.EnableClientToNodeEncrypt == nil {
		return nil, false
	}
	return o.EnableClientToNodeEncrypt, true
}

// HasEnableClientToNodeEncrypt returns a boolean if a field has been set.
func (o *UserIntent) HasEnableClientToNodeEncrypt() bool {
	if o != nil && o.EnableClientToNodeEncrypt != nil {
		return true
	}

	return false
}

// SetEnableClientToNodeEncrypt gets a reference to the given bool and assigns it to the EnableClientToNodeEncrypt field.
func (o *UserIntent) SetEnableClientToNodeEncrypt(v bool) {
	o.EnableClientToNodeEncrypt = &v
}

// GetEnableExposingService returns the EnableExposingService field value if set, zero value otherwise.
func (o *UserIntent) GetEnableExposingService() string {
	if o == nil || o.EnableExposingService == nil {
		var ret string
		return ret
	}
	return *o.EnableExposingService
}

// GetEnableExposingServiceOk returns a tuple with the EnableExposingService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetEnableExposingServiceOk() (*string, bool) {
	if o == nil || o.EnableExposingService == nil {
		return nil, false
	}
	return o.EnableExposingService, true
}

// HasEnableExposingService returns a boolean if a field has been set.
func (o *UserIntent) HasEnableExposingService() bool {
	if o != nil && o.EnableExposingService != nil {
		return true
	}

	return false
}

// SetEnableExposingService gets a reference to the given string and assigns it to the EnableExposingService field.
func (o *UserIntent) SetEnableExposingService(v string) {
	o.EnableExposingService = &v
}

// GetEnableIPV6 returns the EnableIPV6 field value if set, zero value otherwise.
func (o *UserIntent) GetEnableIPV6() bool {
	if o == nil || o.EnableIPV6 == nil {
		var ret bool
		return ret
	}
	return *o.EnableIPV6
}

// GetEnableIPV6Ok returns a tuple with the EnableIPV6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetEnableIPV6Ok() (*bool, bool) {
	if o == nil || o.EnableIPV6 == nil {
		return nil, false
	}
	return o.EnableIPV6, true
}

// HasEnableIPV6 returns a boolean if a field has been set.
func (o *UserIntent) HasEnableIPV6() bool {
	if o != nil && o.EnableIPV6 != nil {
		return true
	}

	return false
}

// SetEnableIPV6 gets a reference to the given bool and assigns it to the EnableIPV6 field.
func (o *UserIntent) SetEnableIPV6(v bool) {
	o.EnableIPV6 = &v
}

// GetEnableLB returns the EnableLB field value if set, zero value otherwise.
func (o *UserIntent) GetEnableLB() bool {
	if o == nil || o.EnableLB == nil {
		var ret bool
		return ret
	}
	return *o.EnableLB
}

// GetEnableLBOk returns a tuple with the EnableLB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetEnableLBOk() (*bool, bool) {
	if o == nil || o.EnableLB == nil {
		return nil, false
	}
	return o.EnableLB, true
}

// HasEnableLB returns a boolean if a field has been set.
func (o *UserIntent) HasEnableLB() bool {
	if o != nil && o.EnableLB != nil {
		return true
	}

	return false
}

// SetEnableLB gets a reference to the given bool and assigns it to the EnableLB field.
func (o *UserIntent) SetEnableLB(v bool) {
	o.EnableLB = &v
}

// GetEnableNodeToNodeEncrypt returns the EnableNodeToNodeEncrypt field value if set, zero value otherwise.
func (o *UserIntent) GetEnableNodeToNodeEncrypt() bool {
	if o == nil || o.EnableNodeToNodeEncrypt == nil {
		var ret bool
		return ret
	}
	return *o.EnableNodeToNodeEncrypt
}

// GetEnableNodeToNodeEncryptOk returns a tuple with the EnableNodeToNodeEncrypt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetEnableNodeToNodeEncryptOk() (*bool, bool) {
	if o == nil || o.EnableNodeToNodeEncrypt == nil {
		return nil, false
	}
	return o.EnableNodeToNodeEncrypt, true
}

// HasEnableNodeToNodeEncrypt returns a boolean if a field has been set.
func (o *UserIntent) HasEnableNodeToNodeEncrypt() bool {
	if o != nil && o.EnableNodeToNodeEncrypt != nil {
		return true
	}

	return false
}

// SetEnableNodeToNodeEncrypt gets a reference to the given bool and assigns it to the EnableNodeToNodeEncrypt field.
func (o *UserIntent) SetEnableNodeToNodeEncrypt(v bool) {
	o.EnableNodeToNodeEncrypt = &v
}

// GetEnableVolumeEncryption returns the EnableVolumeEncryption field value if set, zero value otherwise.
func (o *UserIntent) GetEnableVolumeEncryption() bool {
	if o == nil || o.EnableVolumeEncryption == nil {
		var ret bool
		return ret
	}
	return *o.EnableVolumeEncryption
}

// GetEnableVolumeEncryptionOk returns a tuple with the EnableVolumeEncryption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetEnableVolumeEncryptionOk() (*bool, bool) {
	if o == nil || o.EnableVolumeEncryption == nil {
		return nil, false
	}
	return o.EnableVolumeEncryption, true
}

// HasEnableVolumeEncryption returns a boolean if a field has been set.
func (o *UserIntent) HasEnableVolumeEncryption() bool {
	if o != nil && o.EnableVolumeEncryption != nil {
		return true
	}

	return false
}

// SetEnableVolumeEncryption gets a reference to the given bool and assigns it to the EnableVolumeEncryption field.
func (o *UserIntent) SetEnableVolumeEncryption(v bool) {
	o.EnableVolumeEncryption = &v
}

// GetEnableYCQL returns the EnableYCQL field value if set, zero value otherwise.
func (o *UserIntent) GetEnableYCQL() bool {
	if o == nil || o.EnableYCQL == nil {
		var ret bool
		return ret
	}
	return *o.EnableYCQL
}

// GetEnableYCQLOk returns a tuple with the EnableYCQL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetEnableYCQLOk() (*bool, bool) {
	if o == nil || o.EnableYCQL == nil {
		return nil, false
	}
	return o.EnableYCQL, true
}

// HasEnableYCQL returns a boolean if a field has been set.
func (o *UserIntent) HasEnableYCQL() bool {
	if o != nil && o.EnableYCQL != nil {
		return true
	}

	return false
}

// SetEnableYCQL gets a reference to the given bool and assigns it to the EnableYCQL field.
func (o *UserIntent) SetEnableYCQL(v bool) {
	o.EnableYCQL = &v
}

// GetEnableYCQLAuth returns the EnableYCQLAuth field value if set, zero value otherwise.
func (o *UserIntent) GetEnableYCQLAuth() bool {
	if o == nil || o.EnableYCQLAuth == nil {
		var ret bool
		return ret
	}
	return *o.EnableYCQLAuth
}

// GetEnableYCQLAuthOk returns a tuple with the EnableYCQLAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetEnableYCQLAuthOk() (*bool, bool) {
	if o == nil || o.EnableYCQLAuth == nil {
		return nil, false
	}
	return o.EnableYCQLAuth, true
}

// HasEnableYCQLAuth returns a boolean if a field has been set.
func (o *UserIntent) HasEnableYCQLAuth() bool {
	if o != nil && o.EnableYCQLAuth != nil {
		return true
	}

	return false
}

// SetEnableYCQLAuth gets a reference to the given bool and assigns it to the EnableYCQLAuth field.
func (o *UserIntent) SetEnableYCQLAuth(v bool) {
	o.EnableYCQLAuth = &v
}

// GetEnableYEDIS returns the EnableYEDIS field value if set, zero value otherwise.
func (o *UserIntent) GetEnableYEDIS() bool {
	if o == nil || o.EnableYEDIS == nil {
		var ret bool
		return ret
	}
	return *o.EnableYEDIS
}

// GetEnableYEDISOk returns a tuple with the EnableYEDIS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetEnableYEDISOk() (*bool, bool) {
	if o == nil || o.EnableYEDIS == nil {
		return nil, false
	}
	return o.EnableYEDIS, true
}

// HasEnableYEDIS returns a boolean if a field has been set.
func (o *UserIntent) HasEnableYEDIS() bool {
	if o != nil && o.EnableYEDIS != nil {
		return true
	}

	return false
}

// SetEnableYEDIS gets a reference to the given bool and assigns it to the EnableYEDIS field.
func (o *UserIntent) SetEnableYEDIS(v bool) {
	o.EnableYEDIS = &v
}

// GetEnableYSQL returns the EnableYSQL field value if set, zero value otherwise.
func (o *UserIntent) GetEnableYSQL() bool {
	if o == nil || o.EnableYSQL == nil {
		var ret bool
		return ret
	}
	return *o.EnableYSQL
}

// GetEnableYSQLOk returns a tuple with the EnableYSQL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetEnableYSQLOk() (*bool, bool) {
	if o == nil || o.EnableYSQL == nil {
		return nil, false
	}
	return o.EnableYSQL, true
}

// HasEnableYSQL returns a boolean if a field has been set.
func (o *UserIntent) HasEnableYSQL() bool {
	if o != nil && o.EnableYSQL != nil {
		return true
	}

	return false
}

// SetEnableYSQL gets a reference to the given bool and assigns it to the EnableYSQL field.
func (o *UserIntent) SetEnableYSQL(v bool) {
	o.EnableYSQL = &v
}

// GetEnableYSQLAuth returns the EnableYSQLAuth field value if set, zero value otherwise.
func (o *UserIntent) GetEnableYSQLAuth() bool {
	if o == nil || o.EnableYSQLAuth == nil {
		var ret bool
		return ret
	}
	return *o.EnableYSQLAuth
}

// GetEnableYSQLAuthOk returns a tuple with the EnableYSQLAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetEnableYSQLAuthOk() (*bool, bool) {
	if o == nil || o.EnableYSQLAuth == nil {
		return nil, false
	}
	return o.EnableYSQLAuth, true
}

// HasEnableYSQLAuth returns a boolean if a field has been set.
func (o *UserIntent) HasEnableYSQLAuth() bool {
	if o != nil && o.EnableYSQLAuth != nil {
		return true
	}

	return false
}

// SetEnableYSQLAuth gets a reference to the given bool and assigns it to the EnableYSQLAuth field.
func (o *UserIntent) SetEnableYSQLAuth(v bool) {
	o.EnableYSQLAuth = &v
}

// GetImageBundleUUID returns the ImageBundleUUID field value if set, zero value otherwise.
func (o *UserIntent) GetImageBundleUUID() string {
	if o == nil || o.ImageBundleUUID == nil {
		var ret string
		return ret
	}
	return *o.ImageBundleUUID
}

// GetImageBundleUUIDOk returns a tuple with the ImageBundleUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetImageBundleUUIDOk() (*string, bool) {
	if o == nil || o.ImageBundleUUID == nil {
		return nil, false
	}
	return o.ImageBundleUUID, true
}

// HasImageBundleUUID returns a boolean if a field has been set.
func (o *UserIntent) HasImageBundleUUID() bool {
	if o != nil && o.ImageBundleUUID != nil {
		return true
	}

	return false
}

// SetImageBundleUUID gets a reference to the given string and assigns it to the ImageBundleUUID field.
func (o *UserIntent) SetImageBundleUUID(v string) {
	o.ImageBundleUUID = &v
}

// GetInstanceTags returns the InstanceTags field value if set, zero value otherwise.
func (o *UserIntent) GetInstanceTags() map[string]string {
	if o == nil || o.InstanceTags == nil {
		var ret map[string]string
		return ret
	}
	return *o.InstanceTags
}

// GetInstanceTagsOk returns a tuple with the InstanceTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetInstanceTagsOk() (*map[string]string, bool) {
	if o == nil || o.InstanceTags == nil {
		return nil, false
	}
	return o.InstanceTags, true
}

// HasInstanceTags returns a boolean if a field has been set.
func (o *UserIntent) HasInstanceTags() bool {
	if o != nil && o.InstanceTags != nil {
		return true
	}

	return false
}

// SetInstanceTags gets a reference to the given map[string]string and assigns it to the InstanceTags field.
func (o *UserIntent) SetInstanceTags(v map[string]string) {
	o.InstanceTags = &v
}

// GetInstanceType returns the InstanceType field value if set, zero value otherwise.
func (o *UserIntent) GetInstanceType() string {
	if o == nil || o.InstanceType == nil {
		var ret string
		return ret
	}
	return *o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetInstanceTypeOk() (*string, bool) {
	if o == nil || o.InstanceType == nil {
		return nil, false
	}
	return o.InstanceType, true
}

// HasInstanceType returns a boolean if a field has been set.
func (o *UserIntent) HasInstanceType() bool {
	if o != nil && o.InstanceType != nil {
		return true
	}

	return false
}

// SetInstanceType gets a reference to the given string and assigns it to the InstanceType field.
func (o *UserIntent) SetInstanceType(v string) {
	o.InstanceType = &v
}

// GetKubernetesOperatorVersion returns the KubernetesOperatorVersion field value if set, zero value otherwise.
func (o *UserIntent) GetKubernetesOperatorVersion() int64 {
	if o == nil || o.KubernetesOperatorVersion == nil {
		var ret int64
		return ret
	}
	return *o.KubernetesOperatorVersion
}

// GetKubernetesOperatorVersionOk returns a tuple with the KubernetesOperatorVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetKubernetesOperatorVersionOk() (*int64, bool) {
	if o == nil || o.KubernetesOperatorVersion == nil {
		return nil, false
	}
	return o.KubernetesOperatorVersion, true
}

// HasKubernetesOperatorVersion returns a boolean if a field has been set.
func (o *UserIntent) HasKubernetesOperatorVersion() bool {
	if o != nil && o.KubernetesOperatorVersion != nil {
		return true
	}

	return false
}

// SetKubernetesOperatorVersion gets a reference to the given int64 and assigns it to the KubernetesOperatorVersion field.
func (o *UserIntent) SetKubernetesOperatorVersion(v int64) {
	o.KubernetesOperatorVersion = &v
}

// GetMasterDeviceInfo returns the MasterDeviceInfo field value if set, zero value otherwise.
func (o *UserIntent) GetMasterDeviceInfo() DeviceInfo {
	if o == nil || o.MasterDeviceInfo == nil {
		var ret DeviceInfo
		return ret
	}
	return *o.MasterDeviceInfo
}

// GetMasterDeviceInfoOk returns a tuple with the MasterDeviceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetMasterDeviceInfoOk() (*DeviceInfo, bool) {
	if o == nil || o.MasterDeviceInfo == nil {
		return nil, false
	}
	return o.MasterDeviceInfo, true
}

// HasMasterDeviceInfo returns a boolean if a field has been set.
func (o *UserIntent) HasMasterDeviceInfo() bool {
	if o != nil && o.MasterDeviceInfo != nil {
		return true
	}

	return false
}

// SetMasterDeviceInfo gets a reference to the given DeviceInfo and assigns it to the MasterDeviceInfo field.
func (o *UserIntent) SetMasterDeviceInfo(v DeviceInfo) {
	o.MasterDeviceInfo = &v
}

// GetMasterGFlags returns the MasterGFlags field value if set, zero value otherwise.
func (o *UserIntent) GetMasterGFlags() map[string]string {
	if o == nil || o.MasterGFlags == nil {
		var ret map[string]string
		return ret
	}
	return *o.MasterGFlags
}

// GetMasterGFlagsOk returns a tuple with the MasterGFlags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetMasterGFlagsOk() (*map[string]string, bool) {
	if o == nil || o.MasterGFlags == nil {
		return nil, false
	}
	return o.MasterGFlags, true
}

// HasMasterGFlags returns a boolean if a field has been set.
func (o *UserIntent) HasMasterGFlags() bool {
	if o != nil && o.MasterGFlags != nil {
		return true
	}

	return false
}

// SetMasterGFlags gets a reference to the given map[string]string and assigns it to the MasterGFlags field.
func (o *UserIntent) SetMasterGFlags(v map[string]string) {
	o.MasterGFlags = &v
}

// GetMasterInstanceType returns the MasterInstanceType field value if set, zero value otherwise.
func (o *UserIntent) GetMasterInstanceType() string {
	if o == nil || o.MasterInstanceType == nil {
		var ret string
		return ret
	}
	return *o.MasterInstanceType
}

// GetMasterInstanceTypeOk returns a tuple with the MasterInstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetMasterInstanceTypeOk() (*string, bool) {
	if o == nil || o.MasterInstanceType == nil {
		return nil, false
	}
	return o.MasterInstanceType, true
}

// HasMasterInstanceType returns a boolean if a field has been set.
func (o *UserIntent) HasMasterInstanceType() bool {
	if o != nil && o.MasterInstanceType != nil {
		return true
	}

	return false
}

// SetMasterInstanceType gets a reference to the given string and assigns it to the MasterInstanceType field.
func (o *UserIntent) SetMasterInstanceType(v string) {
	o.MasterInstanceType = &v
}

// GetMasterK8SNodeResourceSpec returns the MasterK8SNodeResourceSpec field value if set, zero value otherwise.
func (o *UserIntent) GetMasterK8SNodeResourceSpec() K8SNodeResourceSpec {
	if o == nil || o.MasterK8SNodeResourceSpec == nil {
		var ret K8SNodeResourceSpec
		return ret
	}
	return *o.MasterK8SNodeResourceSpec
}

// GetMasterK8SNodeResourceSpecOk returns a tuple with the MasterK8SNodeResourceSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetMasterK8SNodeResourceSpecOk() (*K8SNodeResourceSpec, bool) {
	if o == nil || o.MasterK8SNodeResourceSpec == nil {
		return nil, false
	}
	return o.MasterK8SNodeResourceSpec, true
}

// HasMasterK8SNodeResourceSpec returns a boolean if a field has been set.
func (o *UserIntent) HasMasterK8SNodeResourceSpec() bool {
	if o != nil && o.MasterK8SNodeResourceSpec != nil {
		return true
	}

	return false
}

// SetMasterK8SNodeResourceSpec gets a reference to the given K8SNodeResourceSpec and assigns it to the MasterK8SNodeResourceSpec field.
func (o *UserIntent) SetMasterK8SNodeResourceSpec(v K8SNodeResourceSpec) {
	o.MasterK8SNodeResourceSpec = &v
}

// GetNumNodes returns the NumNodes field value if set, zero value otherwise.
func (o *UserIntent) GetNumNodes() int32 {
	if o == nil || o.NumNodes == nil {
		var ret int32
		return ret
	}
	return *o.NumNodes
}

// GetNumNodesOk returns a tuple with the NumNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetNumNodesOk() (*int32, bool) {
	if o == nil || o.NumNodes == nil {
		return nil, false
	}
	return o.NumNodes, true
}

// HasNumNodes returns a boolean if a field has been set.
func (o *UserIntent) HasNumNodes() bool {
	if o != nil && o.NumNodes != nil {
		return true
	}

	return false
}

// SetNumNodes gets a reference to the given int32 and assigns it to the NumNodes field.
func (o *UserIntent) SetNumNodes(v int32) {
	o.NumNodes = &v
}

// GetPreferredRegion returns the PreferredRegion field value if set, zero value otherwise.
func (o *UserIntent) GetPreferredRegion() string {
	if o == nil || o.PreferredRegion == nil {
		var ret string
		return ret
	}
	return *o.PreferredRegion
}

// GetPreferredRegionOk returns a tuple with the PreferredRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetPreferredRegionOk() (*string, bool) {
	if o == nil || o.PreferredRegion == nil {
		return nil, false
	}
	return o.PreferredRegion, true
}

// HasPreferredRegion returns a boolean if a field has been set.
func (o *UserIntent) HasPreferredRegion() bool {
	if o != nil && o.PreferredRegion != nil {
		return true
	}

	return false
}

// SetPreferredRegion gets a reference to the given string and assigns it to the PreferredRegion field.
func (o *UserIntent) SetPreferredRegion(v string) {
	o.PreferredRegion = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *UserIntent) GetProvider() string {
	if o == nil || o.Provider == nil {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetProviderOk() (*string, bool) {
	if o == nil || o.Provider == nil {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *UserIntent) HasProvider() bool {
	if o != nil && o.Provider != nil {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *UserIntent) SetProvider(v string) {
	o.Provider = &v
}

// GetProviderType returns the ProviderType field value if set, zero value otherwise.
func (o *UserIntent) GetProviderType() string {
	if o == nil || o.ProviderType == nil {
		var ret string
		return ret
	}
	return *o.ProviderType
}

// GetProviderTypeOk returns a tuple with the ProviderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetProviderTypeOk() (*string, bool) {
	if o == nil || o.ProviderType == nil {
		return nil, false
	}
	return o.ProviderType, true
}

// HasProviderType returns a boolean if a field has been set.
func (o *UserIntent) HasProviderType() bool {
	if o != nil && o.ProviderType != nil {
		return true
	}

	return false
}

// SetProviderType gets a reference to the given string and assigns it to the ProviderType field.
func (o *UserIntent) SetProviderType(v string) {
	o.ProviderType = &v
}

// GetRegionList returns the RegionList field value if set, zero value otherwise.
func (o *UserIntent) GetRegionList() []string {
	if o == nil || o.RegionList == nil {
		var ret []string
		return ret
	}
	return *o.RegionList
}

// GetRegionListOk returns a tuple with the RegionList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetRegionListOk() (*[]string, bool) {
	if o == nil || o.RegionList == nil {
		return nil, false
	}
	return o.RegionList, true
}

// HasRegionList returns a boolean if a field has been set.
func (o *UserIntent) HasRegionList() bool {
	if o != nil && o.RegionList != nil {
		return true
	}

	return false
}

// SetRegionList gets a reference to the given []string and assigns it to the RegionList field.
func (o *UserIntent) SetRegionList(v []string) {
	o.RegionList = &v
}

// GetReplicationFactor returns the ReplicationFactor field value if set, zero value otherwise.
func (o *UserIntent) GetReplicationFactor() int32 {
	if o == nil || o.ReplicationFactor == nil {
		var ret int32
		return ret
	}
	return *o.ReplicationFactor
}

// GetReplicationFactorOk returns a tuple with the ReplicationFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetReplicationFactorOk() (*int32, bool) {
	if o == nil || o.ReplicationFactor == nil {
		return nil, false
	}
	return o.ReplicationFactor, true
}

// HasReplicationFactor returns a boolean if a field has been set.
func (o *UserIntent) HasReplicationFactor() bool {
	if o != nil && o.ReplicationFactor != nil {
		return true
	}

	return false
}

// SetReplicationFactor gets a reference to the given int32 and assigns it to the ReplicationFactor field.
func (o *UserIntent) SetReplicationFactor(v int32) {
	o.ReplicationFactor = &v
}

// GetSpecificGFlags returns the SpecificGFlags field value if set, zero value otherwise.
func (o *UserIntent) GetSpecificGFlags() SpecificGFlags {
	if o == nil || o.SpecificGFlags == nil {
		var ret SpecificGFlags
		return ret
	}
	return *o.SpecificGFlags
}

// GetSpecificGFlagsOk returns a tuple with the SpecificGFlags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetSpecificGFlagsOk() (*SpecificGFlags, bool) {
	if o == nil || o.SpecificGFlags == nil {
		return nil, false
	}
	return o.SpecificGFlags, true
}

// HasSpecificGFlags returns a boolean if a field has been set.
func (o *UserIntent) HasSpecificGFlags() bool {
	if o != nil && o.SpecificGFlags != nil {
		return true
	}

	return false
}

// SetSpecificGFlags gets a reference to the given SpecificGFlags and assigns it to the SpecificGFlags field.
func (o *UserIntent) SetSpecificGFlags(v SpecificGFlags) {
	o.SpecificGFlags = &v
}

// GetSpotPrice returns the SpotPrice field value if set, zero value otherwise.
func (o *UserIntent) GetSpotPrice() float64 {
	if o == nil || o.SpotPrice == nil {
		var ret float64
		return ret
	}
	return *o.SpotPrice
}

// GetSpotPriceOk returns a tuple with the SpotPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetSpotPriceOk() (*float64, bool) {
	if o == nil || o.SpotPrice == nil {
		return nil, false
	}
	return o.SpotPrice, true
}

// HasSpotPrice returns a boolean if a field has been set.
func (o *UserIntent) HasSpotPrice() bool {
	if o != nil && o.SpotPrice != nil {
		return true
	}

	return false
}

// SetSpotPrice gets a reference to the given float64 and assigns it to the SpotPrice field.
func (o *UserIntent) SetSpotPrice(v float64) {
	o.SpotPrice = &v
}

// GetTserverGFlags returns the TserverGFlags field value if set, zero value otherwise.
func (o *UserIntent) GetTserverGFlags() map[string]string {
	if o == nil || o.TserverGFlags == nil {
		var ret map[string]string
		return ret
	}
	return *o.TserverGFlags
}

// GetTserverGFlagsOk returns a tuple with the TserverGFlags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetTserverGFlagsOk() (*map[string]string, bool) {
	if o == nil || o.TserverGFlags == nil {
		return nil, false
	}
	return o.TserverGFlags, true
}

// HasTserverGFlags returns a boolean if a field has been set.
func (o *UserIntent) HasTserverGFlags() bool {
	if o != nil && o.TserverGFlags != nil {
		return true
	}

	return false
}

// SetTserverGFlags gets a reference to the given map[string]string and assigns it to the TserverGFlags field.
func (o *UserIntent) SetTserverGFlags(v map[string]string) {
	o.TserverGFlags = &v
}

// GetTserverK8SNodeResourceSpec returns the TserverK8SNodeResourceSpec field value if set, zero value otherwise.
func (o *UserIntent) GetTserverK8SNodeResourceSpec() K8SNodeResourceSpec {
	if o == nil || o.TserverK8SNodeResourceSpec == nil {
		var ret K8SNodeResourceSpec
		return ret
	}
	return *o.TserverK8SNodeResourceSpec
}

// GetTserverK8SNodeResourceSpecOk returns a tuple with the TserverK8SNodeResourceSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetTserverK8SNodeResourceSpecOk() (*K8SNodeResourceSpec, bool) {
	if o == nil || o.TserverK8SNodeResourceSpec == nil {
		return nil, false
	}
	return o.TserverK8SNodeResourceSpec, true
}

// HasTserverK8SNodeResourceSpec returns a boolean if a field has been set.
func (o *UserIntent) HasTserverK8SNodeResourceSpec() bool {
	if o != nil && o.TserverK8SNodeResourceSpec != nil {
		return true
	}

	return false
}

// SetTserverK8SNodeResourceSpec gets a reference to the given K8SNodeResourceSpec and assigns it to the TserverK8SNodeResourceSpec field.
func (o *UserIntent) SetTserverK8SNodeResourceSpec(v K8SNodeResourceSpec) {
	o.TserverK8SNodeResourceSpec = &v
}

// GetUniverseName returns the UniverseName field value if set, zero value otherwise.
func (o *UserIntent) GetUniverseName() string {
	if o == nil || o.UniverseName == nil {
		var ret string
		return ret
	}
	return *o.UniverseName
}

// GetUniverseNameOk returns a tuple with the UniverseName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetUniverseNameOk() (*string, bool) {
	if o == nil || o.UniverseName == nil {
		return nil, false
	}
	return o.UniverseName, true
}

// HasUniverseName returns a boolean if a field has been set.
func (o *UserIntent) HasUniverseName() bool {
	if o != nil && o.UniverseName != nil {
		return true
	}

	return false
}

// SetUniverseName gets a reference to the given string and assigns it to the UniverseName field.
func (o *UserIntent) SetUniverseName(v string) {
	o.UniverseName = &v
}

// GetUniverseOverrides returns the UniverseOverrides field value if set, zero value otherwise.
func (o *UserIntent) GetUniverseOverrides() string {
	if o == nil || o.UniverseOverrides == nil {
		var ret string
		return ret
	}
	return *o.UniverseOverrides
}

// GetUniverseOverridesOk returns a tuple with the UniverseOverrides field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetUniverseOverridesOk() (*string, bool) {
	if o == nil || o.UniverseOverrides == nil {
		return nil, false
	}
	return o.UniverseOverrides, true
}

// HasUniverseOverrides returns a boolean if a field has been set.
func (o *UserIntent) HasUniverseOverrides() bool {
	if o != nil && o.UniverseOverrides != nil {
		return true
	}

	return false
}

// SetUniverseOverrides gets a reference to the given string and assigns it to the UniverseOverrides field.
func (o *UserIntent) SetUniverseOverrides(v string) {
	o.UniverseOverrides = &v
}

// GetUseHostname returns the UseHostname field value if set, zero value otherwise.
func (o *UserIntent) GetUseHostname() bool {
	if o == nil || o.UseHostname == nil {
		var ret bool
		return ret
	}
	return *o.UseHostname
}

// GetUseHostnameOk returns a tuple with the UseHostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetUseHostnameOk() (*bool, bool) {
	if o == nil || o.UseHostname == nil {
		return nil, false
	}
	return o.UseHostname, true
}

// HasUseHostname returns a boolean if a field has been set.
func (o *UserIntent) HasUseHostname() bool {
	if o != nil && o.UseHostname != nil {
		return true
	}

	return false
}

// SetUseHostname gets a reference to the given bool and assigns it to the UseHostname field.
func (o *UserIntent) SetUseHostname(v bool) {
	o.UseHostname = &v
}

// GetUseSpotInstance returns the UseSpotInstance field value if set, zero value otherwise.
func (o *UserIntent) GetUseSpotInstance() bool {
	if o == nil || o.UseSpotInstance == nil {
		var ret bool
		return ret
	}
	return *o.UseSpotInstance
}

// GetUseSpotInstanceOk returns a tuple with the UseSpotInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetUseSpotInstanceOk() (*bool, bool) {
	if o == nil || o.UseSpotInstance == nil {
		return nil, false
	}
	return o.UseSpotInstance, true
}

// HasUseSpotInstance returns a boolean if a field has been set.
func (o *UserIntent) HasUseSpotInstance() bool {
	if o != nil && o.UseSpotInstance != nil {
		return true
	}

	return false
}

// SetUseSpotInstance gets a reference to the given bool and assigns it to the UseSpotInstance field.
func (o *UserIntent) SetUseSpotInstance(v bool) {
	o.UseSpotInstance = &v
}

// GetUseSystemd returns the UseSystemd field value if set, zero value otherwise.
func (o *UserIntent) GetUseSystemd() bool {
	if o == nil || o.UseSystemd == nil {
		var ret bool
		return ret
	}
	return *o.UseSystemd
}

// GetUseSystemdOk returns a tuple with the UseSystemd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetUseSystemdOk() (*bool, bool) {
	if o == nil || o.UseSystemd == nil {
		return nil, false
	}
	return o.UseSystemd, true
}

// HasUseSystemd returns a boolean if a field has been set.
func (o *UserIntent) HasUseSystemd() bool {
	if o != nil && o.UseSystemd != nil {
		return true
	}

	return false
}

// SetUseSystemd gets a reference to the given bool and assigns it to the UseSystemd field.
func (o *UserIntent) SetUseSystemd(v bool) {
	o.UseSystemd = &v
}

// GetUseTimeSync returns the UseTimeSync field value if set, zero value otherwise.
func (o *UserIntent) GetUseTimeSync() bool {
	if o == nil || o.UseTimeSync == nil {
		var ret bool
		return ret
	}
	return *o.UseTimeSync
}

// GetUseTimeSyncOk returns a tuple with the UseTimeSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetUseTimeSyncOk() (*bool, bool) {
	if o == nil || o.UseTimeSync == nil {
		return nil, false
	}
	return o.UseTimeSync, true
}

// HasUseTimeSync returns a boolean if a field has been set.
func (o *UserIntent) HasUseTimeSync() bool {
	if o != nil && o.UseTimeSync != nil {
		return true
	}

	return false
}

// SetUseTimeSync gets a reference to the given bool and assigns it to the UseTimeSync field.
func (o *UserIntent) SetUseTimeSync(v bool) {
	o.UseTimeSync = &v
}

// GetYbSoftwareVersion returns the YbSoftwareVersion field value if set, zero value otherwise.
func (o *UserIntent) GetYbSoftwareVersion() string {
	if o == nil || o.YbSoftwareVersion == nil {
		var ret string
		return ret
	}
	return *o.YbSoftwareVersion
}

// GetYbSoftwareVersionOk returns a tuple with the YbSoftwareVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetYbSoftwareVersionOk() (*string, bool) {
	if o == nil || o.YbSoftwareVersion == nil {
		return nil, false
	}
	return o.YbSoftwareVersion, true
}

// HasYbSoftwareVersion returns a boolean if a field has been set.
func (o *UserIntent) HasYbSoftwareVersion() bool {
	if o != nil && o.YbSoftwareVersion != nil {
		return true
	}

	return false
}

// SetYbSoftwareVersion gets a reference to the given string and assigns it to the YbSoftwareVersion field.
func (o *UserIntent) SetYbSoftwareVersion(v string) {
	o.YbSoftwareVersion = &v
}

// GetYbcFlags returns the YbcFlags field value if set, zero value otherwise.
func (o *UserIntent) GetYbcFlags() map[string]string {
	if o == nil || o.YbcFlags == nil {
		var ret map[string]string
		return ret
	}
	return *o.YbcFlags
}

// GetYbcFlagsOk returns a tuple with the YbcFlags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetYbcFlagsOk() (*map[string]string, bool) {
	if o == nil || o.YbcFlags == nil {
		return nil, false
	}
	return o.YbcFlags, true
}

// HasYbcFlags returns a boolean if a field has been set.
func (o *UserIntent) HasYbcFlags() bool {
	if o != nil && o.YbcFlags != nil {
		return true
	}

	return false
}

// SetYbcFlags gets a reference to the given map[string]string and assigns it to the YbcFlags field.
func (o *UserIntent) SetYbcFlags(v map[string]string) {
	o.YbcFlags = &v
}

// GetYcqlPassword returns the YcqlPassword field value if set, zero value otherwise.
func (o *UserIntent) GetYcqlPassword() string {
	if o == nil || o.YcqlPassword == nil {
		var ret string
		return ret
	}
	return *o.YcqlPassword
}

// GetYcqlPasswordOk returns a tuple with the YcqlPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetYcqlPasswordOk() (*string, bool) {
	if o == nil || o.YcqlPassword == nil {
		return nil, false
	}
	return o.YcqlPassword, true
}

// HasYcqlPassword returns a boolean if a field has been set.
func (o *UserIntent) HasYcqlPassword() bool {
	if o != nil && o.YcqlPassword != nil {
		return true
	}

	return false
}

// SetYcqlPassword gets a reference to the given string and assigns it to the YcqlPassword field.
func (o *UserIntent) SetYcqlPassword(v string) {
	o.YcqlPassword = &v
}

// GetYsqlPassword returns the YsqlPassword field value if set, zero value otherwise.
func (o *UserIntent) GetYsqlPassword() string {
	if o == nil || o.YsqlPassword == nil {
		var ret string
		return ret
	}
	return *o.YsqlPassword
}

// GetYsqlPasswordOk returns a tuple with the YsqlPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserIntent) GetYsqlPasswordOk() (*string, bool) {
	if o == nil || o.YsqlPassword == nil {
		return nil, false
	}
	return o.YsqlPassword, true
}

// HasYsqlPassword returns a boolean if a field has been set.
func (o *UserIntent) HasYsqlPassword() bool {
	if o != nil && o.YsqlPassword != nil {
		return true
	}

	return false
}

// SetYsqlPassword gets a reference to the given string and assigns it to the YsqlPassword field.
func (o *UserIntent) SetYsqlPassword(v string) {
	o.YsqlPassword = &v
}

func (o UserIntent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKeyCode != nil {
		toSerialize["accessKeyCode"] = o.AccessKeyCode
	}
	if o.AssignPublicIP != nil {
		toSerialize["assignPublicIP"] = o.AssignPublicIP
	}
	if o.AssignStaticPublicIP != nil {
		toSerialize["assignStaticPublicIP"] = o.AssignStaticPublicIP
	}
	if o.AwsArnString != nil {
		toSerialize["awsArnString"] = o.AwsArnString
	}
	if o.AzOverrides != nil {
		toSerialize["azOverrides"] = o.AzOverrides
	}
	if o.CgroupSize != nil {
		toSerialize["cgroupSize"] = o.CgroupSize
	}
	if o.DedicatedNodes != nil {
		toSerialize["dedicatedNodes"] = o.DedicatedNodes
	}
	if o.DeviceInfo != nil {
		toSerialize["deviceInfo"] = o.DeviceInfo
	}
	if o.EnableClientToNodeEncrypt != nil {
		toSerialize["enableClientToNodeEncrypt"] = o.EnableClientToNodeEncrypt
	}
	if o.EnableExposingService != nil {
		toSerialize["enableExposingService"] = o.EnableExposingService
	}
	if o.EnableIPV6 != nil {
		toSerialize["enableIPV6"] = o.EnableIPV6
	}
	if o.EnableLB != nil {
		toSerialize["enableLB"] = o.EnableLB
	}
	if o.EnableNodeToNodeEncrypt != nil {
		toSerialize["enableNodeToNodeEncrypt"] = o.EnableNodeToNodeEncrypt
	}
	if o.EnableVolumeEncryption != nil {
		toSerialize["enableVolumeEncryption"] = o.EnableVolumeEncryption
	}
	if o.EnableYCQL != nil {
		toSerialize["enableYCQL"] = o.EnableYCQL
	}
	if o.EnableYCQLAuth != nil {
		toSerialize["enableYCQLAuth"] = o.EnableYCQLAuth
	}
	if o.EnableYEDIS != nil {
		toSerialize["enableYEDIS"] = o.EnableYEDIS
	}
	if o.EnableYSQL != nil {
		toSerialize["enableYSQL"] = o.EnableYSQL
	}
	if o.EnableYSQLAuth != nil {
		toSerialize["enableYSQLAuth"] = o.EnableYSQLAuth
	}
	if o.ImageBundleUUID != nil {
		toSerialize["imageBundleUUID"] = o.ImageBundleUUID
	}
	if o.InstanceTags != nil {
		toSerialize["instanceTags"] = o.InstanceTags
	}
	if o.InstanceType != nil {
		toSerialize["instanceType"] = o.InstanceType
	}
	if o.KubernetesOperatorVersion != nil {
		toSerialize["kubernetesOperatorVersion"] = o.KubernetesOperatorVersion
	}
	if o.MasterDeviceInfo != nil {
		toSerialize["masterDeviceInfo"] = o.MasterDeviceInfo
	}
	if o.MasterGFlags != nil {
		toSerialize["masterGFlags"] = o.MasterGFlags
	}
	if o.MasterInstanceType != nil {
		toSerialize["masterInstanceType"] = o.MasterInstanceType
	}
	if o.MasterK8SNodeResourceSpec != nil {
		toSerialize["masterK8SNodeResourceSpec"] = o.MasterK8SNodeResourceSpec
	}
	if o.NumNodes != nil {
		toSerialize["numNodes"] = o.NumNodes
	}
	if o.PreferredRegion != nil {
		toSerialize["preferredRegion"] = o.PreferredRegion
	}
	if o.Provider != nil {
		toSerialize["provider"] = o.Provider
	}
	if o.ProviderType != nil {
		toSerialize["providerType"] = o.ProviderType
	}
	if o.RegionList != nil {
		toSerialize["regionList"] = o.RegionList
	}
	if o.ReplicationFactor != nil {
		toSerialize["replicationFactor"] = o.ReplicationFactor
	}
	if o.SpecificGFlags != nil {
		toSerialize["specificGFlags"] = o.SpecificGFlags
	}
	if o.SpotPrice != nil {
		toSerialize["spotPrice"] = o.SpotPrice
	}
	if o.TserverGFlags != nil {
		toSerialize["tserverGFlags"] = o.TserverGFlags
	}
	if o.TserverK8SNodeResourceSpec != nil {
		toSerialize["tserverK8SNodeResourceSpec"] = o.TserverK8SNodeResourceSpec
	}
	if o.UniverseName != nil {
		toSerialize["universeName"] = o.UniverseName
	}
	if o.UniverseOverrides != nil {
		toSerialize["universeOverrides"] = o.UniverseOverrides
	}
	if o.UseHostname != nil {
		toSerialize["useHostname"] = o.UseHostname
	}
	if o.UseSpotInstance != nil {
		toSerialize["useSpotInstance"] = o.UseSpotInstance
	}
	if o.UseSystemd != nil {
		toSerialize["useSystemd"] = o.UseSystemd
	}
	if o.UseTimeSync != nil {
		toSerialize["useTimeSync"] = o.UseTimeSync
	}
	if o.YbSoftwareVersion != nil {
		toSerialize["ybSoftwareVersion"] = o.YbSoftwareVersion
	}
	if o.YbcFlags != nil {
		toSerialize["ybcFlags"] = o.YbcFlags
	}
	if o.YcqlPassword != nil {
		toSerialize["ycqlPassword"] = o.YcqlPassword
	}
	if o.YsqlPassword != nil {
		toSerialize["ysqlPassword"] = o.YsqlPassword
	}
	return json.Marshal(toSerialize)
}

type NullableUserIntent struct {
	value *UserIntent
	isSet bool
}

func (v NullableUserIntent) Get() *UserIntent {
	return v.value
}

func (v *NullableUserIntent) Set(val *UserIntent) {
	v.value = val
	v.isSet = true
}

func (v NullableUserIntent) IsSet() bool {
	return v.isSet
}

func (v *NullableUserIntent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserIntent(val *UserIntent) *NullableUserIntent {
	return &NullableUserIntent{value: val, isSet: true}
}

func (v NullableUserIntent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserIntent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


