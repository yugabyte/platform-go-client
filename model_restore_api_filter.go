/*
 * YugabyteDB Anywhere APIs
 *
 * ALPHA - NOT FOR EXTERNAL USE
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ywclient

import (
	"encoding/json"
	"time"
)

// RestoreApiFilter struct for RestoreApiFilter
type RestoreApiFilter struct {
	// The end date to filter paged query.
	DateRangeEnd *time.Time `json:"dateRangeEnd,omitempty"`
	// The start date to filter paged query.
	DateRangeStart *time.Time `json:"dateRangeStart,omitempty"`
	OnlyShowDeletedSourceUniverses bool `json:"onlyShowDeletedSourceUniverses"`
	SourceUniverseNameList []string `json:"sourceUniverseNameList"`
	States []string `json:"states"`
	StorageConfigUUIDList []string `json:"storageConfigUUIDList"`
	UniverseNameList []string `json:"universeNameList"`
	UniverseUUIDList []string `json:"universeUUIDList"`
}

// NewRestoreApiFilter instantiates a new RestoreApiFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreApiFilter(onlyShowDeletedSourceUniverses bool, sourceUniverseNameList []string, states []string, storageConfigUUIDList []string, universeNameList []string, universeUUIDList []string) *RestoreApiFilter {
	this := RestoreApiFilter{}
	this.OnlyShowDeletedSourceUniverses = onlyShowDeletedSourceUniverses
	this.SourceUniverseNameList = sourceUniverseNameList
	this.States = states
	this.StorageConfigUUIDList = storageConfigUUIDList
	this.UniverseNameList = universeNameList
	this.UniverseUUIDList = universeUUIDList
	return &this
}

// NewRestoreApiFilterWithDefaults instantiates a new RestoreApiFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreApiFilterWithDefaults() *RestoreApiFilter {
	this := RestoreApiFilter{}
	return &this
}

// GetDateRangeEnd returns the DateRangeEnd field value if set, zero value otherwise.
func (o *RestoreApiFilter) GetDateRangeEnd() time.Time {
	if o == nil || o.DateRangeEnd == nil {
		var ret time.Time
		return ret
	}
	return *o.DateRangeEnd
}

// GetDateRangeEndOk returns a tuple with the DateRangeEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreApiFilter) GetDateRangeEndOk() (*time.Time, bool) {
	if o == nil || o.DateRangeEnd == nil {
		return nil, false
	}
	return o.DateRangeEnd, true
}

// HasDateRangeEnd returns a boolean if a field has been set.
func (o *RestoreApiFilter) HasDateRangeEnd() bool {
	if o != nil && o.DateRangeEnd != nil {
		return true
	}

	return false
}

// SetDateRangeEnd gets a reference to the given time.Time and assigns it to the DateRangeEnd field.
func (o *RestoreApiFilter) SetDateRangeEnd(v time.Time) {
	o.DateRangeEnd = &v
}

// GetDateRangeStart returns the DateRangeStart field value if set, zero value otherwise.
func (o *RestoreApiFilter) GetDateRangeStart() time.Time {
	if o == nil || o.DateRangeStart == nil {
		var ret time.Time
		return ret
	}
	return *o.DateRangeStart
}

// GetDateRangeStartOk returns a tuple with the DateRangeStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreApiFilter) GetDateRangeStartOk() (*time.Time, bool) {
	if o == nil || o.DateRangeStart == nil {
		return nil, false
	}
	return o.DateRangeStart, true
}

// HasDateRangeStart returns a boolean if a field has been set.
func (o *RestoreApiFilter) HasDateRangeStart() bool {
	if o != nil && o.DateRangeStart != nil {
		return true
	}

	return false
}

// SetDateRangeStart gets a reference to the given time.Time and assigns it to the DateRangeStart field.
func (o *RestoreApiFilter) SetDateRangeStart(v time.Time) {
	o.DateRangeStart = &v
}

// GetOnlyShowDeletedSourceUniverses returns the OnlyShowDeletedSourceUniverses field value
func (o *RestoreApiFilter) GetOnlyShowDeletedSourceUniverses() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.OnlyShowDeletedSourceUniverses
}

// GetOnlyShowDeletedSourceUniversesOk returns a tuple with the OnlyShowDeletedSourceUniverses field value
// and a boolean to check if the value has been set.
func (o *RestoreApiFilter) GetOnlyShowDeletedSourceUniversesOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OnlyShowDeletedSourceUniverses, true
}

// SetOnlyShowDeletedSourceUniverses sets field value
func (o *RestoreApiFilter) SetOnlyShowDeletedSourceUniverses(v bool) {
	o.OnlyShowDeletedSourceUniverses = v
}

// GetSourceUniverseNameList returns the SourceUniverseNameList field value
func (o *RestoreApiFilter) GetSourceUniverseNameList() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SourceUniverseNameList
}

// GetSourceUniverseNameListOk returns a tuple with the SourceUniverseNameList field value
// and a boolean to check if the value has been set.
func (o *RestoreApiFilter) GetSourceUniverseNameListOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SourceUniverseNameList, true
}

// SetSourceUniverseNameList sets field value
func (o *RestoreApiFilter) SetSourceUniverseNameList(v []string) {
	o.SourceUniverseNameList = v
}

// GetStates returns the States field value
func (o *RestoreApiFilter) GetStates() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.States
}

// GetStatesOk returns a tuple with the States field value
// and a boolean to check if the value has been set.
func (o *RestoreApiFilter) GetStatesOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.States, true
}

// SetStates sets field value
func (o *RestoreApiFilter) SetStates(v []string) {
	o.States = v
}

// GetStorageConfigUUIDList returns the StorageConfigUUIDList field value
func (o *RestoreApiFilter) GetStorageConfigUUIDList() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.StorageConfigUUIDList
}

// GetStorageConfigUUIDListOk returns a tuple with the StorageConfigUUIDList field value
// and a boolean to check if the value has been set.
func (o *RestoreApiFilter) GetStorageConfigUUIDListOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StorageConfigUUIDList, true
}

// SetStorageConfigUUIDList sets field value
func (o *RestoreApiFilter) SetStorageConfigUUIDList(v []string) {
	o.StorageConfigUUIDList = v
}

// GetUniverseNameList returns the UniverseNameList field value
func (o *RestoreApiFilter) GetUniverseNameList() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.UniverseNameList
}

// GetUniverseNameListOk returns a tuple with the UniverseNameList field value
// and a boolean to check if the value has been set.
func (o *RestoreApiFilter) GetUniverseNameListOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UniverseNameList, true
}

// SetUniverseNameList sets field value
func (o *RestoreApiFilter) SetUniverseNameList(v []string) {
	o.UniverseNameList = v
}

// GetUniverseUUIDList returns the UniverseUUIDList field value
func (o *RestoreApiFilter) GetUniverseUUIDList() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.UniverseUUIDList
}

// GetUniverseUUIDListOk returns a tuple with the UniverseUUIDList field value
// and a boolean to check if the value has been set.
func (o *RestoreApiFilter) GetUniverseUUIDListOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UniverseUUIDList, true
}

// SetUniverseUUIDList sets field value
func (o *RestoreApiFilter) SetUniverseUUIDList(v []string) {
	o.UniverseUUIDList = v
}

func (o RestoreApiFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DateRangeEnd != nil {
		toSerialize["dateRangeEnd"] = o.DateRangeEnd
	}
	if o.DateRangeStart != nil {
		toSerialize["dateRangeStart"] = o.DateRangeStart
	}
	if true {
		toSerialize["onlyShowDeletedSourceUniverses"] = o.OnlyShowDeletedSourceUniverses
	}
	if true {
		toSerialize["sourceUniverseNameList"] = o.SourceUniverseNameList
	}
	if true {
		toSerialize["states"] = o.States
	}
	if true {
		toSerialize["storageConfigUUIDList"] = o.StorageConfigUUIDList
	}
	if true {
		toSerialize["universeNameList"] = o.UniverseNameList
	}
	if true {
		toSerialize["universeUUIDList"] = o.UniverseUUIDList
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreApiFilter struct {
	value *RestoreApiFilter
	isSet bool
}

func (v NullableRestoreApiFilter) Get() *RestoreApiFilter {
	return v.value
}

func (v *NullableRestoreApiFilter) Set(val *RestoreApiFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreApiFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreApiFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreApiFilter(val *RestoreApiFilter) *NullableRestoreApiFilter {
	return &NullableRestoreApiFilter{value: val, isSet: true}
}

func (v NullableRestoreApiFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreApiFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


